[{"title":"【Python零基礎】_Day04_01_元祖 tuple","url":"/2021/12/28/2021-12-28-%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day04-01-%E5%85%83%E7%A5%96-tuple/","content":"<h2 id=\"定義\"><a href=\"#定義\" class=\"headerlink\" title=\"定義\"></a>定義</h2><ol>\n<li>由一系列變數組成的不可變序列容器。</li>\n<li>不可變是指一但創建，不可以再添加&#x2F;刪除&#x2F;修改元素。<span id=\"more\"></span></li>\n</ol>\n<h2 id=\"基礎操作\"><a href=\"#基礎操作\" class=\"headerlink\" title=\"基礎操作\"></a>基礎操作</h2><ul>\n<li><p>創建空元組：<br>元組名 &#x3D; ()<br>元組名 &#x3D; tuple()</p>\n</li>\n<li><p>創建非空元組：<br>元組名 &#x3D; (20,)<br>元組名 &#x3D; (1, 2, 3)<br>元組名 &#x3D; 100,200,300<br>元組名 &#x3D; tuple(可反覆運算對象)</p>\n</li>\n<li><p>獲取元素：<br>變數 &#x3D; 元組名[索引]<br>變數 &#x3D; 元組名[切片] # 賦值給變數的是切片所創建的新列表</p>\n</li>\n<li><p>遍歷元組：</p>\n</li>\n</ul>\n<h3 id=\"正向：\"><a href=\"#正向：\" class=\"headerlink\" title=\"正向：\"></a>正向：</h3><p>for 變數名 in 列表名:<br>變數名就是元素</p>\n<h3 id=\"反向：\"><a href=\"#反向：\" class=\"headerlink\" title=\"反向：\"></a>反向：</h3><p>for 索引名 in range(len(列表名)-1,-1,-1):<br>元組名[索引名]就是元素</p>\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2><ol>\n<li><p>元組與清單都可以存儲一系列變數，由於清單會預留記憶體空間，所以可以增加元素。</p>\n</li>\n<li><p>元組會按需分配記憶體，所以如果變數數量固定，建議使用元組，因為佔用空間更小。</p>\n</li>\n<li><p>應用：</p>\n<ul>\n<li>變數交換的本質就是創建元組：x, y &#x3D; （y, x ）</li>\n<li>格式化字串的本質就是創建元祖：”姓名:%s, 年齡:%d”  % (“tarena”, 15)</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    元組tuple</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 1. 創建</span></span><br><span class=\"line\">tuple01 = ()</span><br><span class=\"line\">tuple02 = <span class=\"built_in\">tuple</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">tuple01 = (<span class=\"number\">12</span>, <span class=\"number\">33</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\">list01 = [<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>]</span><br><span class=\"line\">tuple02 = <span class=\"built_in\">tuple</span>(list01)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(tuple02)</span><br><span class=\"line\">list03 = <span class=\"built_in\">list</span>(tuple01)</span><br><span class=\"line\"></span><br><span class=\"line\">tuple02 = (<span class=\"number\">1</span>,)  <span class=\"comment\"># 元組中只有一個元素</span></span><br><span class=\"line\">tuple02 = <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>  <span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(tuple02)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 查詢</span></span><br><span class=\"line\">tuple03 = (<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>)</span><br><span class=\"line\">a, b, c = tuple03</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 索引</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(tuple02[-<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切片</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(tuple02[:<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 迴圈</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> tuple02:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day04_03_集合 set","url":"/2021/12/28/2021-12-28-%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day04-03-%E9%9B%86%E5%90%88-set/","content":"<h2 id=\"定義\"><a href=\"#定義\" class=\"headerlink\" title=\"定義\"></a>定義</h2><ol>\n<li>由一系列不重複的不可變類型變數(元組&#x2F;數&#x2F;字串)組成的可變散列容器。</li>\n<li>相當於只有鍵沒有值的字典(鍵則是集合的資料)。<span id=\"more\"></span></li>\n</ol>\n<h2 id=\"基礎操作\"><a href=\"#基礎操作\" class=\"headerlink\" title=\"基礎操作\"></a>基礎操作</h2><ul>\n<li><p>創建空集合：<br>集合名 &#x3D; set()<br>集合名 &#x3D; set(可反覆運算物件)</p>\n</li>\n<li><p>創建具有預設值集合：<br>集合名 &#x3D; {1, 2, 3}<br>集合名 &#x3D; set(可反覆運算物件)</p>\n</li>\n<li><p>添加元素：<br>集合名.add(元素)</p>\n</li>\n<li><p>刪除元素：<br>集合名.discard(元素)</p>\n</li>\n</ul>\n<h2 id=\"運算\"><a href=\"#運算\" class=\"headerlink\" title=\"運算\"></a>運算</h2><h3 id=\"交集-amp-：返回共同元素。\"><a href=\"#交集-amp-：返回共同元素。\" class=\"headerlink\" title=\"交集&amp;：返回共同元素。\"></a>交集&amp;：返回共同元素。</h3><p>s1 &#x3D; {1, 2, 3}<br>s2 &#x3D; {2, 3, 4}<br>s3 &#x3D; s1 &amp; s2  # {2, 3}</p>\n<h3 id=\"並集：返回不重複元素\"><a href=\"#並集：返回不重複元素\" class=\"headerlink\" title=\"並集：返回不重複元素\"></a>並集：返回不重複元素</h3><p>s1 &#x3D; {1, 2, 3}<br>s2 &#x3D; {2, 3, 4}<br>s3 &#x3D; s1 | s2  # {1, 2, 3, 4}</p>\n<h3 id=\"補集-：返回只屬於其中之一的元素\"><a href=\"#補集-：返回只屬於其中之一的元素\" class=\"headerlink\" title=\"補集-：返回只屬於其中之一的元素\"></a>補集-：返回只屬於其中之一的元素</h3><p>s1 &#x3D; {1, 2, 3}<br>s2 &#x3D; {2, 3, 4}<br>s1 - s2  # {1} 屬於s1但不屬於s2</p>\n<p>補集^：返回不同的的元素<br>s1 &#x3D; {1, 2, 3}<br>s2 &#x3D; {2, 3, 4}<br>s3 &#x3D; s1 ^ s2  # {1, 4}  等同於(s1-s2 | s2-s1)</p>\n<h3 id=\"子集-lt-：判斷一個集合的所有元素是否完全在另一個集合中\"><a href=\"#子集-lt-：判斷一個集合的所有元素是否完全在另一個集合中\" class=\"headerlink\" title=\"子集&lt;：判斷一個集合的所有元素是否完全在另一個集合中\"></a>子集&lt;：判斷一個集合的所有元素是否完全在另一個集合中</h3><h3 id=\"超集合-gt-：判斷一個集合是否具有另一個集合的所有元素\"><a href=\"#超集合-gt-：判斷一個集合是否具有另一個集合的所有元素\" class=\"headerlink\" title=\"超集合&gt;：判斷一個集合是否具有另一個集合的所有元素\"></a>超集合&gt;：判斷一個集合是否具有另一個集合的所有元素</h3><p>s1 &#x3D; {1, 2, 3}<br>s2 &#x3D; {2, 3}<br>s2 &lt; s1  # True<br>s1 &gt; s2  # True</p>\n<h3 id=\"相同或不同-x3D-x3D-x3D-：判斷集合中的所有元素是否和另一個集合相同。\"><a href=\"#相同或不同-x3D-x3D-x3D-：判斷集合中的所有元素是否和另一個集合相同。\" class=\"headerlink\" title=\"相同或不同&#x3D;&#x3D; !&#x3D;：判斷集合中的所有元素是否和另一個集合相同。\"></a>相同或不同&#x3D;&#x3D; !&#x3D;：判斷集合中的所有元素是否和另一個集合相同。</h3><p>s1 &#x3D; {1, 2, 3}<br>s2 &#x3D; {3, 2, 1}<br>s1 &#x3D;&#x3D; s2  # True<br>s1 !&#x3D; s2  # False</p>\n<p>子集或相同,超集合或相同 &lt;&#x3D;  &gt;&#x3D;</p>\n<h2 id=\"集合推導式\"><a href=\"#集合推導式\" class=\"headerlink\" title=\"集合推導式\"></a>集合推導式</h2><ul>\n<li><p>定義：<br>使用簡易方法，將可反覆運算物件轉換為集合。</p>\n</li>\n<li><p>語法:<br>{運算式 for 變數 in 可反覆運算物件}<br>{運算式 for 變數 in 可反覆運算物件 if 條件}</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    集合set</span></span><br><span class=\"line\"><span class=\"string\">        價值：去重複</span></span><br><span class=\"line\"><span class=\"string\">             數學運算</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 1. 創建</span></span><br><span class=\"line\">set01 = <span class=\"built_in\">set</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">set02 = &#123;<span class=\"string\">&quot;唐僧&quot;</span>, <span class=\"string\">&quot;悟空&quot;</span>, <span class=\"string\">&quot;八戒&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">list01 = [<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>, <span class=\"string\">&quot;A&quot;</span>]</span><br><span class=\"line\">set03 = <span class=\"built_in\">set</span>(list01)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set03)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">set</span>(<span class=\"string\">&quot;abcacdb&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 添加</span></span><br><span class=\"line\">set01.add(<span class=\"string\">&quot;A&quot;</span>)</span><br><span class=\"line\">set01.add(<span class=\"string\">&quot;A&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set01)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 刪除</span></span><br><span class=\"line\">set02.remove(<span class=\"string\">&quot;唐僧&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">&quot;唐三藏&quot;</span> <span class=\"keyword\">in</span> set02: set02.remove(<span class=\"string\">&quot;唐三藏&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set02)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 迴圈</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> set02:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 數學計算</span></span><br><span class=\"line\">set04 = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\">set05 = &#123;<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># -- 交集</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set04 &amp; set05)<span class=\"comment\"># &#123;2, 3&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># -- 並集</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set04 | set05)<span class=\"comment\"># &#123;1, 2, 3, 4&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># -- 補集</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set04 ^ set05)<span class=\"comment\"># &#123;1, 4&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set04 - set05)<span class=\"comment\"># &#123;1&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set05 - set04)<span class=\"comment\"># &#123;4&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># -- 子集</span></span><br><span class=\"line\">set06 = &#123;<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(set06 &lt; set04)</span><br><span class=\"line\"><span class=\"comment\"># -- 超集合</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(set04 &gt; set06)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day05_01_函數 function","url":"/2021/12/28/2021-12-28-%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day05-01-%E5%87%BD%E6%95%B8-function/","content":"<h2 id=\"pycharm相關設置\"><a href=\"#pycharm相關設置\" class=\"headerlink\" title=\"pycharm相關設置\"></a>pycharm相關設置</h2><blockquote>\n<p>“代碼自動完成”時間延時設置<br>File -&gt; Settings -&gt; Editor -&gt; General -&gt; Code Completion -&gt; Autopopup in (ms):0</p>\n</blockquote>\n<ul>\n<li>快速鍵：<br><code>Ctrl + P  </code>                   參數資訊（在方法中調用參數）<br><code>Ctrl + Q  </code>                   快速查看文檔<br><code>Ctrl + Alt + M    </code>       提取方法</li>\n</ul>\n<h2 id=\"定義\"><a href=\"#定義\" class=\"headerlink\" title=\"定義\"></a>定義</h2><ul>\n<li>用於封裝一個特定的功能，表示一個功能或者行為。</li>\n<li>函數是可以重複執行的語句塊, 可以重複調用。<span id=\"more\"></span></li>\n</ul>\n<h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><p>提高代碼的再使用性和可維護性（代碼層次結構更清晰）。</p>\n<h2 id=\"定義函數\"><a href=\"#定義函數\" class=\"headerlink\" title=\"定義函數\"></a>定義函數</h2><ul>\n<li><p>語法：<br>def 函數名(形式參數):<br>函數體</p>\n</li>\n<li><p>說明：<br>def 關鍵字：全稱是define，意為”定義”。<br>函數名：對函數體中語句的描述，規則與變數名相同。<br>形式參數：方法定義者要求調用者提供的資訊。<br>函數體：完成該功能的語句。</p>\n</li>\n<li><p>函數的第一行語句建議使用文檔字串描述函數的功能與參數。</p>\n</li>\n</ul>\n<h3 id=\"調用函數\"><a href=\"#調用函數\" class=\"headerlink\" title=\"調用函數\"></a>調用函數</h3><ul>\n<li>語法：函數名(實際參數)</li>\n<li>說明：根據形參傳遞內容。</li>\n</ul>\n<h2 id=\"返回值\"><a href=\"#返回值\" class=\"headerlink\" title=\"返回值\"></a>返回值</h2><ul>\n<li>定義：<br>方法定義者告訴調用者的結果。</li>\n<li>語法：<br>return 數據</li>\n<li>說明：<br>return後沒有語句，相當於返回 None。<br>函數體沒有return，相當於返回None。</li>\n</ul>\n<h2 id=\"可變／不可變類型在傳參時的區別\"><a href=\"#可變／不可變類型在傳參時的區別\" class=\"headerlink\" title=\"可變／不可變類型在傳參時的區別\"></a>可變／不可變類型在傳參時的區別</h2><h3 id=\"不可變類型參數有\"><a href=\"#不可變類型參數有\" class=\"headerlink\" title=\"不可變類型參數有:\"></a>不可變類型參數有:</h3><p>數值型(整數，浮點數,複數)</p>\n<p>布林值bool</p>\n<p>None 空值</p>\n<p>字串str</p>\n<p>元組tuple</p>\n<p>固定集合frozenset</p>\n<h3 id=\"可變類型參數有\"><a href=\"#可變類型參數有\" class=\"headerlink\" title=\"可變類型參數有:\"></a>可變類型參數有:</h3><p>列表 list</p>\n<p>字典 dict</p>\n<p>集合 set</p>\n<blockquote>\n<p>傳參說明：<br>不可變類型的數據傳參時，函數內部不會改變原資料的值。<br>可變類型的數據傳參時，函數內部可以改變原資料。</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    函數-參數</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">attack</span>():</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        攻擊函數</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;側踹&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;直拳&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;擺拳&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;勾拳&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;肘擊&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># attack()</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">attack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 有參數函數</span></span><br><span class=\"line\"><span class=\"comment\"># 形式參數</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">attack_repeat</span>(<span class=\"params\">count</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        重複攻擊</span></span><br><span class=\"line\"><span class=\"string\">    :param count:int類型，重複的次數 </span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(count):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;側踹&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;直拳&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;擺拳&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;勾拳&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;肘擊&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 實際參數</span></span><br><span class=\"line\">attack_repeat(<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;直拳&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;擺拳&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;勾拳&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;肘擊&quot;)</span></span><br><span class=\"line\"><span class=\"string\">#.......</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;直拳&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;擺拳&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;勾拳&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;肘擊&quot;)</span></span><br><span class=\"line\"><span class=\"string\">#.......</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;直拳&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;擺拳&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;勾拳&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;肘擊&quot;)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    函數-返回值</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun01</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;fun01執行嘍&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">100</span><span class=\"comment\"># 返回100</span></span><br><span class=\"line\"></span><br><span class=\"line\">number = fun01()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(number)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun02</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;fun01執行嘍&quot;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># return # return關鍵字後面如果沒有資料，相當於返回None</span></span><br><span class=\"line\">    <span class=\"comment\"># 如果函數沒有返回值，也相當於返回None</span></span><br><span class=\"line\"></span><br><span class=\"line\">re = fun02()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(re)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 即使有返回值，調用者仍然可以不使用變數來接受。</span></span><br><span class=\"line\">fun01()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    函數-應用</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 函數：封裝一個特定功能，表示一個行為。</span></span><br><span class=\"line\"><span class=\"comment\">#      小而精</span></span><br><span class=\"line\"><span class=\"comment\"># 兩個數值相加功能</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>():</span><br><span class=\"line\">    number_one = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入第一個資料：&quot;</span>))</span><br><span class=\"line\">    number_two = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入第二個資料：&quot;</span>))</span><br><span class=\"line\">    result = number_one + number_two</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;結果是：&quot;</span> + <span class=\"built_in\">str</span>(result))</span><br><span class=\"line\"></span><br><span class=\"line\">add()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">number_one, number_two</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> number_one + number_two</span><br><span class=\"line\"></span><br><span class=\"line\">result = add(<span class=\"number\">5</span>, <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    函數記憶體分配</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 將函數的代碼，存儲到代碼區，函數體中的代碼不執行。</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun01</span>():</span><br><span class=\"line\">    a = <span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 調用函數時，在記憶體中開闢空間，存儲函數內部定義的變數，該空間叫做棧幀。</span></span><br><span class=\"line\"><span class=\"comment\"># 函數執行過後，棧幀釋放。</span></span><br><span class=\"line\">fun01()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun02</span>(<span class=\"params\">p1,p2</span>):</span><br><span class=\"line\">    p1 = <span class=\"number\">20</span></span><br><span class=\"line\">    p2[<span class=\"number\">0</span>] = <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 結論1：傳入不可變物件，函數體內部不可能修改資料</span></span><br><span class=\"line\">a = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"comment\"># 結論2：傳入可變物件，函數體內部可能修改資料</span></span><br><span class=\"line\">b = [<span class=\"number\">10</span>]</span><br><span class=\"line\">fun02(a,b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)<span class=\"comment\">#?</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(b)<span class=\"comment\">#?20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun03</span>(<span class=\"params\">p1,p2</span>):</span><br><span class=\"line\">    p1[<span class=\"number\">0</span>] = <span class=\"number\">20</span></span><br><span class=\"line\">    p2 = <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = [<span class=\"number\">10</span>]</span><br><span class=\"line\">b = [<span class=\"number\">10</span>]</span><br><span class=\"line\">fun02(a,b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)<span class=\"comment\">#?</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(b)<span class=\"comment\">#?</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"練習題\"><a href=\"#練習題\" class=\"headerlink\" title=\"練習題:\"></a>練習題:</h3><p>練習題一 : 將下列代碼，定義到函數中，列印矩形。</p>\n<p>練習題二 : 定義函數，計算多位元整數每位元相加和。</p>\n<p>練習題三 : 定義函數，根據成績計算等級。</p>\n<p>練習題四 : 定義函數，判斷清單中是否存在相同元素。</p>\n<p>練習題五 : 定義函數計數器，統計函數被調用的次數。</p>\n<p>練習題六 : 定義函數，根據小時、分鐘、秒計算總秒數。</p>\n<p>要求：</p>\n<ul>\n<li>根據小時、分鐘、秒</li>\n<li>根據小時、分鐘</li>\n<li>根據分鐘、秒</li>\n<li>根據分鐘</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">練習題一 :</span></span><br><span class=\"line\"><span class=\"string\">將下列代碼，定義到函數中，列印矩形。</span></span><br><span class=\"line\"><span class=\"string\">\tfor r in range(3):</span></span><br><span class=\"line\"><span class=\"string\">        for c in range(5):</span></span><br><span class=\"line\"><span class=\"string\">            print(&quot;*&quot;, end=&quot; &quot;)</span></span><br><span class=\"line\"><span class=\"string\">        print()</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">print_rectangle</span>(<span class=\"params\">r_count,c_count,char</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(r_count):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(c_count):</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(char, end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">print_rectangle(<span class=\"number\">5</span>,<span class=\"number\">3</span>,<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">print_rectangle(<span class=\"number\">2</span>,<span class=\"number\">7</span>,<span class=\"string\">&quot;#&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">   練習題二 : 定義函數，計算多位元整數每位元相加和.</span></span><br><span class=\"line\"><span class=\"string\">    輸入：12345</span></span><br><span class=\"line\"><span class=\"string\">    輸出：15</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">each_unit_sum</span>(<span class=\"params\">number</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        計算整數的每位元相加和</span></span><br><span class=\"line\"><span class=\"string\">    :param number:需要操作的資料，int類型</span></span><br><span class=\"line\"><span class=\"string\">    :return:相加的結果，int類型</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    sum_value = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>(number):</span><br><span class=\"line\">        sum_value += <span class=\"built_in\">int</span>(item)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum_value</span><br><span class=\"line\"></span><br><span class=\"line\">re = each_unit_sum(<span class=\"number\">12345</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(re)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    練習題三 :定義函數，根據成績計算等級。</span></span><br><span class=\"line\"><span class=\"string\">    輸入：96</span></span><br><span class=\"line\"><span class=\"string\">    輸出：優秀</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def get_score_level(score):</span></span><br><span class=\"line\"><span class=\"comment\">#     if score &lt; 0 or score &gt; 100:</span></span><br><span class=\"line\"><span class=\"comment\">#         return &quot;成績輸入有誤&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#     elif 90 &lt;= score:</span></span><br><span class=\"line\"><span class=\"comment\">#         return &quot;優秀&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#     elif 80 &lt;= score:</span></span><br><span class=\"line\"><span class=\"comment\">#         return &quot;良好&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#     elif 60 &lt;= score:</span></span><br><span class=\"line\"><span class=\"comment\">#         return &quot;及格&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#     else:</span></span><br><span class=\"line\"><span class=\"comment\">#         return &quot;不及格&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_score_level</span>(<span class=\"params\">score</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> score &lt; <span class=\"number\">0</span> <span class=\"keyword\">or</span> score &gt; <span class=\"number\">100</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;成績輸入有誤&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">90</span> &lt;= score:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;優秀&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">80</span> &lt;= score:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;良好&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">60</span> &lt;= score:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;及格&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;不及格&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(get_score_level(<span class=\"number\">95</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    練習題四 :定義函數，判斷清單中是否存在相同元素</span></span><br><span class=\"line\"><span class=\"string\">    輸入：[3,4,6,8,6]</span></span><br><span class=\"line\"><span class=\"string\">    輸出：True</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">is_repeating</span>(<span class=\"params\">list_target</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(list_target) - <span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(r + <span class=\"number\">1</span>, <span class=\"built_in\">len</span>(list_target)):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> list_target[r] == list_target[c]:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">list01 = [<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">7</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(is_repeating(list01))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    練習題五 :定義函數計數器，統計函數被調用的次數。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">count = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun01</span>():</span><br><span class=\"line\">    <span class=\"keyword\">global</span> count</span><br><span class=\"line\">    count += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">fun01()</span><br><span class=\"line\">fun01()</span><br><span class=\"line\">fun01()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;執行次數是：&quot;</span> + <span class=\"built_in\">str</span>(count))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    練習題六 :定義函數，根據小時、分鐘、秒計算總秒數。</span></span><br><span class=\"line\"><span class=\"string\">    要求：</span></span><br><span class=\"line\"><span class=\"string\">        根據小時、分鐘、秒</span></span><br><span class=\"line\"><span class=\"string\">        根據小時、分鐘</span></span><br><span class=\"line\"><span class=\"string\">        根據分鐘、秒</span></span><br><span class=\"line\"><span class=\"string\">        根據分鐘</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_total_second</span>(<span class=\"params\">hour=<span class=\"number\">0</span>, minute=<span class=\"number\">0</span>, second=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> hour * <span class=\"number\">3600</span> + minute * <span class=\"number\">60</span> + second</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(get_total_second(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(get_total_second(<span class=\"number\">1</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(get_total_second(minute=<span class=\"number\">2</span>, second=<span class=\"number\">3</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(get_total_second(minute=<span class=\"number\">2</span>))</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day05_02_實參傳遞方式 argument","url":"/2021/12/28/2021-12-28-%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day05-02-%E5%AF%A6%E5%8F%83%E5%82%B3%E9%81%9E%E6%96%B9%E5%BC%8F-argument/","content":"<h2 id=\"位置傳參\"><a href=\"#位置傳參\" class=\"headerlink\" title=\"位置傳參\"></a>位置傳參</h2><p>定義：實參與形參的位置依次對應。</p>\n<ul>\n<li>fun01(1, 2, 3)<span id=\"more\"></span></li>\n</ul>\n<h2 id=\"序列傳參\"><a href=\"#序列傳參\" class=\"headerlink\" title=\"序列傳參\"></a>序列傳參</h2><p>定義：實參用*將序列拆解後與形參的位置依次對應。</p>\n<ul>\n<li>list01 &#x3D; [4, 5, 6]</li>\n<li>fun01(*list01)</li>\n</ul>\n<h2 id=\"關鍵字傳參\"><a href=\"#關鍵字傳參\" class=\"headerlink\" title=\"關鍵字傳參\"></a>關鍵字傳參</h2><p>定義：實參根據形參的名字進行對應。</p>\n<ul>\n<li>fun01(a&#x3D;1, c&#x3D;3, b&#x3D;2)</li>\n</ul>\n<h2 id=\"字典關鍵字傳參\"><a href=\"#字典關鍵字傳參\" class=\"headerlink\" title=\"字典關鍵字傳參\"></a>字典關鍵字傳參</h2><ol>\n<li>定義：實參用**將字典拆解後與形參的名字進行對應。</li>\n<li>作用：配合形參的缺省參數，可以使調用者隨意傳參。</li>\n</ol>\n<ul>\n<li>dict01 &#x3D; {“c”: 3, “b”: 2, “a”: 1}</li>\n<li>fun01(**dict01)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    函數參數</span></span><br><span class=\"line\"><span class=\"string\">        實際參數</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun01</span>(<span class=\"params\">a, b, c</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(b)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(c)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 位置實參：根據位置，將實參傳遞給形參。</span></span><br><span class=\"line\">fun01(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.序列實參：使用星號將序列拆分後，與形參進行對應。</span></span><br><span class=\"line\">list01 = [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]</span><br><span class=\"line\">fun01(*list01)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.關鍵字:根據名稱，將實參傳遞給形參。</span></span><br><span class=\"line\">fun01(a=<span class=\"number\">1</span>, c=<span class=\"number\">3</span>, b=<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 字典實參：使用雙星號將字典拆分後，與形參進行對應。</span></span><br><span class=\"line\">dict01 = &#123;<span class=\"string\">&quot;c&quot;</span>: <span class=\"number\">3</span>, <span class=\"string\">&quot;b&quot;</span>: <span class=\"number\">2</span>, <span class=\"string\">&quot;a&quot;</span>: <span class=\"number\">1</span>&#125;</span><br><span class=\"line\">fun01(**dict01)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    定義函數,多個數值累加.</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sum</span>(<span class=\"params\">*args</span>):</span><br><span class=\"line\">    sum_value = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> args:</span><br><span class=\"line\">        sum_value += item</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum_value</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">sum</span>(<span class=\"number\">213</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">67</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">sum</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def sum(args):</span></span><br><span class=\"line\"><span class=\"comment\">#     sum_value = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in args:</span></span><br><span class=\"line\"><span class=\"comment\">#         sum_value += item</span></span><br><span class=\"line\"><span class=\"comment\">#     return sum_value</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print(sum([213,3,4,3,5,6,67]))</span></span><br><span class=\"line\"><span class=\"comment\"># print(sum([]))</span></span><br></pre></td></tr></table></figure>\n","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day04_02_字典 dict","url":"/2021/12/28/2021-12-28-%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day04-02-%E5%AD%97%E5%85%B8-dict/","content":"<h1 id=\"定義\"><a href=\"#定義\" class=\"headerlink\" title=\"定義\"></a>定義</h1><ol>\n<li><p>由一系列鍵值對組成的可變散列容器。</p>\n</li>\n<li><p>散列：對鍵進行雜湊運算，確定在記憶體中的存儲位置，每條資料存儲無先後順序。</p>\n</li>\n<li><p>鍵必須惟一且不可變(字串&#x2F;數位&#x2F;元組)，值沒有限制。</p>\n<span id=\"more\"></span></li>\n</ol>\n<h2 id=\"基礎操作\"><a href=\"#基礎操作\" class=\"headerlink\" title=\"基礎操作\"></a>基礎操作</h2><ul>\n<li><p>創建字典：<br>字典名 &#x3D; {鍵1：值1，鍵2：值2}<br>字典名 &#x3D; dict (可反覆運算對象)</p>\n</li>\n<li><p>添加&#x2F;修改元素：<br>語法:<br>字典名[鍵] &#x3D; 資料</p>\n</li>\n</ul>\n<p>說明:</p>\n<ol>\n<li>鍵不存在，創建記錄。</li>\n<li>鍵存在，修改值。</li>\n</ol>\n<ul>\n<li><p>獲取元素：<br>變數 &#x3D; 字典名[鍵]  # 沒有鍵則錯誤</p>\n</li>\n<li><p>遍歷字典：<br>for 鍵名 in 字典名:<br>字典名[鍵名]<br>for 鍵名,值名 in 字典名.items():</p>\n</li>\n</ul>\n<h2 id=\"語句\"><a href=\"#語句\" class=\"headerlink\" title=\"語句\"></a>語句</h2><ul>\n<li>刪除元素：<br>del 字典名[鍵]</li>\n</ul>\n<h2 id=\"字典推導式\"><a href=\"#字典推導式\" class=\"headerlink\" title=\"字典推導式\"></a>字典推導式</h2><ul>\n<li><p>定義：<br>使用簡易方法，將可反覆運算物件轉換為字典。</p>\n</li>\n<li><p>語法:<br>{鍵:值 for 變數 in 可反覆運算物件}<br>{鍵:值 for 變數 in 可反覆運算物件 if 條件}</p>\n</li>\n</ul>\n<h2 id=\"字典-VS-清單\"><a href=\"#字典-VS-清單\" class=\"headerlink\" title=\"字典 VS 清單\"></a>字典 VS 清單</h2><ol>\n<li>都是可變容器。</li>\n<li>獲取元素方式不同,清單用索引,字典用鍵。</li>\n<li>字典的插入,刪除,修改的速度快於清單。</li>\n<li>清單的存儲是有序的,字典的存儲是無序的。</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    字典dict</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 1. 創建</span></span><br><span class=\"line\">dict01 = &#123;&#125;</span><br><span class=\"line\">dict02 = <span class=\"built_in\">dict</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">dict01 = &#123;<span class=\"number\">101</span>: <span class=\"string\">&quot;a&quot;</span>, <span class=\"number\">102</span>: <span class=\"string\">&quot;b&quot;</span>, <span class=\"number\">103</span>: <span class=\"string\">&quot;c&quot;</span>&#125;</span><br><span class=\"line\">dict02 = <span class=\"built_in\">dict</span>([(<span class=\"number\">101</span>,<span class=\"string\">&quot;a&quot;</span>),(<span class=\"number\">102</span>,<span class=\"string\">&quot;b&quot;</span>)])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 添加</span></span><br><span class=\"line\">dict01[<span class=\"number\">104</span>] = <span class=\"string\">&quot;d&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 修改</span></span><br><span class=\"line\">dict01[<span class=\"number\">104</span>] = <span class=\"string\">&quot;e&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 查找</span></span><br><span class=\"line\"><span class=\"comment\"># key</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict01[<span class=\"number\">102</span>])</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"number\">106</span> <span class=\"keyword\">in</span> dict01:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(dict01[<span class=\"number\">106</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 迴圈</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> dict01:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(key)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> dict01.values():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(value)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> dict01.items():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> dict01.items():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(k)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(v)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    字典推導式</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1 2 3 .. 9  --&gt;  數字:數字的平方</span></span><br><span class=\"line\"><span class=\"comment\"># dict_result = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># for item in range(1,10):</span></span><br><span class=\"line\"><span class=\"comment\">#     dict_result[item] = item ** 2</span></span><br><span class=\"line\"><span class=\"comment\"># print(dict_result)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dict_result = &#123;item: item ** <span class=\"number\">2</span> <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dict_result = &#123;item: item ** <span class=\"number\">2</span> <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>) <span class=\"keyword\">if</span> item % <span class=\"number\">2</span> ==<span class=\"number\">0</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_result)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day05_03_形參定義方式 parameter","url":"/2021/12/28/2021-12-28-%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day05-03-%E5%BD%A2%E5%8F%83%E5%AE%9A%E7%BE%A9%E6%96%B9%E5%BC%8F-parameter/","content":"<h2 id=\"缺省參數\"><a href=\"#缺省參數\" class=\"headerlink\" title=\"缺省參數\"></a>缺省參數</h2><ul>\n<li>語法：<br>def 函數名(形參名1&#x3D;默認實參1, 形參名2&#x3D;默認實參2, …):<br>函數體<span id=\"more\"></span></li>\n<li>說明：<br>缺省參數必須自右至左依次存在，如果一個參數有缺省參數，則其右側的所有參數都必須有缺省參數。</li>\n</ul>\n<p>缺省參數可以有0個或多個，甚至全部都有缺省參數。</p>\n<h2 id=\"位置形參\"><a href=\"#位置形參\" class=\"headerlink\" title=\"位置形參\"></a>位置形參</h2><p>語法：<br>def 函數名(形參名1, 形參名2, …):<br>    函數體</p>\n<h2 id=\"星號元組形參\"><a href=\"#星號元組形參\" class=\"headerlink\" title=\"星號元組形參\"></a>星號元組形參</h2><ul>\n<li><p>語法：<br>def 函數名(*元組形參名):<br>  函數體<br>def fun03(*args):<br>  print(args)<br>fun03(1, 2, 3)</p>\n</li>\n<li><p>作用：<br>收集多餘的位置傳參。</p>\n</li>\n<li><p>說明：<br>一般命名為’args’<br>形參列表中最多只能有一個</p>\n</li>\n</ul>\n<h2 id=\"命名關鍵字形參\"><a href=\"#命名關鍵字形參\" class=\"headerlink\" title=\"命名關鍵字形參\"></a>命名關鍵字形參</h2><ul>\n<li><p>語法：<br>def 函數名(*, 命名關鍵字形參1, 命名關鍵字形參2, …):<br>函數體<br>def 函數名(*args, 命名關鍵字形參1, 命名關鍵字形參2, …):             函數體<br>def fun04(*args, a, b, c):<br>print(args)<br>fun04(1, 2, 3, 4, 5, a&#x3D;1, b&#x3D;2, c&#x3D;3)</p>\n</li>\n<li><p>作用：<br>強制實參使用關鍵字傳參</p>\n</li>\n</ul>\n<h2 id=\"雙星號字典形參\"><a href=\"#雙星號字典形參\" class=\"headerlink\" title=\"雙星號字典形參\"></a>雙星號字典形參</h2><ul>\n<li><p>語法：<br>def 函數名(**字典形參名):<br>函數體<br>def fun06(**kwargs):<br>print(kwargs)<br>fun06(a &#x3D; 1,b &#x3D; 2)</p>\n</li>\n<li><p>作用：<br>收集多餘的關鍵字傳參</p>\n</li>\n<li><p>說明:<br>一般命名為’kwargs’<br>形參列表中最多只能有一個</p>\n</li>\n</ul>\n<h2 id=\"參數自左至右的順序\"><a href=\"#參數自左至右的順序\" class=\"headerlink\" title=\"參數自左至右的順序\"></a>參數自左至右的順序</h2><p>位置形參 –&gt; 星號元組形參 –&gt; 命名關鍵字形參 –&gt; 雙星號字典形參</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    函數參數</span></span><br><span class=\"line\"><span class=\"string\">        實際參數</span></span><br><span class=\"line\"><span class=\"string\">            位置實參</span></span><br><span class=\"line\"><span class=\"string\">                序列實參</span></span><br><span class=\"line\"><span class=\"string\">            關鍵字實參</span></span><br><span class=\"line\"><span class=\"string\">                字典實參</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        形式參數</span></span><br><span class=\"line\"><span class=\"string\">            默認形參</span></span><br><span class=\"line\"><span class=\"string\">            位置形參</span></span><br><span class=\"line\"><span class=\"string\">                星號元組形參</span></span><br><span class=\"line\"><span class=\"string\">            命名關鍵字形參</span></span><br><span class=\"line\"><span class=\"string\">                雙星號字典形參</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 位置形參:約束實參必須提供     【必填】</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun01</span>(<span class=\"params\">a, b, c</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(b)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(c)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 默認參數：實參可以不提供      【可選】</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun02</span>(<span class=\"params\">a=<span class=\"number\">0</span>, b=<span class=\"string\">&quot;&quot;</span>, c=<span class=\"number\">0.0</span></span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(b)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(c)</span><br><span class=\"line\"></span><br><span class=\"line\">fun02(<span class=\"number\">1</span>)</span><br><span class=\"line\">fun02(b=<span class=\"string\">&quot;bb&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 星號元組形參：將位置實參合併為一個元組</span></span><br><span class=\"line\"><span class=\"comment\"># 只能有一個,建議形參名稱位args</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun03</span>(<span class=\"params\">*args</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(args)</span><br><span class=\"line\"></span><br><span class=\"line\">fun03(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># fun03(a = 1,b=2)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 命名關鍵字形參：星號元組形參，後面的位置形參，必須使用關鍵字實參傳遞。</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun04</span>(<span class=\"params\">*args, a, b, c</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(args)</span><br><span class=\"line\"></span><br><span class=\"line\">fun04(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, a=<span class=\"number\">1</span>, b=<span class=\"number\">2</span>, c=<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 命名關鍵字形參：星號後面的位置形參，必須使用關鍵字實參傳遞。</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun05</span>(<span class=\"params\">a, *, b=<span class=\"number\">0</span>, c=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(b)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(c)</span><br><span class=\"line\"></span><br><span class=\"line\">fun05(<span class=\"number\">1</span>, c=<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(*args, sep=&#x27; &#x27;, end=&#x27;\\n&#x27;)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, sep=<span class=\"string\">&quot;-&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, end=<span class=\"string\">&quot; &quot;</span>, sep=<span class=\"string\">&quot;-&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 雙星號字典形參：將關鍵字實參合併為一個字典</span></span><br><span class=\"line\"><span class=\"comment\"># 只能有一個,建議形參名稱位args</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun06</span>(<span class=\"params\">**kwargs</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">fun06(a = <span class=\"number\">1</span>,b = <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    調用下列函數</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun01</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(args)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">fun01()</span><br><span class=\"line\">fun01(<span class=\"number\">12</span>,<span class=\"number\">2</span>,a = <span class=\"number\">1</span>,b=<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\"># fun01(12,a = 1,2,b=2)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun02</span>(<span class=\"params\">a, *args, b, c=<span class=\"string\">&quot;&quot;</span>, **kwargs</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(args)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(b)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(c)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">fun02(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,b = <span class=\"number\">2</span>,c=<span class=\"string\">&quot;3&quot;</span>,d = <span class=\"number\">4</span>)</span><br><span class=\"line\">fun02(a = <span class=\"number\">1</span>,b = <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"參數自左至右的順序-1\"><a href=\"#參數自左至右的順序-1\" class=\"headerlink\" title=\"參數自左至右的順序\"></a>參數自左至右的順序</h3><blockquote>\n<p>位置形參 –&gt; 星號元組形參 –&gt; 命名關鍵字形參 –&gt; 雙星號字典形參</p>\n</blockquote>\n","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day05_04_作用域LEGB","url":"/2021/12/28/2021-12-28-%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day05-04-%E4%BD%9C%E7%94%A8%E5%9F%9FLEGB/","content":"<h2 id=\"作用域LEGB\"><a href=\"#作用域LEGB\" class=\"headerlink\" title=\"作用域LEGB\"></a>作用域LEGB</h2><ol>\n<li>作用域：變數起作用的範圍。</li>\n<li>Local局部作用域：函數內部。</li>\n<li>Enclosing 外部嵌套作用域 ：函數嵌套。</li>\n<li>Global全域作用域：模組(.py文件)內部。</li>\n<li>Builtin內置模組作用域：py文件。<span id=\"more\"></span></li>\n</ol>\n<h2 id=\"變數名的查找規則\"><a href=\"#變數名的查找規則\" class=\"headerlink\" title=\"變數名的查找規則\"></a>變數名的查找規則</h2><ol>\n<li>由內到外：L -&gt; E -&gt; G -&gt; B</li>\n<li>在訪問變數時，先查找本地變數，然後是包裹此函數外部的函數內部的變數，之後是全域變數，最後是內置變數。</li>\n</ol>\n<h2 id=\"區域變數-局部變量\"><a href=\"#區域變數-局部變量\" class=\"headerlink\" title=\"區域變數(局部變量)\"></a>區域變數(局部變量)</h2><ol>\n<li>定義在函數內部的變數(形參也是區域變數)</li>\n<li>只能在函數內部使用</li>\n<li>調用函數時才被創建，函數結束後自動銷毀</li>\n</ol>\n<h2 id=\"全域變數-全局變量\"><a href=\"#全域變數-全局變量\" class=\"headerlink\" title=\"全域變數(全局變量)\"></a>全域變數(全局變量)</h2><ol>\n<li>定義在函數外部,模組內部的變數。</li>\n<li>在整個模組(py檔)範圍內訪問（但函數內不能將其直接賦值）。</li>\n</ol>\n<h2 id=\"global-語句\"><a href=\"#global-語句\" class=\"headerlink\" title=\"global 語句\"></a>global 語句</h2><ul>\n<li><p>作用：<br>在函數內部修改全域變數。<br>在函數內部定義全域變數(全域聲明)。</p>\n</li>\n<li><p>語法：<br>global 變數1, 變數2, …</p>\n</li>\n<li><p>說明<br>在函數內直接為全域變數賦值，視為創建新的區域變數。<br>不能先聲明局部的變數，再用global聲明為全域變數。</p>\n</li>\n</ul>\n<h2 id=\"nonlocal-語句\"><a href=\"#nonlocal-語句\" class=\"headerlink\" title=\"nonlocal 語句\"></a>nonlocal 語句</h2><ul>\n<li><p>作用：<br>在內層函數修改外層嵌套函數內的變數</p>\n</li>\n<li><p>語法<br>nonlocal 變數名1,變數名2, …</p>\n</li>\n<li><p>說明<br>在被嵌套的內函數中進行使用</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    變數作用域</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 全域作用域：整個.py文件</span></span><br><span class=\"line\"><span class=\"comment\"># 全域變數</span></span><br><span class=\"line\">g01 = <span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun01</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 局部作用域：函數的內部</span></span><br><span class=\"line\">    <span class=\"comment\"># 區域變數</span></span><br><span class=\"line\">    a = <span class=\"number\">10</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">    <span class=\"comment\"># 可以在局部作用域中，讀取全域變數。</span></span><br><span class=\"line\">    <span class=\"comment\"># print(g01)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 實際創建了區域變數，沒有改變全域變數。</span></span><br><span class=\"line\">    <span class=\"comment\"># g01 = 200</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 聲明全域變數</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> g01</span><br><span class=\"line\">    g01 = <span class=\"number\">200</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># global g02</span></span><br><span class=\"line\">    <span class=\"comment\"># g02 = 500</span></span><br><span class=\"line\"></span><br><span class=\"line\">fun01()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(g01)</span><br><span class=\"line\"><span class=\"comment\"># print(g02)</span></span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day05_05_方陣轉至","url":"/2021/12/28/2021-12-28-%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day05-05-%E6%96%B9%E9%99%A3%E8%BD%89%E8%87%B3/","content":"<h1 id=\"方陣轉至邏輯\"><a href=\"#方陣轉至邏輯\" class=\"headerlink\" title=\"方陣轉至邏輯\"></a>方陣轉至邏輯</h1><h2 id=\"邏輯拆解\"><a href=\"#邏輯拆解\" class=\"headerlink\" title=\"邏輯拆解\"></a>邏輯拆解</h2><span id=\"more\"></span>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">定義方陣轉置函數</span></span><br><span class=\"line\"><span class=\"string\">for c in range(len(list01)-1):</span></span><br><span class=\"line\"><span class=\"string\">    for r in range(c+1, len(list01)):</span></span><br><span class=\"line\"><span class=\"string\">       list01[r][c],list01[c][r] = list01[c][r] ,list01[r][c]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># def square_matrix_tranpose(matrix):</span></span><br><span class=\"line\"><span class=\"comment\">#     for c in range(len(matrix) - 1):</span></span><br><span class=\"line\"><span class=\"comment\">#         for r in range(c + 1, len(matrix)):</span></span><br><span class=\"line\"><span class=\"comment\">#             matrix[r][c], matrix[c][r] = matrix[c][r], matrix[r][c]</span></span><br><span class=\"line\"><span class=\"comment\">#     return matrix</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># list01 = [</span></span><br><span class=\"line\"><span class=\"comment\">#     [1,2,3,4],</span></span><br><span class=\"line\"><span class=\"comment\">#     [5,6,7,8],</span></span><br><span class=\"line\"><span class=\"comment\">#     [9,10,11,12],</span></span><br><span class=\"line\"><span class=\"comment\">#     [13,14,15,16],</span></span><br><span class=\"line\"><span class=\"comment\"># ]</span></span><br><span class=\"line\"><span class=\"comment\"># print(square_matrix_tranpose(list01))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">square_matrix_tranpose</span>(<span class=\"params\">matrix</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(matrix) - <span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(c + <span class=\"number\">1</span>, <span class=\"built_in\">len</span>(matrix)):</span><br><span class=\"line\">            matrix[r][c], matrix[c][r] = matrix[c][r], matrix[r][c]</span><br><span class=\"line\"></span><br><span class=\"line\">list01 = [</span><br><span class=\"line\">    [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],</span><br><span class=\"line\">    [<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>],</span><br><span class=\"line\">    [<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>],</span><br><span class=\"line\">    [<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">16</span>],</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">square_matrix_tranpose(list01)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list01)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    方陣轉置</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">list01 = [</span><br><span class=\"line\">    [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],</span><br><span class=\"line\">    [<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>],</span><br><span class=\"line\">    [<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>],</span><br><span class=\"line\">    [<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">16</span>],</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">for r in range(1,4):</span></span><br><span class=\"line\"><span class=\"string\">    # list01[r][0]   list01[0][r]</span></span><br><span class=\"line\"><span class=\"string\">    pass</span></span><br><span class=\"line\"><span class=\"string\"># list01[1][0]    list01[0][1]</span></span><br><span class=\"line\"><span class=\"string\"># list01[2][0]    list01[0][2]</span></span><br><span class=\"line\"><span class=\"string\"># list01[3][0]    list01[0][3]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">for r in range(2,4):</span></span><br><span class=\"line\"><span class=\"string\">    # list01[r][1]    list01[1][r]</span></span><br><span class=\"line\"><span class=\"string\">    pass</span></span><br><span class=\"line\"><span class=\"string\"># list01[2][1]    list01[1][2]</span></span><br><span class=\"line\"><span class=\"string\"># list01[3][1]    list01[1][3]</span></span><br><span class=\"line\"><span class=\"string\">for r in range(3,4):</span></span><br><span class=\"line\"><span class=\"string\">    # list01[r][2]    list01[2][r]</span></span><br><span class=\"line\"><span class=\"string\">    pass</span></span><br><span class=\"line\"><span class=\"string\"># list01[3][2]    list01[2][3]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(list01)-<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(c+<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(list01)):</span><br><span class=\"line\">       list01[r][c],list01[c][r] = list01[c][r] ,list01[r][c]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(list01)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    列印二維清單第四行第三列元素。</span></span><br><span class=\"line\"><span class=\"string\">    從左到右列印二維清單第二行所有元素。</span></span><br><span class=\"line\"><span class=\"string\">    從上到下列印二維清單第一列所有元素。</span></span><br><span class=\"line\"><span class=\"string\">    將二維清單按照表格狀輸出到終端。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">list01 = [</span><br><span class=\"line\">    [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">    [<span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>],</span><br><span class=\"line\">    [<span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>],</span><br><span class=\"line\">    [<span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>, <span class=\"number\">16</span>],</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list01[<span class=\"number\">3</span>][<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01[<span class=\"number\">1</span>]:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># list01[0][0]</span></span><br><span class=\"line\"><span class=\"comment\"># list01[1][0]</span></span><br><span class=\"line\"><span class=\"comment\"># list01[2][0]</span></span><br><span class=\"line\"><span class=\"comment\"># list01[3][0]</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(list01[r][<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> list01:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(item,end = <span class=\"string\">&quot;\\t&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>()</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day05_07_購物車-重購","url":"/2021/12/28/2021-12-28-%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day05-07-%E8%B3%BC%E7%89%A9%E8%BB%8A-%E9%87%8D%E8%B3%BC/","content":"<h1 id=\"購物車-重購\"><a href=\"#購物車-重購\" class=\"headerlink\" title=\"購物車-重購\"></a>購物車-重購</h1><span id=\"more\"></span>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重構：結構清晰，主題鮮明。</span></span><br><span class=\"line\"><span class=\"comment\">#    實現細節 --&gt; 執行過程</span></span><br><span class=\"line\">dict_commodity_info = &#123;</span><br><span class=\"line\">    <span class=\"number\">101</span>: &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;屠龍刀&quot;</span>, <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">10000</span>&#125;,</span><br><span class=\"line\">    <span class=\"number\">102</span>: &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;倚天劍&quot;</span>, <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">10000</span>&#125;,</span><br><span class=\"line\">    <span class=\"number\">103</span>: &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;九陰白骨爪&quot;</span>, <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">8000</span>&#125;,</span><br><span class=\"line\">    <span class=\"number\">104</span>: &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;九陽神功&quot;</span>, <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">9000</span>&#125;,</span><br><span class=\"line\">    <span class=\"number\">105</span>: &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;降龍十八掌&quot;</span>, <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">8000</span>&#125;,</span><br><span class=\"line\">    <span class=\"number\">106</span>: &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;乾坤大挪移&quot;</span>, <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">10000</span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">list_order = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">buying</span>():</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        購買</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    print_commdity_info()</span><br><span class=\"line\">    dict_order = create_order()</span><br><span class=\"line\">    list_order.append(dict_order)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;添加到購物車。&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_order</span>():</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        創建訂單</span></span><br><span class=\"line\"><span class=\"string\">    :return: 字典類型的訂單物件</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        cid = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入商品編號：&quot;</span>))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> cid <span class=\"keyword\">in</span> dict_commodity_info:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;該商品不存在&quot;</span>)</span><br><span class=\"line\">    count = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入購買數量：&quot;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"string\">&quot;cid&quot;</span>: cid, <span class=\"string\">&quot;count&quot;</span>: count&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">print_commdity_info</span>():</span><br><span class=\"line\">    <span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> dict_commodity_info.items():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;編號：%d，名稱：%s，單價：%d。&quot;</span> % (key, value[<span class=\"string\">&quot;name&quot;</span>], value[<span class=\"string\">&quot;price&quot;</span>]))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">shopping</span>():</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        購物</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        item = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;1鍵購買，2鍵結算。&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> item == <span class=\"string\">&quot;1&quot;</span>:</span><br><span class=\"line\">            buying()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> item == <span class=\"string\">&quot;2&quot;</span>:</span><br><span class=\"line\">            settlement()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">settlement</span>():</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        結算</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    total_price = calculate_total_price()</span><br><span class=\"line\">    print_order_into()</span><br><span class=\"line\">    paying(total_price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">paying</span>(<span class=\"params\">total_price</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        支付</span></span><br><span class=\"line\"><span class=\"string\">    :param total_price:數數值型別的總價</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        money = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;總價%d元，請輸入金額：&quot;</span> % total_price))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> money &gt;= total_price:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;購買成功，找回：%d元。&quot;</span> % (money - total_price))</span><br><span class=\"line\">            list_order.clear()</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;金額不足.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">print_order_into</span>():</span><br><span class=\"line\">    <span class=\"keyword\">for</span> order <span class=\"keyword\">in</span> list_order:</span><br><span class=\"line\">        dict_commodity = dict_commodity_info[order[<span class=\"string\">&quot;cid&quot;</span>]]</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;商品：%s，單價：%d,數量:%d.&quot;</span> % (dict_commodity[<span class=\"string\">&quot;name&quot;</span>], dict_commodity[<span class=\"string\">&quot;price&quot;</span>], order[<span class=\"string\">&quot;count&quot;</span>]))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">calculate_total_price</span>():</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        計算總價</span></span><br><span class=\"line\"><span class=\"string\">    :return: 數數值型別的總價格</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    total_price = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> order <span class=\"keyword\">in</span> list_order:</span><br><span class=\"line\">        dict_commodity = dict_commodity_info[order[<span class=\"string\">&quot;cid&quot;</span>]]</span><br><span class=\"line\">        total_price += dict_commodity[<span class=\"string\">&quot;price&quot;</span>] * order[<span class=\"string\">&quot;count&quot;</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> total_price</span><br><span class=\"line\"></span><br><span class=\"line\">shopping()</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【物件導向Object Oriented】_01_概述","url":"/2021/12/28/2021-12-28-%E3%80%90%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91Object-Oriented%E3%80%91-01-%E6%A6%82%E8%BF%B0/","content":"<h2 id=\"面向過程\"><a href=\"#面向過程\" class=\"headerlink\" title=\"面向過程\"></a>面向過程</h2><ul>\n<li>分析出解決問題的步驟，然後逐步實現。</li>\n</ul>\n<p>例如：婚禮籌辦</p>\n<span id=\"more\"></span>\n<ul>\n<li><p>發請柬（選照片、措詞、製作）</p>\n</li>\n<li><p>宴席（場地、找廚師、準備桌椅餐具、計畫菜品、購買食材）</p>\n</li>\n<li><p>婚禮儀式（定婚禮儀式流程、請主持人）</p>\n</li>\n</ul>\n<ol>\n<li><p>公式：程式 &#x3D; 演算法 + 資料結構</p>\n</li>\n<li><p>優點：所有環節、細節自己掌控。</p>\n</li>\n<li><p>缺點：考慮所有細節，工作量大。</p>\n</li>\n</ol>\n<h2 id=\"物件導向\"><a href=\"#物件導向\" class=\"headerlink\" title=\"物件導向\"></a>物件導向</h2><ul>\n<li>找出解決問題的人，然後分配職責。</li>\n</ul>\n<p>例如：婚禮籌辦</p>\n<ul>\n<li><p>發請柬：找攝影公司（拍照片、製作請柬）</p>\n</li>\n<li><p>宴席：找酒店（告訴對方標準、數量、挑選菜品）</p>\n</li>\n<li><p>婚禮儀式：找婚慶公司（對方提供司儀、制定流程、提供設備、説明執行）</p>\n</li>\n</ul>\n<ol>\n<li><p>公式：程式 &#x3D; 物件 + 交互</p>\n</li>\n<li><p>優點</p>\n</li>\n</ol>\n<ul>\n<li><p>思想層面：</p>\n</li>\n<li><p>可模擬現實情景，更接近于人類思維。</p>\n</li>\n<li><p>有利於梳理歸納、分析解決問題。</p>\n</li>\n<li><p>技術層面：</p>\n</li>\n<li><p>高複用：對重複的代碼進行封裝，提高開發效率。</p>\n</li>\n<li><p>高擴展：增加新的功能，不修改以前的代碼。</p>\n</li>\n<li><p>高維護：代碼可讀性好，邏輯清晰，結構規整。</p>\n</li>\n</ul>\n<ol start=\"3\">\n<li>缺點：學習曲線陡峭。</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    物件導向程式設計</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    手機</span></span><br><span class=\"line\"><span class=\"string\">        數據：品牌、價格、顏色..</span></span><br><span class=\"line\"><span class=\"string\">        行為：通話..</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cellphone</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, brand, price, color</span>):</span><br><span class=\"line\">        self.brand = brand</span><br><span class=\"line\">        self.price = price</span><br><span class=\"line\">        self.color = color</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">call</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.brand, <span class=\"string\">&quot;打電話&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 創建手機對象</span></span><br><span class=\"line\"><span class=\"comment\"># 會調用__init__構造函數</span></span><br><span class=\"line\">iphone01 = Cellphone(<span class=\"string\">&quot;蘋果&quot;</span>, <span class=\"number\">9999</span>, <span class=\"string\">&quot;綠色&quot;</span>)</span><br><span class=\"line\">huawei01 = Cellphone(<span class=\"string\">&quot;華為&quot;</span>, <span class=\"number\">6666</span>, <span class=\"string\">&quot;白色&quot;</span>)</span><br><span class=\"line\">iphone01.call()</span><br><span class=\"line\">huawei01.call()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"類和對象\"><a href=\"#類和對象\" class=\"headerlink\" title=\"類和對象\"></a>類和對象</h2><h3 id=\"基礎概念\"><a href=\"#基礎概念\" class=\"headerlink\" title=\"基礎概念\"></a>基礎概念</h3><ol>\n<li>抽象：從具體事物中抽離出共性、本質，捨棄個別、非本質過程。</li>\n<li>類：一個抽象的概念，即生活中的”類別”。</li>\n<li>對象：類的具體實例，即歸屬於某個類別的”個體”。</li>\n<li>類是創建物件的”範本”。</li>\n</ol>\n<ul>\n<li>資料成員：名詞類型的狀態。</li>\n<li>方法成員：動詞類型的行為。</li>\n</ul>\n<h3 id=\"語法-x2F-定義類\"><a href=\"#語法-x2F-定義類\" class=\"headerlink\" title=\"語法&#x2F;定義類\"></a>語法&#x2F;定義類</h3><ol>\n<li>代碼<br>class 類名:<br>“””文檔說明”””<br>def <em>init</em>(self,參數列表):<br>self.執行個體變數 &#x3D; 參數</li>\n</ol>\n<p>方法成員</p>\n<ol>\n<li>說明</li>\n</ol>\n<ul>\n<li>類名所有單詞首字母大寫.</li>\n<li><em>init</em> 也叫構造函數，創建物件時被調用，也可以省略。</li>\n<li> self 變數綁定的是被創建的物件，名稱可以隨意。</li>\n</ul>\n<h2 id=\"創建對象-產生實體\"><a href=\"#創建對象-產生實體\" class=\"headerlink\" title=\"創建對象(產生實體)\"></a>創建對象(產生實體)</h2><p>變數 &#x3D; 構造函數 (參數清單)</p>\n<h2 id=\"實例成員\"><a href=\"#實例成員\" class=\"headerlink\" title=\"實例成員\"></a>實例成員</h2><h3 id=\"執行個體變數\"><a href=\"#執行個體變數\" class=\"headerlink\" title=\"執行個體變數\"></a>執行個體變數</h3><ol>\n<li>語法</li>\n</ol>\n<ul>\n<li>定義：對象.變數名</li>\n<li>調用：對象.變數名</li>\n</ul>\n<ol>\n<li>說明</li>\n</ol>\n<ul>\n<li><p>首次通過對象賦值為創建，再次賦值為修改.<br>w01 &#x3D; Wife()<br>w01.name &#x3D; “建寧”<br>w01.name &#x3D; “建甯公主”</p>\n</li>\n<li><p>通常在構造函數(<em>init</em>)中創建。<br>w01 &#x3D; Wife(“建甯公主,24)<br>print(w01.name)</p>\n</li>\n<li><p>每個物件存儲一份，通過物件位址訪問。</p>\n</li>\n</ul>\n<ol>\n<li>作用：描述某個物件自己的資料。</li>\n<li>__dict__：物件的屬性，用於存儲自身執行個體變數的字典。</li>\n</ol>\n<h3 id=\"實例方法\"><a href=\"#實例方法\" class=\"headerlink\" title=\"實例方法\"></a>實例方法</h3><ol>\n<li><p>語法<br>(1) 定義：  def 方法名稱(self, 參數列表):<br>方法體<br>(2) 調用： 物件位址.實例方法名(參數清單)<br>不建議通過類名訪問實例方法</p>\n</li>\n<li><p>說明<br>(1) 至少有一個形參，第一個參數綁定調用這個方法的物件,一般命名為”self”。<br>(2) 無論創建多少物件，方法只有一份，並且被所有物件共用。</p>\n</li>\n<li><p>作用：表示對象行為。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    創建狗類</span></span><br><span class=\"line\"><span class=\"string\">    資料成員包含但不限定於：品種、愛稱、年齡、性別。</span></span><br><span class=\"line\"><span class=\"string\">    方法成員包含但不限定於：吃。</span></span><br><span class=\"line\"><span class=\"string\">    創建兩個物件並調用方法。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        狗</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, breed=<span class=\"string\">&quot;&quot;</span>, name=<span class=\"string\">&quot;&quot;</span>, age=<span class=\"number\">0</span>, sex=<span class=\"string\">&quot;&quot;</span></span>):</span><br><span class=\"line\">        self.breed = breed</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\">        self.sex = sex</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">eat</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.name, <span class=\"string\">&quot;在吃&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">d01 = Dog(<span class=\"string\">&quot;拉布拉多&quot;</span>, <span class=\"string\">&quot;米咻&quot;</span>, <span class=\"number\">4</span>, <span class=\"string\">&quot;母&quot;</span>)</span><br><span class=\"line\">d02 = Dog(<span class=\"string\">&quot;拉布拉多&quot;</span>, <span class=\"string\">&quot;黑米&quot;</span>, <span class=\"number\">3</span>, <span class=\"string\">&quot;公&quot;</span>)</span><br><span class=\"line\">d01.eat()</span><br><span class=\"line\">d02.eat()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 練習1:根據下列代碼畫出記憶體圖</span></span><br><span class=\"line\">d03 = d01</span><br><span class=\"line\">d01.age = <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(d03.age)<span class=\"comment\">#?</span></span><br><span class=\"line\"></span><br><span class=\"line\">d04 = d02</span><br><span class=\"line\">d02 = Dog(<span class=\"string\">&quot;哈士奇&quot;</span>,<span class=\"string\">&quot;二哈&quot;</span>,<span class=\"number\">2</span>,<span class=\"string\">&quot;公&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(d04.name)<span class=\"comment\">#?</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 練習2:根據下列代碼畫出記憶體圖</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun01</span>(<span class=\"params\">p01</span>):</span><br><span class=\"line\">    p01.name = <span class=\"string\">&quot;哈哈哈&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">fun01(d02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(d02.name)<span class=\"comment\"># ???</span></span><br><span class=\"line\"></span><br><span class=\"line\">list01 = [</span><br><span class=\"line\">    d01,</span><br><span class=\"line\">    d02,</span><br><span class=\"line\">    Dog(<span class=\"string\">&quot;沙皮&quot;</span>,<span class=\"string\">&quot;皮皮&quot;</span>,<span class=\"number\">3</span>,<span class=\"string\">&quot;公&quot;</span>),</span><br><span class=\"line\">    Dog(<span class=\"string\">&quot;金毛&quot;</span>,<span class=\"string\">&quot;毛毛&quot;</span>,<span class=\"number\">1</span>,<span class=\"string\">&quot;母&quot;</span>),</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 練習3：定義函數，在狗清單中查找所有拉拉布拉多。</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find01</span>():</span><br><span class=\"line\">    list_result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> item.breed == <span class=\"string\">&quot;拉布拉多&quot;</span>:</span><br><span class=\"line\">            list_result.append(item)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> list_result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -----------------------</span></span><br><span class=\"line\">re = find01()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;----&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> re:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item.name)</span><br></pre></td></tr></table></figure></li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    實例成員</span></span><br><span class=\"line\"><span class=\"string\">        執行個體變數：</span></span><br><span class=\"line\"><span class=\"string\">            對象.名稱</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, face_score=<span class=\"number\">0</span>, age=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.face_score = face_score</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">play</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.name, <span class=\"string\">&quot;玩耍&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ak = Wife(<span class=\"string\">&quot;蕭大&quot;</span>, <span class=\"number\">100</span>, <span class=\"number\">23</span>)</span><br><span class=\"line\">sq = Wife(<span class=\"string\">&quot;鰻是&quot;</span>, <span class=\"number\">92</span>, <span class=\"number\">32</span>)</span><br><span class=\"line\">ak.play()  <span class=\"comment\"># 通過物件位址調用實例方法</span></span><br><span class=\"line\">sq.play()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 不建議</span></span><br><span class=\"line\"><span class=\"comment\"># class Wife:</span></span><br><span class=\"line\"><span class=\"comment\">#     pass</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># ak = Wife()</span></span><br><span class=\"line\"><span class=\"comment\"># # 創建執行個體變數</span></span><br><span class=\"line\"><span class=\"comment\"># ak.name = &quot;阿珂&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># # 讀取執行個體變數</span></span><br><span class=\"line\"><span class=\"comment\"># print(ak.name)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 不建議</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, age=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.fun01(age)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">fun01</span>(<span class=\"params\">self, age=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\"></span><br><span class=\"line\">ak = Wife(<span class=\"string\">&quot;阿珂&quot;</span>, <span class=\"number\">23</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(ak.name)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(ak.age)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 物件具有的執行個體變數</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(ak.__dict__)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day05_06_購物車","url":"/2021/12/28/2021-12-28-%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day05-06-%E8%B3%BC%E7%89%A9%E8%BB%8A/","content":"<h1 id=\"購物車\"><a href=\"#購物車\" class=\"headerlink\" title=\"購物車\"></a>購物車</h1><span id=\"more\"></span>\n<h1 id=\"購物車邏輯\"><a href=\"#購物車邏輯\" class=\"headerlink\" title=\"購物車邏輯\"></a>購物車邏輯</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">shang_pin_info = &#123;</span><br><span class=\"line\">    <span class=\"number\">101</span>: &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;屠龍刀&quot;</span>, <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">10000</span>&#125;,</span><br><span class=\"line\">    <span class=\"number\">102</span>: &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;倚天劍&quot;</span>, <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">10000</span>&#125;,</span><br><span class=\"line\">    <span class=\"number\">103</span>: &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;九陰白骨爪&quot;</span>, <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">8000</span>&#125;,</span><br><span class=\"line\">    <span class=\"number\">104</span>: &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;九陽神功&quot;</span>, <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">9000</span>&#125;,</span><br><span class=\"line\">    <span class=\"number\">105</span>: &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;降龍十八掌&quot;</span>, <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">8000</span>&#125;,</span><br><span class=\"line\">    <span class=\"number\">106</span>: &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;乾坤大挪移&quot;</span>, <span class=\"string\">&quot;price&quot;</span>: <span class=\"number\">10000</span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ding_dan = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">gou_wu</span>():</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        購物</span></span><br><span class=\"line\"><span class=\"string\">    :return:</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        item = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;1鍵購買，2鍵結算。&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> item == <span class=\"string\">&quot;1&quot;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> shang_pin_info.items():</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;編號：%d，名稱：%s，單價：%d。&quot;</span> % (key, value[<span class=\"string\">&quot;name&quot;</span>], value[<span class=\"string\">&quot;price&quot;</span>]))</span><br><span class=\"line\">            <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">                cid = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入商品編號：&quot;</span>))</span><br><span class=\"line\">                <span class=\"keyword\">if</span> cid <span class=\"keyword\">in</span> shang_pin_info:</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;該商品不存在&quot;</span>)</span><br><span class=\"line\">            count = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入購買數量：&quot;</span>))</span><br><span class=\"line\">            ding_dan.append(&#123;<span class=\"string\">&quot;cid&quot;</span>: cid, <span class=\"string\">&quot;count&quot;</span>: count&#125;)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;添加到購物車。&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> item == <span class=\"string\">&quot;2&quot;</span>:</span><br><span class=\"line\">            zong_jia = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> ding_dan:</span><br><span class=\"line\">                shang_pin = shang_pin_info[item[<span class=\"string\">&quot;cid&quot;</span>]]</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;商品：%s，單價：%d,數量:%d.&quot;</span> % (shang_pin[<span class=\"string\">&quot;name&quot;</span>], shang_pin[<span class=\"string\">&quot;price&quot;</span>], item[<span class=\"string\">&quot;count&quot;</span>]))</span><br><span class=\"line\">                zong_jia += shang_pin[<span class=\"string\">&quot;price&quot;</span>] * item[<span class=\"string\">&quot;count&quot;</span>]</span><br><span class=\"line\">            <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">                qian = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;總價%d元，請輸入金額：&quot;</span> % zong_jia))</span><br><span class=\"line\">                <span class=\"keyword\">if</span> qian &gt;= zong_jia:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;購買成功，找回：%d元。&quot;</span> % (qian - zong_jia))</span><br><span class=\"line\">                    ding_dan.clear()</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;金額不足.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">gou_wu()</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【物件導向Object Oriented】_03_三大特徵-封裝","url":"/2021/12/28/2021-12-28-%E3%80%90%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91Object-Oriented%E3%80%91-03-%E4%B8%89%E5%A4%A7%E7%89%B9%E5%BE%B5-%E5%B0%81%E8%A3%9D/","content":"<h2 id=\"數據角度講\"><a href=\"#數據角度講\" class=\"headerlink\" title=\"數據角度講\"></a>數據角度講</h2><ol>\n<li>定義：<br>將一些基底資料型別複合成一個自訂類型。<span id=\"more\"></span></li>\n<li>優勢：<br>將資料與對資料的操作相關聯。<br>代碼可讀性更高（類是物件的範本）。</li>\n</ol>\n<h2 id=\"行為角度講\"><a href=\"#行為角度講\" class=\"headerlink\" title=\"行為角度講\"></a>行為角度講</h2><ol>\n<li><p>定義：<br>類外提供必要的功能，隱藏實現的細節。</p>\n</li>\n<li><p>優勢：<br>簡化程式設計，使用者不必瞭解具體的實現細節，只需要調用對外提供的功能。</p>\n</li>\n<li><p>私有成員：</p>\n</li>\n</ol>\n<ul>\n<li>作用：無需向類外提供的成員，可以通過私有化進行遮罩。</li>\n<li>做法：命名使用雙底線開頭。</li>\n<li>本質：障眼法，實際也可以訪問。</li>\n</ul>\n<p>私有成員的名稱被修改為：_類名__成員名，可以通過_dict_屬性或dir函數查看。</p>\n<ul>\n<li><p>屬性@property：<br>公開的執行個體變數，缺少邏輯驗證。私有的執行個體變數與兩個公開的方法相結合，又使調用者的操作略顯複雜。而屬性可以將兩個方法的使用方式像操作變數一樣方便。</p>\n</li>\n<li><p>定義：<br>@property<br>def 屬性名(self):<br>return self.__屬性名<br>@屬性名.setter<br>def 屬性名(self, value):<br>self.__屬性名&#x3D; value</p>\n</li>\n<li><p>調用：<br>對象.屬性名 &#x3D; 資料<br>變數 &#x3D; 物件.屬性名</p>\n</li>\n<li><p>說明：<br>通常兩個公開的屬性，保護一個私有的變數。<br>@property 負責讀取，@屬性名.setter 負責寫入<br>只寫：屬性名&#x3D; property(None, 寫入方法名)</p>\n</li>\n</ul>\n<h2 id=\"快捷鍵：\"><a href=\"#快捷鍵：\" class=\"headerlink\" title=\"快捷鍵：\"></a>快捷鍵：</h2><p>直接輸入prop，就會顯示選單列<br><a href=\"https://imgur.com/A7TYVDJ\"><img src=\"https://i.imgur.com/A7TYVDJ.png\" title=\"source: imgur.com\" /></a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    封裝 -- 私有成員</span></span><br><span class=\"line\"><span class=\"string\">        障眼法：修改了私有變數名稱</span></span><br><span class=\"line\"><span class=\"string\">            本質： __變數名  --&gt;   _類名__變數名</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 1. 私有化執行個體變數</span></span><br><span class=\"line\"><span class=\"comment\"># 2. 提供兩個公開的讀寫方法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, age=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        <span class=\"comment\"># self.__age = age</span></span><br><span class=\"line\">        self.set_age(age)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_age</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__age</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">set_age</span>(<span class=\"params\">self, value</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"number\">20</span> &lt;= value &lt;= <span class=\"number\">50</span>:</span><br><span class=\"line\">            self.__age = value</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&quot;我不要&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">w01 = Wife(<span class=\"string\">&quot;甯寧&quot;</span>, <span class=\"number\">25</span>)</span><br><span class=\"line\">w02 = Wife(<span class=\"string\">&quot;鐵錘&quot;</span>, <span class=\"number\">26</span>)</span><br><span class=\"line\">w01.set_age(<span class=\"number\">27</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(w01.get_age())</span><br><span class=\"line\"></span><br><span class=\"line\">w01.__age = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"comment\"># print(w01.__age)# 私有化</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(w01.__dict__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(w01._Wife__age)<span class=\"comment\"># ????</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"設計角度講\"><a href=\"#設計角度講\" class=\"headerlink\" title=\"設計角度講\"></a>設計角度講</h2><p>定義：</p>\n<p>(1) 分而治之<br>將一個大的需求分解為許多類，每個類處理一個獨立的功能。</p>\n<p>(2) 變則疏之<br>變化的地方獨立封裝，避免影響其他類。</p>\n<p>(3) 高 內 聚<br>類中各個方法都在完成一項任務(單一職責的類)。</p>\n<p>(4) 低 耦 合<br>類與類的關聯性與依賴度要低(每個類獨立)，讓一個類的改變，盡少影響其他類。</p>\n<p>優勢：<br>便於分工，便於複用，可擴展性強。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>介面可能使用控制台，也可能使用Web等等。</p>\n<ul>\n<li>識別對象：介面視圖類 邏輯控制類 資料模型類</li>\n<li>分配職責：</li>\n</ul>\n<p>介面視圖類：負責處理介面邏輯，比如顯示功能表，獲取輸入，顯示結果等。</p>\n<p>邏輯控制類：負責存儲學生資訊，處理業務邏輯。比如添加、刪除等</p>\n<p>資料模型類：定義需要處理的資料類型。比如學生資訊。</p>\n<ul>\n<li><p>建立交互：</p>\n<pre><code>          介面視圖物件  &lt;----&gt; 資料模型物件   &lt;----&gt;  邏輯控制物件\n</code></pre>\n</li>\n</ul>\n<h3 id=\"設計\"><a href=\"#設計\" class=\"headerlink\" title=\"設計\"></a>設計</h3><p>資料模型類：StudentModel<br>數據：編號 id,姓名 name,年齡 age,成績 score<br>邏輯控制類：StudentManagerController<br>數據：學生列表 __stu_list<br>行為：獲取列表 stu_list,添加學生 add_student，刪除學生remove_student，修改學生update_student，根據成績排序order_by_score。</p>\n<p>介面視圖類：StudentManagerView</p>\n<p>數據：邏輯控制物件__manager</p>\n<p>行為：顯示功能表__display_menu，選擇菜單項__select_menu_item，入口邏輯main，<br>輸入學生__input_students，輸出學生__output_students，刪除學生__delete_student，修改學生資訊__modify_student</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    封裝 -- 屬性</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 1. 創建執行個體變數</span></span><br><span class=\"line\"><span class=\"comment\"># 2. 提供兩個公開的讀寫方法</span></span><br><span class=\"line\"><span class=\"comment\"># 3. 創建類變數存儲property物件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, age=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        <span class=\"comment\"># self.set_age(age)</span></span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_age</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__age</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">set_age</span>(<span class=\"params\">self, value</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"number\">20</span> &lt;= value &lt;= <span class=\"number\">50</span>:</span><br><span class=\"line\">            self.__age = value</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&quot;我不要&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 類變數</span></span><br><span class=\"line\">    <span class=\"comment\"># property 作用:攔截</span></span><br><span class=\"line\">    age = <span class=\"built_in\">property</span>(get_age, set_age)</span><br><span class=\"line\"></span><br><span class=\"line\">w01 = Wife(<span class=\"string\">&quot;甯寧&quot;</span>, <span class=\"number\">25</span>)</span><br><span class=\"line\">w02 = Wife(<span class=\"string\">&quot;鐵錘&quot;</span>, <span class=\"number\">26</span>)</span><br><span class=\"line\"><span class=\"comment\"># w01.set_age(27)</span></span><br><span class=\"line\">w01.age = <span class=\"number\">27</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(w01.age)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(w01.__dict__)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    封裝 -- 標準屬性</span></span><br><span class=\"line\"><span class=\"string\">        作用:保護執行個體變數</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 創建執行個體變數</span></span><br><span class=\"line\"><span class=\"comment\"># 2. 提供兩個公開的讀寫方法</span></span><br><span class=\"line\"><span class=\"comment\"># 3. 使用@property修飾讀取方法</span></span><br><span class=\"line\"><span class=\"comment\">#    使用@屬性名.setter修改寫入方法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, age=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span><span class=\"comment\"># 創建property物件,自動綁定下面方法（讀取）</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">age</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__age</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @age.setter</span><span class=\"comment\"># 自動綁定下面方法（寫入）</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">age</span>(<span class=\"params\">self, value</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"number\">20</span> &lt;= value &lt;= <span class=\"number\">50</span>:</span><br><span class=\"line\">            self.__age = value</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&quot;我不要&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">w01 = Wife(<span class=\"string\">&quot;甯寧&quot;</span>, <span class=\"number\">25</span>)</span><br><span class=\"line\">w01.age = <span class=\"number\">27</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(w01.age)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(w01.__dict__)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    屬性 - 常見寫法</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 讀寫屬性</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife01</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, age=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">age</span>(<span class=\"params\">self</span>):  <span class=\"comment\"># 秘書</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__age  <span class=\"comment\"># 老闆</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @age.setter</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">age</span>(<span class=\"params\">self, v</span>):</span><br><span class=\"line\">        self.__age = v</span><br><span class=\"line\"></span><br><span class=\"line\">w01 = Wife01(<span class=\"number\">25</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(w01.age)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 唯讀屬性</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife02</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.__age = <span class=\"number\">26</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">age</span>(<span class=\"params\">self</span>):  <span class=\"comment\"># 秘書</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__age  <span class=\"comment\"># 老闆</span></span><br><span class=\"line\"></span><br><span class=\"line\">w01 = Wife02()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(w01.age)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># w01.age = 100# 不能寫入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 只寫屬性</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife01</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, age=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># @age.setter</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__set_age</span>(<span class=\"params\">self, v</span>):</span><br><span class=\"line\">        self.__age = v</span><br><span class=\"line\"></span><br><span class=\"line\">    age = <span class=\"built_in\">property</span>(<span class=\"literal\">None</span>, __set_age)</span><br><span class=\"line\"></span><br><span class=\"line\">w01 = Wife01(<span class=\"number\">25</span>)</span><br><span class=\"line\">w01.age = <span class=\"number\">26</span></span><br><span class=\"line\"><span class=\"comment\"># print(w01.age)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(w01.__dict__)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    複習</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 類成員:類</span></span><br><span class=\"line\">    total_count = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @classmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">print_total_count</span>(<span class=\"params\">cls</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(cls.total_count)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 實例成員:對象</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">print_self</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 靜態方法：類</span></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">tools</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;獨立的功能&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">c01 = MyClass()</span><br><span class=\"line\">c01.name = <span class=\"string\">&quot;xx&quot;</span></span><br><span class=\"line\">c01.print_self()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"封裝設計思想\"><a href=\"#封裝設計思想\" class=\"headerlink\" title=\"封裝設計思想\"></a>封裝設計思想</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    封裝-設計思想</span></span><br><span class=\"line\"><span class=\"string\">        請以物件導向的思想，描述以下場景：</span></span><br><span class=\"line\"><span class=\"string\">            老張開車去東北</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 寫法1：每次都會創建一輛新車</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">class Person:</span></span><br><span class=\"line\"><span class=\"string\">    def __init__(self, name=&quot;&quot;):</span></span><br><span class=\"line\"><span class=\"string\">        self.name = name</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    def go_to(self, pos):</span></span><br><span class=\"line\"><span class=\"string\">        print(&quot;去&quot;, pos)</span></span><br><span class=\"line\"><span class=\"string\">        car = Car()</span></span><br><span class=\"line\"><span class=\"string\">        car.run()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">class Car:</span></span><br><span class=\"line\"><span class=\"string\">    def run(self):</span></span><br><span class=\"line\"><span class=\"string\">        print(&quot;嘟嘟嘟...&quot;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">lz = Person(&quot;老張&quot;)</span></span><br><span class=\"line\"><span class=\"string\">lz.go_to(&quot;東北&quot;)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 寫法2：老張的車</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">class Person:</span></span><br><span class=\"line\"><span class=\"string\">    def __init__(self, name=&quot;&quot;):</span></span><br><span class=\"line\"><span class=\"string\">        self.name = name</span></span><br><span class=\"line\"><span class=\"string\">        self.car = Car()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    def go_to(self, pos):</span></span><br><span class=\"line\"><span class=\"string\">        print(&quot;去&quot;, pos)</span></span><br><span class=\"line\"><span class=\"string\">        self.car.run()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">class Car:</span></span><br><span class=\"line\"><span class=\"string\">    def run(self):</span></span><br><span class=\"line\"><span class=\"string\">        print(&quot;嘟嘟嘟...&quot;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">lz = Person(&quot;老張&quot;)</span></span><br><span class=\"line\"><span class=\"string\">lz.go_to(&quot;東北&quot;)</span></span><br><span class=\"line\"><span class=\"string\">lz.go_to(&quot;西北&quot;)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 寫法3：人與車的關係鬆散</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">go_to</span>(<span class=\"params\">self, pos, vehicle</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;去&quot;</span>, pos)</span><br><span class=\"line\">        vehicle.run()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">run</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;嘟嘟嘟...&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">lz = Person(<span class=\"string\">&quot;老張&quot;</span>)</span><br><span class=\"line\">c01 = Car()</span><br><span class=\"line\">lz.go_to(<span class=\"string\">&quot;東北&quot;</span>, c01)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【物件導向Object Oriented】_02_類成員 / 靜態方法","url":"/2021/12/28/2021-12-28-%E3%80%90%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91Object-Oriented%E3%80%91-02-%E9%A1%9E%E6%88%90%E5%93%A1-%E9%9D%9C%E6%85%8B%E6%96%B9%E6%B3%95/","content":"<h2 id=\"類變數\"><a href=\"#類變數\" class=\"headerlink\" title=\"類變數\"></a>類變數</h2><ol>\n<li>語法</li>\n</ol>\n<ul>\n<li>定義：在類中，方法外定義變數。<br>class 類名:<br>變數名 &#x3D; 運算式</li>\n<li>調用：類名.變數名<br>不建議通過物件訪問類變數<span id=\"more\"></span></li>\n</ul>\n<ol>\n<li>說明<br>(1) 存儲在類中。<br>(2) 只有一份，被所有物件共用。</li>\n<li>作用：描述所有物件的共有資料。</li>\n</ol>\n<h2 id=\"類方法\"><a href=\"#類方法\" class=\"headerlink\" title=\"類方法\"></a>類方法</h2><ol start=\"3\">\n<li>語法</li>\n</ol>\n<ul>\n<li>定義：<br>@classmethod<br>def 方法名稱(cls,參數列表):</li>\n</ul>\n<p>方法體</p>\n<ul>\n<li>調用：類名.方法名(參數列表)<br>不建議通過物件訪問類方法</li>\n</ul>\n<ol>\n<li><p>說明<br>(1) 至少有一個形參，第一個形參用於綁定類，一般命名為’cls’<br>(2) 使用@classmethod修飾的目的是調用類方法時可以隱式傳遞類。<br>(3) 類方法中不能訪問實例成員，實例方法中可以訪問類成員。</p>\n</li>\n<li><p>作用：操作類變數。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    類成員</span></span><br><span class=\"line\"><span class=\"string\">        類變數：</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ICBC</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        工商銀行</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 類變數：大家的資料(總行的錢)</span></span><br><span class=\"line\">    total_money = <span class=\"number\">1000000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @classmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">print_total_money</span>(<span class=\"params\">cls</span>):</span><br><span class=\"line\">        <span class=\"comment\"># print(&quot;總行的錢：&quot;,ICBC.total_money)</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;總行的錢：&quot;</span>,cls.total_money)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, money=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.money = money</span><br><span class=\"line\">        <span class=\"comment\"># 總行的錢減少</span></span><br><span class=\"line\">        ICBC.total_money -= money</span><br><span class=\"line\"></span><br><span class=\"line\">i01  = ICBC(<span class=\"string\">&quot;陶然亭支行&quot;</span>,<span class=\"number\">100000</span>)</span><br><span class=\"line\">ICBC.print_total_money()</span><br><span class=\"line\"></span><br><span class=\"line\">i02  = ICBC(<span class=\"string\">&quot;天壇支行&quot;</span>,<span class=\"number\">100000</span>)</span><br><span class=\"line\">ICBC.print_total_money()</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"靜態方法\"><a href=\"#靜態方法\" class=\"headerlink\" title=\"靜態方法\"></a>靜態方法</h2><ol>\n<li>語法</li>\n</ol>\n<ul>\n<li>定義：<br>@staticmethod<br>def 方法名稱(參數列表):</li>\n</ul>\n<p>方法體</p>\n<ul>\n<li>調用：類名.方法名(參數列表)<br>不建議通過物件訪問靜態方法</li>\n</ul>\n<ol start=\"2\">\n<li><p>說明<br>(1) 使用@ staticmethod修飾的目的是該方法不需要隱式傳參數。<br>(2) 靜態方法不能訪問實例成員和類成員</p>\n</li>\n<li><p>作用：定義常用的工具函數。</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    靜態方法引入</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">list01 = [</span><br><span class=\"line\">    [<span class=\"string\">&quot;00&quot;</span>,<span class=\"string\">&quot;01&quot;</span>,<span class=\"string\">&quot;02&quot;</span>,<span class=\"string\">&quot;03&quot;</span>,<span class=\"string\">&quot;04&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;10&quot;</span>,<span class=\"string\">&quot;11&quot;</span>,<span class=\"string\">&quot;12&quot;</span>,<span class=\"string\">&quot;13&quot;</span>,<span class=\"string\">&quot;04&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;20&quot;</span>,<span class=\"string\">&quot;21&quot;</span>,<span class=\"string\">&quot;22&quot;</span>,<span class=\"string\">&quot;23&quot;</span>,<span class=\"string\">&quot;34&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;30&quot;</span>,<span class=\"string\">&quot;31&quot;</span>,<span class=\"string\">&quot;32&quot;</span>,<span class=\"string\">&quot;33&quot;</span>,<span class=\"string\">&quot;34&quot;</span>],</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Vector2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,x = <span class=\"number\">0</span>,y = <span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.x = x</span><br><span class=\"line\">        self.y = y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_right</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Vector2(<span class=\"number\">0</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">pos = Vector2(<span class=\"number\">2</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">right = get_right()</span><br><span class=\"line\">pos.x += right.x</span><br><span class=\"line\">pos.y += right.y</span><br><span class=\"line\"><span class=\"built_in\">print</span>(pos.x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(pos.y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 需求：30位置上向右獲取3個元素</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_elements</span>(<span class=\"params\">list_target,vect_pos,vect_dir,count</span>):</span><br><span class=\"line\">    list_result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> __ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(count):</span><br><span class=\"line\">        vect_pos.x += vect_dir.x</span><br><span class=\"line\">        vect_pos.y += vect_dir.y</span><br><span class=\"line\">        element = list_target[vect_pos.x][vect_pos.y]</span><br><span class=\"line\">        list_result.append(element)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> list_result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(get_elements(list01,Vector2(<span class=\"number\">3</span>,<span class=\"number\">0</span>),get_right(),<span class=\"number\">3</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    靜態方法</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Vector2</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        向量</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,x = <span class=\"number\">0</span>,y = <span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.x = x</span><br><span class=\"line\">        self.y = y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_left</span>():</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Vector2(<span class=\"number\">0</span>,-<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_right</span>():</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Vector2(<span class=\"number\">0</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_up</span>():</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Vector2(-<span class=\"number\">1</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DoubleListHelper</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        二維列表助手類</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_elements</span>(<span class=\"params\">list_target, vect_pos, vect_dir, count</span>):</span><br><span class=\"line\">        list_result = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> __ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(count):</span><br><span class=\"line\">            vect_pos.x += vect_dir.x</span><br><span class=\"line\">            vect_pos.y += vect_dir.y</span><br><span class=\"line\">            element = list_target[vect_pos.x][vect_pos.y]</span><br><span class=\"line\">            list_result.append(element)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list_result</span><br><span class=\"line\"></span><br><span class=\"line\">pos = Vector2(<span class=\"number\">2</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">right = Vector2.get_right()</span><br><span class=\"line\">pos.x += right.x</span><br><span class=\"line\">pos.y += right.y</span><br><span class=\"line\"><span class=\"built_in\">print</span>(pos.x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(pos.y)</span><br><span class=\"line\"></span><br><span class=\"line\">list01 = [</span><br><span class=\"line\">    [<span class=\"string\">&quot;00&quot;</span>,<span class=\"string\">&quot;01&quot;</span>,<span class=\"string\">&quot;02&quot;</span>,<span class=\"string\">&quot;03&quot;</span>,<span class=\"string\">&quot;04&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;10&quot;</span>,<span class=\"string\">&quot;11&quot;</span>,<span class=\"string\">&quot;12&quot;</span>,<span class=\"string\">&quot;13&quot;</span>,<span class=\"string\">&quot;14&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;20&quot;</span>,<span class=\"string\">&quot;21&quot;</span>,<span class=\"string\">&quot;22&quot;</span>,<span class=\"string\">&quot;23&quot;</span>,<span class=\"string\">&quot;24&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;30&quot;</span>,<span class=\"string\">&quot;31&quot;</span>,<span class=\"string\">&quot;32&quot;</span>,<span class=\"string\">&quot;33&quot;</span>,<span class=\"string\">&quot;34&quot;</span>],</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(DoubleListHelper.get_elements(list01,Vector2(<span class=\"number\">3</span>,<span class=\"number\">0</span>),Vector2.get_right(),<span class=\"number\">3</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 練習:32位置 向上獲取3個元素</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(DoubleListHelper.get_elements(list01,Vector2(<span class=\"number\">3</span>,<span class=\"number\">2</span>),Vector2.get_up(),<span class=\"number\">3</span>))</span><br><span class=\"line\"><span class=\"comment\"># 練習:34位置 向左獲取3個元素</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(DoubleListHelper.get_elements(list01,Vector2(<span class=\"number\">3</span>,<span class=\"number\">4</span>),Vector2.get_left(),<span class=\"number\">3</span>))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Vector2</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        向量</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,x = <span class=\"number\">0</span>,y = <span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.x = x</span><br><span class=\"line\">        self.y = y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_left</span>():</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Vector2(<span class=\"number\">0</span>,-<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_right</span>():</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Vector2(<span class=\"number\">0</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_up</span>():</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Vector2(-<span class=\"number\">1</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DoubleListHelper</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        二維列表助手類</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_elements</span>(<span class=\"params\">list_target, vect_pos, vect_dir, count</span>):</span><br><span class=\"line\">        list_result = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> __ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(count):</span><br><span class=\"line\">            vect_pos.x += vect_dir.x</span><br><span class=\"line\">            vect_pos.y += vect_dir.y</span><br><span class=\"line\">            element = list_target[vect_pos.x][vect_pos.y]</span><br><span class=\"line\">            list_result.append(element)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list_result</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【物件導向Object Oriented】_04_三大特徵-繼承","url":"/2021/12/28/2021-12-28-%E3%80%90%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91Object-Oriented%E3%80%91-04-%E4%B8%89%E5%A4%A7%E7%89%B9%E5%BE%B5-%E7%B9%BC%E6%89%BF/","content":"<h2 id=\"語法角度講\"><a href=\"#語法角度講\" class=\"headerlink\" title=\"語法角度講\"></a>語法角度講</h2><h3 id=\"繼承方法\"><a href=\"#繼承方法\" class=\"headerlink\" title=\"繼承方法\"></a>繼承方法</h3><ul>\n<li>代碼:</li>\n</ul>\n<p>class 父類:<br>def 父類方法(self):</p>\n<span id=\"more\"></span>\n<p>方法體<br>class 子類(父類)：<br>def 子類方法(self):</p>\n<p>方法體<br>兒子 &#x3D; 子類()<br>兒子.子類方法()<br>兒子.父類方法()</p>\n<ul>\n<li>說明：<br>子類直接擁有父類的方法.</li>\n</ul>\n<h3 id=\"內置函數\"><a href=\"#內置函數\" class=\"headerlink\" title=\"內置函數\"></a>內置函數</h3><p>isinstance(對象, 類型)<br>返回指定物件是否是某個類的物件。<br>issubclass(類型，類型)<br>返回指定類型是否屬於某個類型。</p>\n<h3 id=\"繼承資料\"><a href=\"#繼承資料\" class=\"headerlink\" title=\"繼承資料\"></a>繼承資料</h3><ul>\n<li><p>代碼<br>class 子類(父類):<br>def <strong>init</strong>(self,參數列表):<br>super().<strong>init</strong>(參數列表)<br>self.自身執行個體變數 &#x3D; 參數</p>\n</li>\n<li><p>說明<br>子類如果沒有構造函數，將自動執行父類的，但如果有構造函數將覆蓋父類的。此時必須通過super()函式呼叫父類的構造函數，以確保父類執行個體變數被正常創建。</p>\n</li>\n</ul>\n<h3 id=\"定義\"><a href=\"#定義\" class=\"headerlink\" title=\"定義\"></a>定義</h3><p>重用現有類的功能，並在此基礎上進行擴展。<br>說明：子類直接具有父類的成員（共性），還可以擴展新功能。</p>\n<h3 id=\"優點\"><a href=\"#優點\" class=\"headerlink\" title=\"優點\"></a>優點</h3><p>一種代碼複用的方式。</p>\n<h3 id=\"缺點\"><a href=\"#缺點\" class=\"headerlink\" title=\"缺點\"></a>缺點</h3><p>耦合度高：父類的變化，直接影響子類。</p>\n<h2 id=\"設計角度講\"><a href=\"#設計角度講\" class=\"headerlink\" title=\"設計角度講\"></a>設計角度講</h2><h3 id=\"定義-1\"><a href=\"#定義-1\" class=\"headerlink\" title=\"定義\"></a>定義</h3><p>將相關類的共性進行抽象，統一概念，隔離變化。</p>\n<h3 id=\"適用性\"><a href=\"#適用性\" class=\"headerlink\" title=\"適用性\"></a>適用性</h3><p>多個類在概念上是一致的，且需要進行統一的處理。</p>\n<h3 id=\"相關概念\"><a href=\"#相關概念\" class=\"headerlink\" title=\"相關概念\"></a>相關概念</h3><p>父類（基類、超類）、子類（派生類）。<br>父類相對于子類更抽象，範圍更寬泛；子類相對于父類更具體，範圍更狹小。<br>單繼承：父類只有一個（例如 Java，C#）。<br>多繼承：父類有多個（例如C++，Python）。<br>Object類：任何類都直接或間接繼承自 object 類。</p>\n<h3 id=\"多繼承\"><a href=\"#多繼承\" class=\"headerlink\" title=\"多繼承\"></a>多繼承</h3><p>一個子類繼承兩個或兩個以上的基類，父類中的屬性和方法同時被子類繼承下來。<br>同名方法的解析順序（MRO， Method Resolution Order）:<br>類自身 –&gt; 父類繼承列表（由左至右）–&gt; 再上層父類</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">   A</span><br><span class=\"line\"></span><br><span class=\"line\">  / \\</span><br><span class=\"line\"></span><br><span class=\"line\"> /   \\</span><br><span class=\"line\"></span><br><span class=\"line\">B     C</span><br><span class=\"line\"></span><br><span class=\"line\"> \\   /</span><br><span class=\"line\"></span><br><span class=\"line\">  \\ /</span><br><span class=\"line\"></span><br><span class=\"line\">   D</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    繼承 - 行為</span></span><br><span class=\"line\"><span class=\"string\">        財產：錢不用孩子掙,但是可以花.</span></span><br><span class=\"line\"><span class=\"string\">        皇位：江山不用太子打,但是可以坐.</span></span><br><span class=\"line\"><span class=\"string\">        代碼：子類不用寫,但是可以直接用.</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">say</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;說話&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span>(<span class=\"title class_ inherited__\">Person</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">study</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;學習&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().say()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Teacher</span>(<span class=\"title class_ inherited__\">Person</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">teach</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;教學&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p01 = Person()</span><br><span class=\"line\"><span class=\"comment\"># 父類物件,只能訪問父類成員</span></span><br><span class=\"line\">p01.say()</span><br><span class=\"line\"></span><br><span class=\"line\">s01 = Student()</span><br><span class=\"line\"><span class=\"comment\"># 子類物件,可以訪問父類成員和本類成員</span></span><br><span class=\"line\">s01.say()</span><br><span class=\"line\">s01.study()</span><br><span class=\"line\"></span><br><span class=\"line\">t01 = Teacher()</span><br><span class=\"line\"><span class=\"comment\"># 不能訪問兄弟類成員</span></span><br><span class=\"line\"><span class=\"comment\"># t01.study()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 內置函數</span></span><br><span class=\"line\"><span class=\"comment\"># isinstance   物件  是一種  類型</span></span><br><span class=\"line\"><span class=\"comment\"># 人物件 是一種 人類型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>(p01, Person))  <span class=\"comment\"># True</span></span><br><span class=\"line\"><span class=\"comment\"># 學生物件 是一種 人類型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>(s01, Person))  <span class=\"comment\"># True</span></span><br><span class=\"line\"><span class=\"comment\"># 老師對象 是一種 學生類型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>(t01, Student))  <span class=\"comment\"># False</span></span><br><span class=\"line\"><span class=\"comment\"># 人物件 是一種 老師類型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>(p01, Teacher))  <span class=\"comment\"># False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># issubclass   類型  是一種  類型</span></span><br><span class=\"line\"><span class=\"comment\"># 人類型 是一種 人類型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">issubclass</span>(Person, Person))  <span class=\"comment\"># True</span></span><br><span class=\"line\"><span class=\"comment\"># # 學生類型 是一種 人類型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">issubclass</span>(Student, Person))  <span class=\"comment\"># True</span></span><br><span class=\"line\"><span class=\"comment\"># # 老師類型 是一種 學生類型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">issubclass</span>(Teacher, Student))  <span class=\"comment\"># False</span></span><br><span class=\"line\"><span class=\"comment\"># # 人類型 是一種 老師類型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">issubclass</span>(Person, Teacher))  <span class=\"comment\"># False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># type 對象  是  類型</span></span><br><span class=\"line\"><span class=\"comment\"># 人對象 是 人類型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(p01) == Person)  <span class=\"comment\"># True</span></span><br><span class=\"line\"><span class=\"comment\"># 學生對象 是 人類型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(s01) == Person)  <span class=\"comment\"># False</span></span><br><span class=\"line\"><span class=\"comment\"># 老師對象 是 學生類型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(t01) == Student)  <span class=\"comment\"># False</span></span><br><span class=\"line\"><span class=\"comment\"># 人對象 是 老師類型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(p01) == Teacher)  <span class=\"comment\"># False</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    繼承 - 資料</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span>(<span class=\"title class_ inherited__\">Person</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, score=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__(name)</span><br><span class=\"line\">        self.score = score</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果子類沒有構造函數,直接使用父類構造函數</span></span><br><span class=\"line\">s01 = Student(<span class=\"string\">&quot;悟空&quot;</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s01.name)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【物件導向Object Oriented】_05_三大特徵-多態","url":"/2021/12/28/2021-12-28-%E3%80%90%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91Object-Oriented%E3%80%91-05-%E4%B8%89%E5%A4%A7%E7%89%B9%E5%BE%B5-%E5%A4%9A%E6%85%8B/","content":"<h2 id=\"設計角度講\"><a href=\"#設計角度講\" class=\"headerlink\" title=\"設計角度講\"></a>設計角度講</h2><h3 id=\"定義\"><a href=\"#定義\" class=\"headerlink\" title=\"定義\"></a>定義</h3><p>父類的同一種動作或者行為，在不同的子類上有不同的實現。</p>\n<span id=\"more\"></span>\n<h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><ol>\n<li>在繼承的基礎上，體現類型的個性化（一個行為有不同的實現）。</li>\n<li>增強程式擴展性，體現開閉原則。</li>\n</ol>\n<h2 id=\"語法角度講\"><a href=\"#語法角度講\" class=\"headerlink\" title=\"語法角度講\"></a>語法角度講</h2><h3 id=\"重寫\"><a href=\"#重寫\" class=\"headerlink\" title=\"重寫\"></a>重寫</h3><p>子類實現了父類中相同的方法（方法名、參數）。<br>在調用該方法時，實際執行的是子類的方法。</p>\n<h2 id=\"快速鍵\"><a href=\"#快速鍵\" class=\"headerlink\" title=\"快速鍵\"></a>快速鍵</h2><p>Ctrl + O</p>\n<h2 id=\"內置可重寫函數\"><a href=\"#內置可重寫函數\" class=\"headerlink\" title=\"內置可重寫函數\"></a>內置可重寫函數</h2><p>Python中，以雙底線開頭、雙底線結尾的是系統定義的成員。我們可以在自訂類中進行重寫，從而改變其行為。</p>\n<h2 id=\"轉換字串\"><a href=\"#轉換字串\" class=\"headerlink\" title=\"轉換字串\"></a>轉換字串</h2><p>__str__函數：將物件轉換為字串(對人友好的)<br>__repr__函數：將物件轉換為字串(解譯器可識別的)</p>\n<h2 id=\"運算子重載\"><a href=\"#運算子重載\" class=\"headerlink\" title=\"運算子重載\"></a>運算子重載</h2><p>定義：讓自訂的類生成的物件(實例)能夠使用運算子進行操作。<br>算數運算子<br>複合運算子重載<br>比較運算重載</p>\n<h2 id=\"算數運算子\"><a href=\"#算數運算子\" class=\"headerlink\" title=\"算數運算子\"></a>算數運算子</h2><p><a href=\"https://imgur.com/E04rdOG\"><img src=\"https://i.imgur.com/E04rdOG.png\" title=\"source: imgur.com\" /></a></p>\n<h2 id=\"複合運算子重載\"><a href=\"#複合運算子重載\" class=\"headerlink\" title=\"複合運算子重載\"></a>複合運算子重載</h2><p><a href=\"https://imgur.com/GD2g3pF\"><img src=\"https://i.imgur.com/GD2g3pF.png\" title=\"source: imgur.com\" /></a></p>\n<h2 id=\"比較運算重載\"><a href=\"#比較運算重載\" class=\"headerlink\" title=\"比較運算重載\"></a>比較運算重載</h2><p><a href=\"https://imgur.com/F1bzcqU\"><img src=\"https://i.imgur.com/F1bzcqU.png\" title=\"source: imgur.com\" /></a></p>\n<h2 id=\"重寫-覆蓋\"><a href=\"#重寫-覆蓋\" class=\"headerlink\" title=\"重寫 : 覆蓋\"></a>重寫 : 覆蓋</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    重寫:覆蓋</span></span><br><span class=\"line\"><span class=\"string\">        子類具有和父類名稱相同的方法</span></span><br><span class=\"line\"><span class=\"string\">        調用子類物件時,執行子類方法。(父類方法被覆蓋，不執行)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 物件 --&gt; 字串</span></span><br><span class=\"line\"><span class=\"comment\"># __str__</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, age=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 物件 --&gt; 字串(沒有限制)</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;奴家%s今年%d歲啦&quot;</span> % (self.name, self.age)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 物件 --&gt; 字串(python語法)</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__repr__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Wife(&#x27;%s&#x27;, %d)&quot;</span>% (self.name, self.age)</span><br><span class=\"line\"></span><br><span class=\"line\">w01 = Wife(<span class=\"string\">&quot;雙兒&quot;</span>, <span class=\"number\">22</span>)</span><br><span class=\"line\"><span class=\"comment\"># print(w01)</span></span><br><span class=\"line\">content = w01.__str__()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(content)</span><br><span class=\"line\"></span><br><span class=\"line\">code = w01.__repr__()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(code)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># eval：將字串作為python代碼執行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">eval</span>(<span class=\"string\">&quot;1+2*3&quot;</span>))</span><br><span class=\"line\"><span class=\"comment\"># print(eval(input()))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 克隆對象</span></span><br><span class=\"line\">w02 = <span class=\"built_in\">eval</span>(w01.__repr__())</span><br><span class=\"line\">w01.age = <span class=\"number\">26</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(w02.atk)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    运算符重载(重写)</span></span><br><span class=\"line\"><span class=\"string\">        自定义对象使用python运算符</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Vector2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, x, y</span>):</span><br><span class=\"line\">        self.x = x</span><br><span class=\"line\">        self.y = y</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;x的分量是%d,y的分量是%d&quot;</span> % (self.x, self.y)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># +</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__add__</span>(<span class=\"params\">self, other</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Vector2(self.x + other.x, self.y + other.y)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># +=</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__iadd__</span>(<span class=\"params\">self, other</span>):</span><br><span class=\"line\">        self.x += other.x</span><br><span class=\"line\">        self.y += other.y</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># &lt;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__lt__</span>(<span class=\"params\">self, other</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.x + self.y &lt; other.x + other.y</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># ==</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__eq__</span>(<span class=\"params\">self, other</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.x == other.x <span class=\"keyword\">and</span> self.y == other.y</span><br><span class=\"line\"></span><br><span class=\"line\">pos = Vector2(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"built_in\">dir</span> = Vector2(<span class=\"number\">0</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"comment\"># print(pos + dir)  # pos.__add__(dir)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pos.x += dir.x</span></span><br><span class=\"line\"><span class=\"comment\"># pos.y += dir.y</span></span><br><span class=\"line\">pos += <span class=\"built_in\">dir</span></span><br><span class=\"line\"><span class=\"comment\"># print(pos)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"># 创建了新对象</span></span><br><span class=\"line\"><span class=\"string\">list01 = [1]</span></span><br><span class=\"line\"><span class=\"string\">print(id(list01))</span></span><br><span class=\"line\"><span class=\"string\">list01 = list01 + [2]</span></span><br><span class=\"line\"><span class=\"string\">print(id(list01))</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 累加(在原有对象基础上增加)</span></span><br><span class=\"line\"><span class=\"string\">list02 = [1]</span></span><br><span class=\"line\"><span class=\"string\">print(id(list02))</span></span><br><span class=\"line\"><span class=\"string\">list02 += [2]</span></span><br><span class=\"line\"><span class=\"string\">print(id(list02))</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">list01 = [</span><br><span class=\"line\">    Vector2(<span class=\"number\">1</span>, <span class=\"number\">2</span>),</span><br><span class=\"line\">    Vector2(<span class=\"number\">7</span>, <span class=\"number\">8</span>),</span><br><span class=\"line\">    Vector2(<span class=\"number\">5</span>, <span class=\"number\">6</span>),</span><br><span class=\"line\">    Vector2(<span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># sorted升序：内部在循环调用每个元素的__lt__</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">sorted</span>(list01):  <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#in 的内部也在循环调用每个元素的__eq__方法</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(Vector2(<span class=\"number\">1</span>, <span class=\"number\">2</span>) <span class=\"keyword\">in</span> list01)<span class=\"comment\"># ?</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># list01.remove(Vector2(1, 2))</span></span><br><span class=\"line\"><span class=\"comment\"># list01.count(Vector2(1, 2))</span></span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【物件導向Object Oriented】_06_三大特徵-練習","url":"/2021/12/28/2021-12-28-%E3%80%90%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91Object-Oriented%E3%80%91-06-%E4%B8%89%E5%A4%A7%E7%89%B9%E5%BE%B5-%E7%B7%B4%E7%BF%92/","content":"<h2 id=\"練習題\"><a href=\"#練習題\" class=\"headerlink\" title=\"練習題\"></a>練習題</h2><span id=\"more\"></span>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    創建老婆類，老婆列表。</span></span><br><span class=\"line\"><span class=\"string\">    定義下列函數：</span></span><br><span class=\"line\"><span class=\"string\">        1)獲取所有老婆姓名</span></span><br><span class=\"line\"><span class=\"string\">        2)獲取顏值大於80的所有老婆物件</span></span><br><span class=\"line\"><span class=\"string\">        3)獲取年齡最大的老婆對象</span></span><br><span class=\"line\"><span class=\"string\">        4)根據顏值對老婆清單進行昇冪排列</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, face_score=<span class=\"number\">0</span>, age=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.face_score = face_score</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">print_self</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.name, self.face_score, self.age)</span><br><span class=\"line\"></span><br><span class=\"line\">list_wife = [</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;阿珂&quot;</span>, <span class=\"number\">100</span>, <span class=\"number\">23</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;蘇荃&quot;</span>, <span class=\"number\">92</span>, <span class=\"number\">32</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;雙兒&quot;</span>, <span class=\"number\">90</span>, <span class=\"number\">25</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;小郡主&quot;</span>, <span class=\"number\">76</span>, <span class=\"number\">22</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;方怡&quot;</span>, <span class=\"number\">75</span>, <span class=\"number\">27</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;建寧&quot;</span>, <span class=\"number\">86</span>, <span class=\"number\">25</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;曾柔&quot;</span>, <span class=\"number\">67</span>, <span class=\"number\">24</span>),</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1)獲取所有老婆姓名</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find01</span>():</span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list_wife:</span><br><span class=\"line\">        result.append(item.name)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(find01())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2)獲取顏值大於80的所有老婆物件</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find02</span>():</span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list_wife:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> item.face_score &gt; <span class=\"number\">80</span>:</span><br><span class=\"line\">            result.append(item)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> find02():</span><br><span class=\"line\">    item.print_self()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3)獲取年齡最大的老婆對象</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_max</span>():</span><br><span class=\"line\">    max_value = list_wife[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(list_wife)):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> max_value.age &lt; list_wife[i].age:</span><br><span class=\"line\">            max_value = list_wife[i]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max_value</span><br><span class=\"line\"></span><br><span class=\"line\">re = get_max()</span><br><span class=\"line\">re.print_self()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4)根據顏值對老婆清單進行昇冪排列</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">order_by</span>():</span><br><span class=\"line\">    <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(list_wife) - <span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(r + <span class=\"number\">1</span>, <span class=\"built_in\">len</span>(list_wife)):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> list_wife[r].face_score &gt; list_wife[c].face_score:</span><br><span class=\"line\">                list_wife[r], list_wife[c] = list_wife[c], list_wife[r]</span><br><span class=\"line\"></span><br><span class=\"line\">order_by()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;-----------------&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list_wife:</span><br><span class=\"line\">    item.print_self()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    練習：對象計數器</span></span><br><span class=\"line\"><span class=\"string\">        使用類變數記錄</span></span><br><span class=\"line\"><span class=\"string\">        使用類方法列印</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife</span>:</span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @classmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">print_count</span>(<span class=\"params\">cls</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;總共娶了&quot;</span>,cls.count,<span class=\"string\">&quot;個&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        Wife.count += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">w01 = Wife()</span><br><span class=\"line\">w02 = Wife()</span><br><span class=\"line\">w03 = Wife()</span><br><span class=\"line\">w04 = Wife()</span><br><span class=\"line\">w05 = Wife()</span><br><span class=\"line\">Wife.print_count()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    創建敵人類,資料：姓名,血量(0--100),攻擊力(1--50)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Enemy</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, hp=<span class=\"number\">0</span>, atk=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.hp = hp</span><br><span class=\"line\">        self.atk = atk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">hp</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__hp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @hp.setter</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">hp</span>(<span class=\"params\">self, value</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"number\">1</span> &lt;= value &lt;= <span class=\"number\">100</span>:</span><br><span class=\"line\">            self.__hp = value</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&quot;血量超過範圍&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">atk</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__atk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @atk.setter</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">atk</span>(<span class=\"params\">self, value</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"number\">1</span> &lt;= value &lt;=<span class=\"number\">50</span>:</span><br><span class=\"line\">            self.__atk = value</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&quot;血量超過範圍&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">e01 = Enemy(<span class=\"string\">&quot;滅霸&quot;</span>, <span class=\"number\">99</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(e01.hp)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(e01.atk)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    請以物件導向的思想，描述以下場景：</span></span><br><span class=\"line\"><span class=\"string\">        玩家(攻擊力)攻擊敵人,敵人(血量)受傷後還可能死亡。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Player</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, atk=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.atk = atk</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">attack</span>(<span class=\"params\">self, target</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;打你&quot;</span>)</span><br><span class=\"line\">        target.damage(self.atk)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Enemy</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, hp=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.hp = hp</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">damage</span>(<span class=\"params\">self, value</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;呃！&quot;</span>)</span><br><span class=\"line\">        self.hp -= value</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.hp &lt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">            self.death()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">death</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;死亡嘍&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p01 = Player(<span class=\"number\">50</span>)</span><br><span class=\"line\">e01 = Enemy(<span class=\"number\">100</span>)</span><br><span class=\"line\">p01.attack(e01)</span><br><span class=\"line\">p01.attack(e01)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    請以物件導向的思想，描述以下場景：</span></span><br><span class=\"line\"><span class=\"string\">        張無忌教趙敏九陽神功</span></span><br><span class=\"line\"><span class=\"string\">        趙敏教張無忌化妝</span></span><br><span class=\"line\"><span class=\"string\">        張無忌上班掙了10000元</span></span><br><span class=\"line\"><span class=\"string\">        趙敏上班掙了8000元</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">teach</span>(<span class=\"params\">self,other,skill</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.name,<span class=\"string\">&quot;教&quot;</span>,other.name,skill)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">work</span>(<span class=\"params\">self,money</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.name,<span class=\"string\">&quot;工作掙了&quot;</span>,money,<span class=\"string\">&quot;元&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">zwj = Person(<span class=\"string\">&quot;張無忌&quot;</span>)</span><br><span class=\"line\">zm = Person(<span class=\"string\">&quot;趙敏&quot;</span>)</span><br><span class=\"line\">zwj.teach(zm,<span class=\"string\">&quot;九陽神功&quot;</span>)</span><br><span class=\"line\">zm.teach(zwj,<span class=\"string\">&quot;化妝&quot;</span>)</span><br><span class=\"line\">zwj.work(<span class=\"number\">10000</span>)</span><br><span class=\"line\">zm.work(<span class=\"number\">8000</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    定義父類</span></span><br><span class=\"line\"><span class=\"string\">        動物(行為：吃)</span></span><br><span class=\"line\"><span class=\"string\">    定義子類</span></span><br><span class=\"line\"><span class=\"string\">        狗(行為：跑)</span></span><br><span class=\"line\"><span class=\"string\">        鳥(行為：飛)</span></span><br><span class=\"line\"><span class=\"string\">    體會isinstance/issubclass/type</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">eat</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;吃飯飯嘍&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span>(<span class=\"title class_ inherited__\">Animal</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">run</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;跑嘍&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Bird</span>(<span class=\"title class_ inherited__\">Animal</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">fly</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;飛嘍&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">d01 = Dog()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>(d01,Dog))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">isinstance</span>(d01,Animal))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">issubclass</span>(Bird,Dog))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(d01) == Animal)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    定義父類</span></span><br><span class=\"line\"><span class=\"string\">        車(數據：品牌,價格)</span></span><br><span class=\"line\"><span class=\"string\">    定義子類</span></span><br><span class=\"line\"><span class=\"string\">        電動車(數據:充電速度,電池容量)</span></span><br><span class=\"line\"><span class=\"string\">    畫出記憶體圖</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, brand=<span class=\"string\">&quot;&quot;</span>, price=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.brand = brand</span><br><span class=\"line\">        self.price = price</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Electrocar</span>(<span class=\"title class_ inherited__\">Car</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, brand=<span class=\"string\">&quot;&quot;</span>, price=<span class=\"number\">0</span>, charging_speed=<span class=\"number\">0</span>, battery_capacity=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__(brand,price)</span><br><span class=\"line\">        self.charging_speed = charging_speed</span><br><span class=\"line\">        self.battery_capacity = battery_capacity</span><br><span class=\"line\"></span><br><span class=\"line\">e01 = Electrocar(<span class=\"string\">&quot;寶馬&quot;</span>,<span class=\"number\">300000</span>,<span class=\"number\">60</span>,<span class=\"number\">10000000</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    手雷爆炸,傷害玩家(扣血,碎屏)和敵人(扣血,頭頂爆字)。</span></span><br><span class=\"line\"><span class=\"string\">    變化點：鴨子,房子...</span></span><br><span class=\"line\"><span class=\"string\">    寫出體現三大特徵的代碼：</span></span><br><span class=\"line\"><span class=\"string\">        封裝：根據需求分解出手雷類,玩家類,敵人類</span></span><br><span class=\"line\"><span class=\"string\">        繼承：使用攻擊目標隔離手雷與玩家,敵人</span></span><br><span class=\"line\"><span class=\"string\">        多態：手雷調用攻擊目標,在玩家和敵人物件中體現了不同效果</span></span><br><span class=\"line\"><span class=\"string\">              玩家和敵人分別重寫了攻擊目標的受傷方法</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Grenade</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">explode</span>(<span class=\"params\">self, target</span>):</span><br><span class=\"line\">        target.damage()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AttackTarget</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">damage</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;扣血&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Player</span>(<span class=\"title class_ inherited__\">AttackTarget</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">damage</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().damage()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;碎屏&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Enemy</span>(<span class=\"title class_ inherited__\">AttackTarget</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">damage</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().damage()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;頭頂爆字&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">g01 = Grenade()</span><br><span class=\"line\">p01 = Player()</span><br><span class=\"line\">e01 = Enemy()</span><br><span class=\"line\">g01.explode(e01)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    創建圖形管理器：</span></span><br><span class=\"line\"><span class=\"string\">        1. 記錄所有圖形</span></span><br><span class=\"line\"><span class=\"string\">        2. 計算總面積</span></span><br><span class=\"line\"><span class=\"string\">    圖形：</span></span><br><span class=\"line\"><span class=\"string\">        1. 矩形</span></span><br><span class=\"line\"><span class=\"string\">        2. 圓形</span></span><br><span class=\"line\"><span class=\"string\">        ...</span></span><br><span class=\"line\"><span class=\"string\">    要求：</span></span><br><span class=\"line\"><span class=\"string\">        增加新圖形,管理器代碼不變.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    畫出設計圖</span></span><br><span class=\"line\"><span class=\"string\">    寫出哪裡體現了四大原則</span></span><br><span class=\"line\"><span class=\"string\">        開閉原則：增加新圖形,管理器代碼不變.</span></span><br><span class=\"line\"><span class=\"string\">        單一職責：Rectanlge負責矩形面積的演算法，Circle負責圓形面積的演算法，</span></span><br><span class=\"line\"><span class=\"string\">                GraphicManager負責統一管理圖形</span></span><br><span class=\"line\"><span class=\"string\">        依賴倒置：圖形管理器沒有調用圓形、矩形演算法，而是調用圖形類。</span></span><br><span class=\"line\"><span class=\"string\">        組合複用：圖形管理器與具體的各種圖形是組合關係。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">GraphicManager</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.__graphics = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">add_graphic</span>(<span class=\"params\">self, graphic</span>):</span><br><span class=\"line\">        self.__graphics.append(graphic)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">calculate_total_area</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        total_area = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> self.__graphics:</span><br><span class=\"line\">            total_area += item.get_area()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> total_area</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Graphic</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_area</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ------------------------</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Rectanlge</span>(<span class=\"title class_ inherited__\">Graphic</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, lenght=<span class=\"number\">0</span>, width=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.lenght = lenght</span><br><span class=\"line\">        self.width = width</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_area</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.lenght * self.width</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Circle</span>(<span class=\"title class_ inherited__\">Graphic</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, radius=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.radius = radius</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_area</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">3.14</span> * self.radius ** <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">manager = GraphicManager()</span><br><span class=\"line\">manager.add_graphic(Rectanlge(<span class=\"number\">2</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">manager.add_graphic(Circle(<span class=\"number\">5</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(manager.calculate_total_area())</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【物件導向Object Oriented】_07_設計原則","url":"/2021/12/28/2021-12-28-%E3%80%90%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91Object-Oriented%E3%80%91-07-%E8%A8%AD%E8%A8%88%E5%8E%9F%E5%89%87/","content":"<h2 id=\"設計原則\"><a href=\"#設計原則\" class=\"headerlink\" title=\"設計原則\"></a>設計原則</h2><h3 id=\"開-閉原則（目標、總的指導思想）\"><a href=\"#開-閉原則（目標、總的指導思想）\" class=\"headerlink\" title=\"開-閉原則（目標、總的指導思想）\"></a>開-閉原則（目標、總的指導思想）</h3><p><strong>O</strong>pen <strong>C</strong>losed <strong>P</strong>rinciple<br>對擴展開放，對修改關閉。<br>增加新功能，不改變原有代碼。</p>\n<span id=\"more\"></span>\n<h3 id=\"類的單一職責（一個類的定義）\"><a href=\"#類的單一職責（一個類的定義）\" class=\"headerlink\" title=\"類的單一職責（一個類的定義）\"></a>類的單一職責（一個類的定義）</h3><p><strong>S</strong>ingle <strong>R</strong>esponsibility <strong>P</strong>rinciple<br>一個類有且只有一個改變它的原因。</p>\n<h3 id=\"依賴倒置（依賴抽象）\"><a href=\"#依賴倒置（依賴抽象）\" class=\"headerlink\" title=\"依賴倒置（依賴抽象）\"></a>依賴倒置（依賴抽象）</h3><p><strong>D</strong>ependency <strong>I</strong>nversion <strong>P</strong>rinciple<br>用戶端代碼(調用的類)儘量依賴(使用)抽象。<br>抽象不應該依賴細節，細節應該依賴抽象。</p>\n<h3 id=\"組合複用原則（複用的最佳實踐）\"><a href=\"#組合複用原則（複用的最佳實踐）\" class=\"headerlink\" title=\"組合複用原則（複用的最佳實踐）\"></a>組合複用原則（複用的最佳實踐）</h3><p><strong>C</strong>omposite <strong>R</strong>euse <strong>P</strong>rinciple<br>如果僅僅為了代碼複用優先選擇組合複用，而非繼承複用。<br>組合的耦合性相對繼承低。</p>\n<h3 id=\"里氏替換（繼承後的重寫，指導繼承的設計）\"><a href=\"#里氏替換（繼承後的重寫，指導繼承的設計）\" class=\"headerlink\" title=\"里氏替換（繼承後的重寫，指導繼承的設計）\"></a>里氏替換（繼承後的重寫，指導繼承的設計）</h3><p><strong>L</strong>iskov <strong>S</strong>ubstitution <strong>P</strong>rinciple<br>父類出現的地方可以被子類替換，在替換後依然保持原功能。<br>子類要擁有父類的所有功能。<br>子類在重寫父類方法時，儘量選擇擴展重寫，防止改變了功能。</p>\n<h3 id=\"迪米特法則（類與類交互的原則）\"><a href=\"#迪米特法則（類與類交互的原則）\" class=\"headerlink\" title=\"迪米特法則（類與類交互的原則）\"></a>迪米特法則（類與類交互的原則）</h3><p><strong>L</strong>aw <strong>o</strong>f <strong>D</strong>emeter<br>不要和陌生人說話。<br>類與類交互時，在滿足功能要求的基礎上，傳遞的資料量越少越好。因為這樣可能降低耦合度。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    設計思想 - 引入</span></span><br><span class=\"line\"><span class=\"string\">        老張開車去東北</span></span><br><span class=\"line\"><span class=\"string\">        變化點：飛機、火車、輪船...</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">go_to</span>(<span class=\"params\">self, vehicle</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;走嘍&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span>(vehicle) == Car:</span><br><span class=\"line\">            vehicle.run()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span>(vehicle) == Airplane:</span><br><span class=\"line\">            vehicle.fly()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">run</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;嘟嘟～&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Airplane</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">fly</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;嗖嗖~&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p01 = Person(<span class=\"string\">&quot;老張&quot;</span>)</span><br><span class=\"line\">c01 = Car()</span><br><span class=\"line\">a01 = Airplane()</span><br><span class=\"line\">p01.go_to(a01)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    設計思想</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">go_to</span>(<span class=\"params\">self, vehicle</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;走嘍&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 1. 調用交通工具(父)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">isinstance</span>(vehicle,Vehicle):</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&quot;傳入的必須是交通工具&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        vehicle.transport()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Vehicle</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        交通工具:隔離人與具體交通工具的變化</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">transport</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -------------------------------------</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Car</span>(<span class=\"title class_ inherited__\">Vehicle</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 3. 重寫</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">transport</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;嘟嘟～&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Airplane</span>(<span class=\"title class_ inherited__\">Vehicle</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">transport</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;嗖嗖~&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p01 = Person(<span class=\"string\">&quot;老張&quot;</span>)</span><br><span class=\"line\">c01 = Car()</span><br><span class=\"line\">a01 = Airplane()</span><br><span class=\"line\"><span class=\"comment\"># 2. 創建子類對象</span></span><br><span class=\"line\">p01.go_to(c01)</span><br></pre></td></tr></table></figure>\n<h2 id=\"練習\"><a href=\"#練習\" class=\"headerlink\" title=\"練習:\"></a>練習:</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    創建員工管理器：</span></span><br><span class=\"line\"><span class=\"string\">        1. 記錄所有員工</span></span><br><span class=\"line\"><span class=\"string\">        2. 計算總薪資</span></span><br><span class=\"line\"><span class=\"string\">    崗位：</span></span><br><span class=\"line\"><span class=\"string\">        1. 程式師:底薪 + 項目分紅</span></span><br><span class=\"line\"><span class=\"string\">        2. 測試員：底薪 + Bug數 * 5</span></span><br><span class=\"line\"><span class=\"string\">        ...</span></span><br><span class=\"line\"><span class=\"string\">    要求：</span></span><br><span class=\"line\"><span class=\"string\">        增加新員工,管理器代碼不變.</span></span><br><span class=\"line\"><span class=\"string\">    體會：三大特徵，四大原則</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">EmployeeManager</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.__employees = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">add_employee</span>(<span class=\"params\">self, emp</span>):</span><br><span class=\"line\">        self.__employees.append(emp)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">calculate_total_salary</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        total_salary = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> self.__employees:</span><br><span class=\"line\">            total_salary += item.get_salary()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> total_salary</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Employee</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, base_salary=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.base_salary = base_salary</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_salary</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.base_salary</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ------------------</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Programmer</span>(<span class=\"title class_ inherited__\">Employee</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, base_salary=<span class=\"number\">0</span>, bonus=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__(base_salary)</span><br><span class=\"line\">        self.bonus = bonus</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_salary</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># return self.base_salary + self.bonus</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>().get_salary() + self.bonus</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Tester</span>(<span class=\"title class_ inherited__\">Employee</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, base_salary=<span class=\"number\">0</span>, bug_count=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__(base_salary)</span><br><span class=\"line\">        self.bug_count = bug_count</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_salary</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>().get_salary() + self.bug_count * <span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\">manager = EmployeeManager()</span><br><span class=\"line\">manager.add_employee(Programmer(<span class=\"number\">10000</span>, <span class=\"number\">50000</span>))</span><br><span class=\"line\">manager.add_employee(Tester(<span class=\"number\">8000</span>, <span class=\"number\">200</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(manager.calculate_total_salary())</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    風清揚使用獨孤九劍攻擊</span></span><br><span class=\"line\"><span class=\"string\">    任我行使用吸星大法攻擊</span></span><br><span class=\"line\"><span class=\"string\">    令狐沖即使用獨孤九劍有使用吸星大法攻擊</span></span><br><span class=\"line\"><span class=\"string\">    ...</span></span><br><span class=\"line\"><span class=\"string\">    可能還有很多人,很多技能。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.__skills = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">add_skill</span>(<span class=\"params\">self, skill</span>):</span><br><span class=\"line\">        self.__skills.append(skill)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">release_skill</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.name, <span class=\"string\">&quot;釋放技能&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> self.__skills:</span><br><span class=\"line\">            item.attack()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Skill</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">attack</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DuGuJiuJian</span>(<span class=\"title class_ inherited__\">Skill</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">attack</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().attack()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;獨孤九劍攻擊&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">XiXinDaFa</span>(<span class=\"title class_ inherited__\">Skill</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">attack</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().attack()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;吸心大法攻擊&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">fqy = Person(<span class=\"string\">&quot;風清揚&quot;</span>)</span><br><span class=\"line\">fqy.add_skill(DuGuJiuJian())</span><br><span class=\"line\">fqy.release_skill()</span><br><span class=\"line\"></span><br><span class=\"line\">lhc = Person(<span class=\"string\">&quot;令狐沖&quot;</span>)</span><br><span class=\"line\">lhc.add_skill(DuGuJiuJian())</span><br><span class=\"line\">lhc.add_skill(XiXinDaFa())</span><br><span class=\"line\">lhc.release_skill()</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【物件導向Object Oriented】_08_技能系統","url":"/2022/01/05/2022-01-05-%E3%80%90%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91Object-Oriented%E3%80%91-08-%E6%8A%80%E8%83%BD%E7%B3%BB%E7%B5%B1/","content":"<h1 id=\"技能系統\"><a href=\"#技能系統\" class=\"headerlink\" title=\"技能系統\"></a>技能系統</h1><span id=\"more\"></span>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    技能系統</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ImpactEffect</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        影響效果</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">impact</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DamageEffect</span>(<span class=\"title class_ inherited__\">ImpactEffect</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, value=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.value = value</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">impact</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().impact()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;傷害%d生命&quot;</span>%self.value)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CostSPEffect</span>(<span class=\"title class_ inherited__\">ImpactEffect</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, value=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.value = value</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">impact</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().impact()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;消耗%d法力&quot;</span>%self.value)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">LowerDeffenseEffect</span>(<span class=\"title class_ inherited__\">ImpactEffect</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, value=<span class=\"number\">0</span>,time = <span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.value = value</span><br><span class=\"line\">        self.time = time</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">impact</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().impact()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;降低%.1f防禦力,持續%.1f&quot;</span>%(self.value,self.time))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SkillBaseData</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, level=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.level = level</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SkillDeployer</span>:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        技能釋放器</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, base_data=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">        self.base_data = base_data</span><br><span class=\"line\">        self.__config_file = self.__load_config_file()</span><br><span class=\"line\">        self.__effect_objects = self.__create_effect_objects()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__load_config_file</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;降龍十八掌&quot;</span>:[<span class=\"string\">&quot;DamageEffect(260)&quot;</span>,<span class=\"string\">&quot;CostSPEffect(100)&quot;</span>],</span><br><span class=\"line\">            <span class=\"string\">&quot;六脈神劍&quot;</span>:[<span class=\"string\">&quot;DamageEffect(100)&quot;</span>,<span class=\"string\">&quot;LowerDeffenseEffect(0.7,5)&quot;</span>],</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__create_effect_objects</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 根據當前技能名稱,獲取影響效果名稱</span></span><br><span class=\"line\">        <span class=\"comment\"># [&quot;DamageEffect(260)&quot;,&quot;CostSPEffect(100)&quot;]</span></span><br><span class=\"line\">        effect_names = self.__config_file[ self.base_data.name ]</span><br><span class=\"line\">        <span class=\"comment\"># effect_objects = []</span></span><br><span class=\"line\">        <span class=\"comment\"># for item in effect_names:</span></span><br><span class=\"line\">        <span class=\"comment\">#     obj = eval(item)</span></span><br><span class=\"line\">        <span class=\"comment\">#     effect_objects.append(obj)</span></span><br><span class=\"line\">        <span class=\"comment\"># return effect_objects</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>  [<span class=\"built_in\">eval</span>(item) <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> effect_names]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">generate_skill</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> self.__effect_objects:</span><br><span class=\"line\">            item.impact()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 測試</span></span><br><span class=\"line\">xlsbz = SkillDeployer(SkillBaseData(<span class=\"string\">&quot;降龍十八掌&quot;</span>,<span class=\"number\">1</span>))</span><br><span class=\"line\">xlsbz.generate_skill()</span><br><span class=\"line\"></span><br><span class=\"line\">lmsj = SkillDeployer(SkillBaseData(<span class=\"string\">&quot;六脈神劍&quot;</span>,<span class=\"number\">1</span>))</span><br><span class=\"line\">lmsj.generate_skill()</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【程式結構】_包package","url":"/2022/01/05/2022-01-05-%E3%80%90%E7%A8%8B%E5%BC%8F%E7%B5%90%E6%A7%8B%E3%80%91-%E5%8C%85package/","content":"<h1 id=\"定義\"><a href=\"#定義\" class=\"headerlink\" title=\"定義\"></a>定義</h1><p>將模組以資料夾的形式進行分組管理。</p>\n<span id=\"more\"></span>\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2><p>讓一些相關的模組組織在一起，使邏輯結構更加清晰。</p>\n<h2 id=\"導入\"><a href=\"#導入\" class=\"headerlink\" title=\"導入\"></a>導入</h2><p>import  包名.模組名 [as 模組新名]</p>\n<p>import  包名.子包名.模組名 [as 模組新名]</p>\n<p>from 包名 import 模組名 [as 模組新名]</p>\n<p>from 包名.子包名 import 模組名 [as 模組新名]</p>\n<p>from 包名.子包名.模組名 import 成員名 [as 屬性新名]</p>\n<h1 id=\"導入包內的所有子包和模組\"><a href=\"#導入包內的所有子包和模組\" class=\"headerlink\" title=\"導入包內的所有子包和模組\"></a>導入包內的所有子包和模組</h1><p>from 包名 import *</p>\n<p>from 包名.模組名 import *</p>\n<h3 id=\"init-py-文件\"><a href=\"#init-py-文件\" class=\"headerlink\" title=\"init.py 文件\"></a><strong>init</strong>.py 文件</h3><p>是包內必須存在的檔</p>\n<p>會在包載入時被自動調用</p>\n<h3 id=\"all\"><a href=\"#all\" class=\"headerlink\" title=\"all\"></a><strong>all</strong></h3><p>記錄from 包 import * 語句需要導入的模組</p>\n<h3 id=\"案例：\"><a href=\"#案例：\" class=\"headerlink\" title=\"案例：\"></a>案例：</h3><p>根據下列結構，創建包與模組。</p>\n<p>my_ project &#x2F;</p>\n<p>main.py</p>\n<p>common&#x2F;</p>\n<p><strong>init</strong>.py</p>\n<p>list_helper.py</p>\n<p>skill_system&#x2F;</p>\n<p><strong>init</strong>.py</p>\n<p>skill_deployer.py</p>\n<p>skill_manager.py</p>\n<ol>\n<li>在py中調用skill_manager.py中實例方法。</li>\n<li>在py中調用skill_deployer.py中實例方法。</li>\n<li>在py中調用list_helper.py中類方法。</li>\n</ol>\n<h2 id=\"搜索順序\"><a href=\"#搜索順序\" class=\"headerlink\" title=\"搜索順序\"></a>搜索順序</h2><p>內置模組<br>sys.path 提供的路徑</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    包</span></span><br><span class=\"line\"><span class=\"string\">    導入是否成功的條件：</span></span><br><span class=\"line\"><span class=\"string\">    系統路徑 + 導入路徑 == 真實路徑</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 導入方式1：import 路徑.模組名 as 別名</span></span><br><span class=\"line\"><span class=\"comment\"># 使用：別名.成員</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> package01.m01 <span class=\"keyword\">as</span> m</span><br><span class=\"line\"></span><br><span class=\"line\">m.func01()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 導入方式2：from 路徑.模組名 import 成員</span></span><br><span class=\"line\"><span class=\"comment\"># 使用：直接使用成員</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> package01.package02.m02 <span class=\"keyword\">import</span> func02</span><br><span class=\"line\"></span><br><span class=\"line\">func02()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 導入方式3：from 路徑.模組名 import *</span></span><br><span class=\"line\"><span class=\"comment\"># 使用：直接使用成員</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> package01.package02.m02 <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">func02()</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【程式結構】_模組 Module","url":"/2022/01/05/2022-01-05-%E3%80%90%E7%A8%8B%E5%BC%8F%E7%B5%90%E6%A7%8B%E3%80%91-%E6%A8%A1%E7%B5%84-Module/","content":"<h1 id=\"定義\"><a href=\"#定義\" class=\"headerlink\" title=\"定義\"></a>定義</h1><blockquote>\n<p>包含一系列資料、函數、類的檔，通常以.py結尾。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2><p>讓一些相關的資料，函數，類有邏輯的組織在一起，使邏輯結構更加清晰。<br>有利於多人合作開發。</p>\n<h2 id=\"導入\"><a href=\"#導入\" class=\"headerlink\" title=\"導入\"></a>導入</h2><h3 id=\"import\"><a href=\"#import\" class=\"headerlink\" title=\"import\"></a>import</h3><ol>\n<li>語法：<br>import 模組名<br>import 模組名 as 別名</li>\n<li>作用：將某模組整體導入到當前模組中</li>\n<li>使用：模組名.成員</li>\n</ol>\n<h3 id=\"from-import\"><a href=\"#from-import\" class=\"headerlink\" title=\"from import\"></a>from import</h3><ol>\n<li>語法：<br>from 模組名 import 成員名[ as 別名1]</li>\n<li>作用：將模組內的一個或多個成員導入到當前模組的作用域中。</li>\n<li>使用：直接使用成員名</li>\n</ol>\n<h3 id=\"from-import-1\"><a href=\"#from-import-1\" class=\"headerlink\" title=\"from import *\"></a>from import *</h3><ol>\n<li>語法：from 模組名 import *</li>\n<li>作用：將某模組的所有成員導入到當前模組。</li>\n<li>模組中以底線(_)開頭的屬性，不會被導入，通常稱這些成員為隱藏成員。</li>\n</ol>\n<h3 id=\"模組變數\"><a href=\"#模組變數\" class=\"headerlink\" title=\"模組變數\"></a>模組變數</h3><p>__all__變數：定義可匯出成員，僅對from xx import *語句有效。</p>\n<p>__doc__變數：文檔字串。</p>\n<p>__file__變數：模組對應的檔路徑名。</p>\n<p>__name__變數：模組自身名字，可以判斷是否為主模組。</p>\n<p>當此模組作為主模組(第一個運行的模組)運行時，__name__綁定’<strong>main</strong>‘，不是主模組，而是被其它模組導入時,存儲模組名。</p>\n<h3 id=\"載入過程\"><a href=\"#載入過程\" class=\"headerlink\" title=\"載入過程\"></a>載入過程</h3><p>在模組導入時，模組的所有語句會執行。<br>如果一個模組已經導入，則再次導入時不會重新執行模組內的語句。</p>\n<h3 id=\"分類\"><a href=\"#分類\" class=\"headerlink\" title=\"分類\"></a>分類</h3><ol>\n<li>內置模組(builtins)，在解析器的內部可以直接使用。</li>\n<li>標準庫模組，安裝Python時已安裝且可直接使用。</li>\n<li>協力廠商模組（通常為開源），需要自己安裝。</li>\n<li>使用者自己編寫的模組（可以作為其他人的協力廠商模組）</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    模組</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 導入方式1： import 模組名</span></span><br><span class=\"line\"><span class=\"comment\"># 使用: 模組名.成員</span></span><br><span class=\"line\"><span class=\"comment\"># 本質：創建變數模組位址</span></span><br><span class=\"line\"><span class=\"comment\"># 適用性：面向過程的函數、全域變數</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> module01</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(module01.g01)</span><br><span class=\"line\">module01.func01()</span><br><span class=\"line\">module01.MyClass.func03()</span><br><span class=\"line\">c01 = module01.MyClass()</span><br><span class=\"line\">c01.func02()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 導入方式2： from 模組名 import 成員</span></span><br><span class=\"line\"><span class=\"comment\"># 使用: 直接使用成員</span></span><br><span class=\"line\"><span class=\"comment\"># 本質：將其他模組成員導入到當前作用域中（小心命名衝突）</span></span><br><span class=\"line\"><span class=\"comment\"># 適用性：物件導向的類</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> module01 <span class=\"keyword\">import</span> g01</span><br><span class=\"line\"><span class=\"keyword\">from</span> module01 <span class=\"keyword\">import</span> func01</span><br><span class=\"line\"><span class=\"keyword\">from</span> module01 <span class=\"keyword\">import</span> MyClass</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">func01()</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func01</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;demo02 -- func01&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(g01)</span><br><span class=\"line\">func01()</span><br><span class=\"line\">MyClass.func03()</span><br><span class=\"line\">c01 = MyClass()</span><br><span class=\"line\">c01.func02()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 導入方式3： from 模組名 import 成員</span></span><br><span class=\"line\"><span class=\"comment\"># 使用: 直接使用成員</span></span><br><span class=\"line\"><span class=\"comment\"># 本質：將其他模組成員導入到當前作用域中（小心命名衝突）</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> module01 <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(g01)</span><br><span class=\"line\">func01()</span><br><span class=\"line\">MyClass.func03()</span><br><span class=\"line\">c01 = MyClass()</span><br><span class=\"line\">c01.func02()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    模組相關概念</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># __all__變數：定義可匯出成員，僅對from xx import *語句有效。</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> my_project.skill_system <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">skill_manager.SkillManager().generate()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># __doc__變數：文檔字串。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(skill_manager.__doc__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># __file__變數：模組對應的檔路徑名。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(__file__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># __name__變數：模組自身名字，可以判斷是否為主模組。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(__name__)<span class=\"comment\"># __main__</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"練習\"><a href=\"#練習\" class=\"headerlink\" title=\"練習:\"></a>練習:</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    時間處理</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 獲取當前時間戳記:從1970年1月1日到現在經過的秒數</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.time())<span class=\"comment\"># 1576595536.5944133</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 獲取當前時間元組（年、月、日、時、分、秒、星期、年的第幾天、夏令時）</span></span><br><span class=\"line\">time_tuple = time.localtime()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time_tuple)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 時間戳記---&gt;時間元組</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.localtime(<span class=\"number\">1576595536.5944133</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 時間元組---&gt;時間戳記</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.mktime(time_tuple))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 時間元組---&gt;字串</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.strftime(<span class=\"string\">&quot;%y/%m/%d %H:%M:%S&quot;</span>,time_tuple))<span class=\"comment\"># 19/12/17 23:17:23</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.strftime(<span class=\"string\">&quot;%Y/%m/%d %H:%M:%S&quot;</span>,time_tuple))<span class=\"comment\"># 19/12/17 23:17:23</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6. 字串---&gt;時間元組</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.strptime(<span class=\"string\">&quot;19/12/17 23:17:23&quot;</span>,<span class=\"string\">&quot;%y/%m/%d %H:%M:%S&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    定義函數,根據年月日計算星期數</span></span><br><span class=\"line\"><span class=\"string\">    星期一</span></span><br><span class=\"line\"><span class=\"string\">    星期二</span></span><br><span class=\"line\"><span class=\"string\">    ...</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_week</span>(<span class=\"params\">year, month, day</span>):</span><br><span class=\"line\">    tuple_time = time.strptime(<span class=\"string\">&quot;%d/%d/%d&quot;</span> % (year, month, day), <span class=\"string\">&quot;%Y/%m/%d&quot;</span>)</span><br><span class=\"line\">    tuple_weeks = (<span class=\"string\">&quot;星期一&quot;</span>,<span class=\"string\">&quot;星期二&quot;</span>,<span class=\"string\">&quot;星期三&quot;</span>,<span class=\"string\">&quot;星期四&quot;</span>,<span class=\"string\">&quot;星期五&quot;</span>,<span class=\"string\">&quot;星期六&quot;</span>,<span class=\"string\">&quot;星期日&quot;</span>,)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tuple_weeks[tuple_time[<span class=\"number\">6</span>]]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(get_week(<span class=\"number\">2019</span>,<span class=\"number\">12</span>,<span class=\"number\">5</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    定義函數,根據年出生日期，計算活了多少天</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">life_days</span>(<span class=\"params\">year,month,day</span>):</span><br><span class=\"line\">    tuple_time = time.strptime(<span class=\"string\">&quot;%d/%d/%d&quot;</span> % (year, month, day), <span class=\"string\">&quot;%Y/%m/%d&quot;</span>)</span><br><span class=\"line\">    life_second = time.time() -  time.mktime(tuple_time)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">int</span>(life_second / <span class=\"number\">60</span> / <span class=\"number\">60</span> / <span class=\"number\">24</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(life_days(<span class=\"number\">2019</span>,<span class=\"number\">8</span>,<span class=\"number\">11</span>))</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【程式結構】_異常處理Error","url":"/2022/01/05/2022-01-05-%E3%80%90%E7%A8%8B%E5%BC%8F%E7%B5%90%E6%A7%8B%E3%80%91-%E7%95%B0%E5%B8%B8%E8%99%95%E7%90%86Error/","content":"<h2 id=\"異常\"><a href=\"#異常\" class=\"headerlink\" title=\"異常\"></a>異常</h2><ol>\n<li>定義：運行時檢測到的錯誤。</li>\n<li>現象：當異常發生時，程式不會再向下執行，而轉到函數的調用語句。<span id=\"more\"></span></li>\n<li>常見異常類型：</li>\n</ol>\n<ul>\n<li><p>名稱異常(NameError)：變數未定義。</p>\n</li>\n<li><p>類型異常(TypeError)：不同類型資料進行運算。</p>\n</li>\n<li><p>索引異常(IndexError)：超出索引範圍。</p>\n</li>\n<li><p>屬性異常(AttributeError)：物件沒有對應名稱的屬性。</p>\n</li>\n<li><p>鍵異常(KeyError)：沒有對應名稱的鍵。</p>\n</li>\n<li><p>為實現異常(NotImplementedError)：尚未實現的方法。</p>\n</li>\n<li><p>異常基類Exception。</p>\n</li>\n</ul>\n<h2 id=\"處理\"><a href=\"#處理\" class=\"headerlink\" title=\"處理\"></a>處理</h2><ol>\n<li>語法：</li>\n</ol>\n<p>try:</p>\n<p>可能觸發異常的語句</p>\n<p>except 錯誤類型1 [as 變數1]：</p>\n<p>處理語句1</p>\n<p>except 錯誤類型2 [as 變數2]：</p>\n<p>處理語句2</p>\n<p>except Exception  [as 變數3]：</p>\n<p>不是以上錯誤類型的處理語句</p>\n<p>else:</p>\n<p>未發生異常的語句</p>\n<p>finally:</p>\n<p>無論是否發生異常的語句</p>\n<ol>\n<li><p>作用：將程式由異常狀態轉為正常流程。</p>\n</li>\n<li><p>說明：</p>\n</li>\n</ol>\n<ul>\n<li><p>as 子句是用於綁定錯誤物件的變數，可以省略</p>\n</li>\n<li><p>except子句可以有一個或多個，用來捕獲某種類型的錯誤。</p>\n</li>\n<li><p>else子句最多只能有一個。</p>\n</li>\n<li><p>finally子句最多只能有一個，如果沒有except子句，必須存在。</p>\n</li>\n<li><p>如果異常沒有被捕獲到，會向上層(調用處)繼續傳遞，直到程式終止運行。</p>\n</li>\n</ul>\n<h2 id=\"raise-語句\"><a href=\"#raise-語句\" class=\"headerlink\" title=\"raise 語句\"></a>raise 語句</h2><ol>\n<li><p>作用：拋出一個錯誤，讓程式進入異常狀態。</p>\n</li>\n<li><p>目的：在程式調用層數較深時，向主調函數傳遞錯誤資訊要層層return 比較麻煩，所以人為拋出異常，可以直接傳遞錯誤資訊。</p>\n</li>\n</ol>\n<h2 id=\"自訂異常\"><a href=\"#自訂異常\" class=\"headerlink\" title=\"自訂異常\"></a>自訂異常</h2><ul>\n<li>定義：</li>\n</ul>\n<blockquote>\n<p>class 類名Error(Exception):<br>def  <strong>init</strong> (self,參數):<br>super(). <strong>init</strong> (參數)<br>self.資料 &#x3D; 參數</p>\n</blockquote>\n<ul>\n<li>調用：</li>\n</ul>\n<blockquote>\n<p>try:<br>….<br>raise 自訂異常類名(參數)<br>….<br>except 定義異常類 as 變數名:<br>變數名.數據</p>\n</blockquote>\n<blockquote>\n<p>作用：封裝錯誤資訊</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    異常處理</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">div_apple</span>(<span class=\"params\">apple_count</span>):</span><br><span class=\"line\">    person_count = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入人數：&quot;</span>))<span class=\"comment\"># ValueError</span></span><br><span class=\"line\">    result = apple_count / person_count<span class=\"comment\"># ZeroDivisionError</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;每個人分%d個蘋果&quot;</span> % result)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 寫法1：根據不同的錯誤,做出不同的邏輯處理</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    div_apple(<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"keyword\">except</span> ValueError:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;輸入的必須是整數&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">except</span> ZeroDivisionError:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;輸入的不能是零&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 寫法2：不同的錯誤,相同的處理邏輯</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    div_apple(<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"comment\"># #except Exception:</span></span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;出錯嘍&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # 寫法3：如果沒有出錯,可以單獨定義邏輯.</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    div_apple(<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;出錯嘍&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;沒有錯誤&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 寫法4：如果沒有出錯,可以單獨定義邏輯.</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    div_apple(<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"keyword\">finally</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;無論是否錯誤,一定執行的邏輯&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    定義函數,正確返回成績(0 -- 100)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_score</span>():</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            score = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入成績：&quot;</span>))</span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;輸入的不是整數&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"number\">0</span> &lt;= score &lt;=<span class=\"number\">100</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> score</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;成績輸入超過範圍&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">score = get_score()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(score)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    異常處理</span></span><br><span class=\"line\"><span class=\"string\">        主動拋出異常</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AgeRangeError</span>(<span class=\"title class_ inherited__\">Exception</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, error_id=<span class=\"number\">0</span>, error_code=<span class=\"string\">&quot;&quot;</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.error_id = error_id</span><br><span class=\"line\">        self.error_code = error_code</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, age=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">age</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__age</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @age.setter</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">age</span>(<span class=\"params\">self, value</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"number\">20</span> &lt;= value &lt;= <span class=\"number\">30</span>:</span><br><span class=\"line\">            self.__age = value</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 多個錯誤資訊(錯誤名稱,錯誤編號,錯誤代碼...)</span></span><br><span class=\"line\">            <span class=\"keyword\">raise</span> AgeRangeError(<span class=\"string\">&quot;年齡超過範圍錯誤&quot;</span>, <span class=\"number\">1324</span>, <span class=\"string\">&quot;if 20 &lt;= value &lt;= 30&quot;</span>)</span><br><span class=\"line\">            <span class=\"comment\"># raise Exception(&quot;我不要&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    shuanger = Wife(<span class=\"number\">40</span>)</span><br><span class=\"line\"><span class=\"keyword\">except</span> AgeRangeError <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(e.name)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(e.error_id)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(e.error_code)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    創建敵人類,限制攻擊力在1--100之間</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AtkRangeError</span>(<span class=\"title class_ inherited__\">Exception</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, error_id=<span class=\"number\">0</span>, error_code=<span class=\"string\">&quot;&quot;</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.error_id = error_id</span><br><span class=\"line\">        self.error_code = error_code</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Enemy</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, atk=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.atk = atk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">atk</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__atk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @atk.setter</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">atk</span>(<span class=\"params\">self, value</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"number\">1</span> &lt;= value &lt;= <span class=\"number\">100</span>:</span><br><span class=\"line\">            self.__atk = value</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 多個錯誤資訊(錯誤名稱,錯誤編號,錯誤代碼...)</span></span><br><span class=\"line\">            <span class=\"comment\"># raise AtkRangeError(&quot;年齡超過範圍錯誤&quot;, 1324, &quot;1 &lt;= value &lt;= 100&quot;)</span></span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&quot;年齡超過範圍錯誤&quot;</span>, <span class=\"number\">1324</span>, <span class=\"string\">&quot;1 &lt;= value &lt;= 100&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    mieba = Enemy(<span class=\"number\">400</span>)</span><br><span class=\"line\"><span class=\"comment\"># except AtkRangeError as e:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(e.name)</span></span><br><span class=\"line\"><span class=\"comment\">#     print(e.error_id)</span></span><br><span class=\"line\"><span class=\"comment\">#     print(e.error_code)</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(e.args)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【程式結構】_函數式程式設計(思想)","url":"/2022/01/16/2022-01-16-%E3%80%90%E7%A8%8B%E5%BC%8F%E7%B5%90%E6%A7%8B%E3%80%91-%E5%87%BD%E6%95%B8%E5%BC%8F%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88-%E6%80%9D%E6%83%B3/","content":"<h2 id=\"函數式程式設計-思想\"><a href=\"#函數式程式設計-思想\" class=\"headerlink\" title=\"函數式程式設計(思想)\"></a>函數式程式設計(思想)</h2><ol>\n<li>定義：用一系列函數解決問題。</li>\n</ol>\n<ul>\n<li><p>函數可以賦值給變數，賦值後變數綁定函數。</p>\n</li>\n<li><p>允許將函數作為參數傳入另一個函數。</p>\n</li>\n<li><p>允許函數返回一個函數。</p>\n<span id=\"more\"></span></li>\n</ul>\n<ol>\n<li>高階函數：將函數作為參數或返回值的函數。</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    函數式程式設計 - 語法</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func01</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;func01執行&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">a = func01</span><br><span class=\"line\">a()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func02</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;func02執行&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通用</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func03</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;func03執行&quot;</span>)</span><br><span class=\"line\">    func()</span><br><span class=\"line\"></span><br><span class=\"line\">func03(func02)</span><br><span class=\"line\">func03(func01)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    函數式程式設計 - 思想</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">list01 = [<span class=\"number\">4</span>, <span class=\"number\">54</span>, <span class=\"number\">56</span>, <span class=\"number\">65</span>, <span class=\"number\">67</span>, <span class=\"number\">7</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 需求1：定義函數,在清單中查找所有大於50的數字</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find01</span>():</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> item &gt; <span class=\"number\">50</span>:</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> item</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 需求2：定義函數,在清單中查找所有小於10的數字</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find02</span>():</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> item &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> item</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># “封裝” -- 分</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">condition01</span>(<span class=\"params\">item</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item &gt; <span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">condition02</span>(<span class=\"params\">item</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item &lt; <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通用</span></span><br><span class=\"line\"><span class=\"comment\"># “繼承” - 隔</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01:</span><br><span class=\"line\">        <span class=\"comment\"># if item &lt; 10:</span></span><br><span class=\"line\">        <span class=\"comment\"># if condition02(item):</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> func(item):</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> item</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># &quot;多態&quot; - 做</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> find(condition01):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> find(condition02):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函數作為參數\"><a href=\"#函數作為參數\" class=\"headerlink\" title=\"函數作為參數\"></a>函數作為參數</h2><p>將核心邏輯傳入方法體，使該方法的適用性更廣，體現了物件導向的開閉原則。</p>\n<h3 id=\"lambda-運算式\"><a href=\"#lambda-運算式\" class=\"headerlink\" title=\"lambda 運算式\"></a>lambda 運算式</h3><ol>\n<li>定義：是一種匿名方法。</li>\n<li>作用：作為參數傳遞時語法簡潔，優雅，代碼可讀性強。</li>\n</ol>\n<p>隨時創建和銷毀，減少程式耦合度。</p>\n<ol>\n<li>語法</li>\n</ol>\n<ul>\n<li>定義：</li>\n</ul>\n<p>變數 &#x3D; lambda 形參: 方法體</p>\n<p>– 調用：</p>\n<p>變數(實參)</p>\n<ol>\n<li>說明：</li>\n</ol>\n<ul>\n<li>形參沒有可以不填</li>\n<li>方法體只能有一條語句，且不支援設定陳述式。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    lambda運算式</span></span><br><span class=\"line\"><span class=\"string\">        匿名方法</span></span><br><span class=\"line\"><span class=\"string\">        語法：</span></span><br><span class=\"line\"><span class=\"string\">            lambda 參數:方法體</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># def func01(a,b):</span></span><br><span class=\"line\"><span class=\"comment\">#     return a &gt; b</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print(func01(10,20))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 有參數有返回值</span></span><br><span class=\"line\">func01 = <span class=\"keyword\">lambda</span> a,b:a &gt; b</span><br><span class=\"line\"><span class=\"built_in\">print</span>(func01(<span class=\"number\">10</span>,<span class=\"number\">20</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 無參數有返回值</span></span><br><span class=\"line\"><span class=\"comment\"># def func02():</span></span><br><span class=\"line\"><span class=\"comment\">#     return &quot;ok&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print(func02())</span></span><br><span class=\"line\">func02 = <span class=\"keyword\">lambda</span> :<span class=\"string\">&quot;ok&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(func02())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 無參數無返回值</span></span><br><span class=\"line\"><span class=\"comment\"># def func03():</span></span><br><span class=\"line\"><span class=\"comment\">#     print(&quot;ok&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># func03()</span></span><br><span class=\"line\"></span><br><span class=\"line\">func03 = <span class=\"keyword\">lambda</span> :<span class=\"built_in\">print</span>(<span class=\"string\">&quot;ok&quot;</span>)</span><br><span class=\"line\">func03()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 有參數無返回值</span></span><br><span class=\"line\"><span class=\"comment\"># def func03(a):</span></span><br><span class=\"line\"><span class=\"comment\">#     print(a)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># func03(100)</span></span><br><span class=\"line\">func03 = <span class=\"keyword\">lambda</span> a:<span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">func03(<span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. lambda 不支持設定陳述式</span></span><br><span class=\"line\"><span class=\"comment\"># def func05(iterable):</span></span><br><span class=\"line\"><span class=\"comment\">#     iterable[0] = 100</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># list01 = [1]</span></span><br><span class=\"line\"><span class=\"comment\"># func05(list01)</span></span><br><span class=\"line\"><span class=\"comment\"># print(list01)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># func05 = lambda iterable: iterable[0] = 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6. lambda 不支持多條語句</span></span><br><span class=\"line\"><span class=\"comment\"># def func06(a,b):</span></span><br><span class=\"line\"><span class=\"comment\">#     print(a)</span></span><br><span class=\"line\"><span class=\"comment\">#     print(b)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># func06(10,20)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># func06 = lambda a,b: print(a);print(b)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"內置高階函數\"><a href=\"#內置高階函數\" class=\"headerlink\" title=\"內置高階函數\"></a>內置高階函數</h3><ol>\n<li><p>map（函數，可反覆運算物件）：使用可反覆運算物件中的每個元素調用函數，將返回值作為新可反覆運算物件元素；返回值為新可反覆運算對象。</p>\n</li>\n<li><p>filter(函數，可反覆運算物件)：根據條件篩選可反覆運算物件中的元素，返回值為新可反覆運算物件。</p>\n</li>\n<li><p>sorted(可反覆運算物件，key &#x3D; 函數,reverse &#x3D; bool值)：排序，返回值為排序結果。</p>\n</li>\n<li><p>max(可反覆運算物件，key &#x3D; 函數)：根據函數獲取可反覆運算物件的最大值。</p>\n</li>\n<li><p>min(可反覆運算物件，key &#x3D; 函數)：根據函數獲取可反覆運算物件的最小值。</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    內置高階函數</span></span><br><span class=\"line\"><span class=\"string\">        這個函數的參數或者返回值是函數</span></span><br><span class=\"line\"><span class=\"string\">    練習:exercise02</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, face_score=<span class=\"number\">0</span>, age=<span class=\"number\">0</span>, height=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.face_score = face_score</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\">        self.height = height</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;%s-%d-%d-%d&quot;</span> % (self.name, self.face_score, self.age, self.height)</span><br><span class=\"line\"></span><br><span class=\"line\">list_wife = [</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;雙兒&quot;</span>, <span class=\"number\">96</span>, <span class=\"number\">22</span>, <span class=\"number\">166</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;阿珂&quot;</span>, <span class=\"number\">100</span>, <span class=\"number\">23</span>, <span class=\"number\">173</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;小郡主&quot;</span>, <span class=\"number\">96</span>, <span class=\"number\">22</span>, <span class=\"number\">161</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;方怡&quot;</span>, <span class=\"number\">86</span>, <span class=\"number\">27</span>, <span class=\"number\">166</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;蘇荃&quot;</span>, <span class=\"number\">99</span>, <span class=\"number\">31</span>, <span class=\"number\">176</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;建寧&quot;</span>, <span class=\"number\">93</span>, <span class=\"number\">24</span>, <span class=\"number\">163</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;曾柔&quot;</span>, <span class=\"number\">88</span>, <span class=\"number\">26</span>, <span class=\"number\">170</span>),</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1.  map 映射</span></span><br><span class=\"line\"><span class=\"comment\">#  在老婆列表中獲取所有名稱</span></span><br><span class=\"line\"><span class=\"comment\">#  類似於：select</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> element <span class=\"keyword\">in</span> <span class=\"built_in\">map</span>(<span class=\"keyword\">lambda</span> item: item.name, list_wife):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(element)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. filter 篩檢程式</span></span><br><span class=\"line\"><span class=\"comment\"># 在老婆列表中獲取顏值大於90的所有老婆</span></span><br><span class=\"line\"><span class=\"comment\">#  類似於：find_all</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> element <span class=\"keyword\">in</span> <span class=\"built_in\">filter</span>(<span class=\"keyword\">lambda</span> item: item.face_score &gt; <span class=\"number\">90</span>, list_wife):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(element)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. max/min</span></span><br><span class=\"line\"><span class=\"comment\"># 在老婆列表中獲取顏值最高的老婆</span></span><br><span class=\"line\"><span class=\"comment\">#  類似於：get_max</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">max</span>(list_wife,key = <span class=\"keyword\">lambda</span> item:item.face_score))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">min</span>(list_wife,key = <span class=\"keyword\">lambda</span> item:item.face_score))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.sorted 排序</span></span><br><span class=\"line\"><span class=\"comment\">#   注意：沒有改變原有列表,而是返回新的</span></span><br><span class=\"line\"><span class=\"comment\"># 昇冪</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">sorted</span>(list_wife,key = <span class=\"keyword\">lambda</span> item:item.height):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"><span class=\"comment\"># 降冪</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">sorted</span>(list_wife,key = <span class=\"keyword\">lambda</span> item:item.height,reverse=<span class=\"literal\">True</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"外部嵌套作用域\"><a href=\"#外部嵌套作用域\" class=\"headerlink\" title=\"外部嵌套作用域\"></a>外部嵌套作用域</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    外部嵌套作用域</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func01</span>():</span><br><span class=\"line\">    a = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">func02</span>():</span><br><span class=\"line\">        <span class=\"comment\"># 內建函式,可以訪問外部嵌套變數</span></span><br><span class=\"line\">        <span class=\"comment\"># print(a)</span></span><br><span class=\"line\">        <span class=\"comment\"># 內建函式,如果修改外部嵌套變數,需要使用nonlocal語句聲明</span></span><br><span class=\"line\">        <span class=\"keyword\">nonlocal</span> a</span><br><span class=\"line\">        a = <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\">    func02()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\">func01()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函數作為返回值\"><a href=\"#函數作為返回值\" class=\"headerlink\" title=\"函數作為返回值\"></a>函數作為返回值</h2><p>邏輯連續，當內建函式被調用時，不脫離當前的邏輯。</p>\n<h2 id=\"閉包\"><a href=\"#閉包\" class=\"headerlink\" title=\"閉包\"></a>閉包</h2><ol>\n<li>三要素：</li>\n</ol>\n<ul>\n<li><p>必須有一個內嵌函數。</p>\n</li>\n<li><p>內嵌函數必須引用外部函數中變數。</p>\n</li>\n<li><p>外部函數返回值必須是內嵌函數。</p>\n</li>\n</ul>\n<ol>\n<li>語法</li>\n</ol>\n<ul>\n<li>定義：</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">外部函數名</span>(<span class=\"params\">參數</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    外部變數</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">內建函式名</span>(<span class=\"params\">參數</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        使用外部變數</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> 內建函式名</span><br></pre></td></tr></table></figure>\n<ul>\n<li>調用：</li>\n</ul>\n<p>變數 &#x3D; 外部函數名(參數)</p>\n<p>變數(參數)</p>\n<ol>\n<li><p>定義：在一個函數內部的函數,同時內建函式又引用了外部函數的變數。</p>\n</li>\n<li><p>本質：閉包是將內建函式和外部函數的執行環境綁定在一起的物件。</p>\n</li>\n<li><p>優點：內建函式可以使用外部變數。</p>\n</li>\n<li><p>缺點：外部變數一直存在於記憶體中，不會在調用結束後釋放，佔用記憶體。</p>\n</li>\n<li><p>作用：實現python裝飾器。</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    閉包</span></span><br><span class=\"line\"><span class=\"string\">        三大要素：</span></span><br><span class=\"line\"><span class=\"string\">            具有內外函數</span></span><br><span class=\"line\"><span class=\"string\">            內建函式訪問外部函數變數</span></span><br><span class=\"line\"><span class=\"string\">            外部函數返回內建函式</span></span><br><span class=\"line\"><span class=\"string\">        字面意思：封閉程式運行環境  --&gt; 保存</span></span><br><span class=\"line\"><span class=\"string\">        體現：</span></span><br><span class=\"line\"><span class=\"string\">            外部函數執行過後,棧幀不釋放,等待內建函式使用.</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func01</span>():</span><br><span class=\"line\">    a = <span class=\"number\">100</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">func02</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> func02</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 調用外部函數,返回內建函式</span></span><br><span class=\"line\">result = func01()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 因為python支援閉包,所以在外部函數執行過後,棧幀沒有釋放.</span></span><br><span class=\"line\"><span class=\"comment\"># 因此內建函式執行時,可以正確訪問外部嵌套變數.</span></span><br><span class=\"line\">result()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"練習1\"><a href=\"#練習1\" class=\"headerlink\" title=\"練習1\"></a>練習1</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    練習1:在老婆列表中,查找顏值大於90的所有老婆</span></span><br><span class=\"line\"><span class=\"string\">    練習2:在老婆列表中,查找身高小於170的所有老婆</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, face_score=<span class=\"number\">0</span>, age=<span class=\"number\">0</span>, height=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.face_score = face_score</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\">        self.height = height</span><br><span class=\"line\"></span><br><span class=\"line\">list_wife = [</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;雙兒&quot;</span>, <span class=\"number\">96</span>, <span class=\"number\">22</span>, <span class=\"number\">166</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;阿珂&quot;</span>, <span class=\"number\">100</span>, <span class=\"number\">23</span>, <span class=\"number\">173</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;小郡主&quot;</span>, <span class=\"number\">96</span>, <span class=\"number\">22</span>, <span class=\"number\">161</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;方怡&quot;</span>, <span class=\"number\">86</span>, <span class=\"number\">27</span>, <span class=\"number\">166</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;蘇荃&quot;</span>, <span class=\"number\">99</span>, <span class=\"number\">31</span>, <span class=\"number\">176</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;建寧&quot;</span>, <span class=\"number\">93</span>, <span class=\"number\">24</span>, <span class=\"number\">163</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;曾柔&quot;</span>, <span class=\"number\">88</span>, <span class=\"number\">26</span>, <span class=\"number\">170</span>),</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find01</span>():</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list_wife:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> item.face_score &gt; <span class=\"number\">90</span>:</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> item</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find02</span>():</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list_wife:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> item.height &lt; <span class=\"number\">170</span>:</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> item</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">condition01</span>(<span class=\"params\">item</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item.face_score &gt; <span class=\"number\">90</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">condition02</span>(<span class=\"params\">item</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item.height &lt; <span class=\"number\">170</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list_wife:</span><br><span class=\"line\">        <span class=\"comment\"># if item.face_score &gt; 90:</span></span><br><span class=\"line\">        <span class=\"comment\"># if condition01(item):</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> func(item):</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> item</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> find(condition01):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> find(condition02):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 函數裝飾器decorator</span><br><span class=\"line\"></span><br><span class=\"line\">1. 定義：在不改變原函數的調用以及內部代碼情況下，為其添加新功能的函數。</span><br><span class=\"line\">2. 語法</span><br><span class=\"line\"></span><br><span class=\"line\">def 函數裝飾器名稱(func):</span><br><span class=\"line\"></span><br><span class=\"line\">    def 內嵌函數(*args, **kwargs):</span><br><span class=\"line\"></span><br><span class=\"line\">        需要添加的新功能</span><br><span class=\"line\"></span><br><span class=\"line\">    return func(*args, **kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">return內嵌函數</span><br><span class=\"line\"></span><br><span class=\"line\">原函數 = 內嵌函數</span><br><span class=\"line\"></span><br><span class=\"line\">@ 函數裝飾器名稱</span><br><span class=\"line\"></span><br><span class=\"line\">def 原函數名稱(參數):</span><br><span class=\"line\"></span><br><span class=\"line\">函數體</span><br><span class=\"line\"></span><br><span class=\"line\">原函數(參數)</span><br><span class=\"line\"></span><br><span class=\"line\">1. 本質：使用“@函數裝飾器名稱”修飾原函數，等同於創建與原函數名稱相同的變數，關聯內嵌函數；故調用原函數時執行內嵌函數。</span><br><span class=\"line\"></span><br><span class=\"line\">原函數名稱 = 函數裝飾器名稱（原函數名稱）</span><br><span class=\"line\"></span><br><span class=\"line\">1. 裝飾器鏈：</span><br><span class=\"line\"></span><br><span class=\"line\">一個函數可以被多個裝飾器修飾，執行順序為從近到遠。</span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">    裝飾器</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">def func01():</span><br><span class=\"line\">    print(&quot;func01執行嘍&quot;)</span><br><span class=\"line\">    return &quot;ok&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">def func02(a):</span><br><span class=\"line\">    print(a, &quot;func02執行嘍&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">def print_func_name(func):</span><br><span class=\"line\">    def wrapper(*args, **kwargs):  # 合</span><br><span class=\"line\">        # 新功能</span><br><span class=\"line\">        print(func.__name__)</span><br><span class=\"line\">        # 舊功能</span><br><span class=\"line\">        return func(*args, **kwargs)  # 拆</span><br><span class=\"line\"></span><br><span class=\"line\">    return wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"># func01 = 新功能  +  舊功能</span><br><span class=\"line\"># func01 = print_func_name + func01</span><br><span class=\"line\">func01 = print_func_name(func01)</span><br><span class=\"line\"></span><br><span class=\"line\">print(func01())  # 執行的是內建函式</span><br><span class=\"line\"></span><br><span class=\"line\">func02 = print_func_name(func02)</span><br><span class=\"line\"></span><br><span class=\"line\">func02(100)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    裝飾器</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">print_func_name</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>(<span class=\"params\">*args, **kwargs</span>):  <span class=\"comment\"># 合</span></span><br><span class=\"line\">        <span class=\"comment\"># 新功能</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(func.__name__)</span><br><span class=\"line\">        <span class=\"comment\"># 舊功能</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> func(*args, **kwargs)  <span class=\"comment\"># 拆</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@print_func_name</span><span class=\"comment\"># func01 = print_func_name(func01)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func01</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;func01執行嘍&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;ok&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@print_func_name </span><span class=\"comment\"># func02 = print_func_name(func02)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func02</span>(<span class=\"params\">a</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a, <span class=\"string\">&quot;func02執行嘍&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(func01())  <span class=\"comment\"># 執行的是內建函式</span></span><br><span class=\"line\"></span><br><span class=\"line\">func02(<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"練習2\"><a href=\"#練習2\" class=\"headerlink\" title=\"練習2\"></a>練習2</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    需求1：</span></span><br><span class=\"line\"><span class=\"string\">        1. 在老婆清單中查找方怡對象</span></span><br><span class=\"line\"><span class=\"string\">        2. 在老婆列表中查找顏值大於95的單個老婆對象</span></span><br><span class=\"line\"><span class=\"string\">        first</span></span><br><span class=\"line\"><span class=\"string\">    需求2：</span></span><br><span class=\"line\"><span class=\"string\">        1. 計算老婆列表中姓名大於2個字的老婆數量</span></span><br><span class=\"line\"><span class=\"string\">        2. 計算老婆列表年齡小於25的老婆數量</span></span><br><span class=\"line\"><span class=\"string\">        get_count</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    需求3：</span></span><br><span class=\"line\"><span class=\"string\">        1. 獲取老婆列表中所有老婆的姓名</span></span><br><span class=\"line\"><span class=\"string\">        2. 獲取老婆列表中所有老婆的姓名與顏值</span></span><br><span class=\"line\"><span class=\"string\">        select</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    需求4：</span></span><br><span class=\"line\"><span class=\"string\">        1. 在老婆列表中判斷是否存在姓名是蘇荃的元素</span></span><br><span class=\"line\"><span class=\"string\">        2. 在老婆列表中判斷是否存在高度大於170的元素</span></span><br><span class=\"line\"><span class=\"string\">        is_exists</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    需求5：</span></span><br><span class=\"line\"><span class=\"string\">        1. 累加老婆列表中所有人的年齡</span></span><br><span class=\"line\"><span class=\"string\">        2. 累加老婆列表中所有人的高度</span></span><br><span class=\"line\"><span class=\"string\">        sum</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    需求7：</span></span><br><span class=\"line\"><span class=\"string\">        1. 在老婆列表中找出顏值最高的老婆物件</span></span><br><span class=\"line\"><span class=\"string\">        2. 在老婆清單中找出年齡最大的老婆物件</span></span><br><span class=\"line\"><span class=\"string\">        get_max</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    需求8：</span></span><br><span class=\"line\"><span class=\"string\">        1. 在老婆列表中刪除年齡小於25的所有老婆</span></span><br><span class=\"line\"><span class=\"string\">        2. 在老婆列表中刪除身高大於170的所有老婆</span></span><br><span class=\"line\"><span class=\"string\">        delete_all</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    需求9：</span></span><br><span class=\"line\"><span class=\"string\">        1. 對老婆清單根據年齡進行昇冪排列</span></span><br><span class=\"line\"><span class=\"string\">        2. 對老婆清單根據顏值進行昇冪排列</span></span><br><span class=\"line\"><span class=\"string\">        order_by</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    步驟：</span></span><br><span class=\"line\"><span class=\"string\">        1. 根據需求，定義函數.</span></span><br><span class=\"line\"><span class=\"string\">        2. 將變化點單獨定義為函數.</span></span><br><span class=\"line\"><span class=\"string\">        3. 將通用代碼定義位元函數(使用參數隔離變化點)</span></span><br><span class=\"line\"><span class=\"string\">        4. 在IterableHelper類中添加新功能</span></span><br><span class=\"line\"><span class=\"string\">        5. 在當前模組中進行測試</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> common.iterable_tools <span class=\"keyword\">import</span> IterableHelper</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Wife</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, face_score=<span class=\"number\">0</span>, age=<span class=\"number\">0</span>, height=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.face_score = face_score</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\">        self.height = height</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;%s-%d-%d-%d&quot;</span>%(self.name,self.face_score,self.age,self.height)</span><br><span class=\"line\"></span><br><span class=\"line\">list_wife = [</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;雙兒&quot;</span>, <span class=\"number\">96</span>, <span class=\"number\">22</span>, <span class=\"number\">166</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;阿珂&quot;</span>, <span class=\"number\">100</span>, <span class=\"number\">23</span>, <span class=\"number\">173</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;小郡主&quot;</span>, <span class=\"number\">96</span>, <span class=\"number\">22</span>, <span class=\"number\">161</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;方怡&quot;</span>, <span class=\"number\">86</span>, <span class=\"number\">27</span>, <span class=\"number\">166</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;蘇荃&quot;</span>, <span class=\"number\">99</span>, <span class=\"number\">31</span>, <span class=\"number\">176</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;建寧&quot;</span>, <span class=\"number\">93</span>, <span class=\"number\">24</span>, <span class=\"number\">163</span>),</span><br><span class=\"line\">    Wife(<span class=\"string\">&quot;曾柔&quot;</span>, <span class=\"number\">88</span>, <span class=\"number\">26</span>, <span class=\"number\">170</span>),</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def condition01(item):</span></span><br><span class=\"line\"><span class=\"comment\">#     return item.face_score &gt; 90</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for item in IterableHelper.find_all(list_wife,condition01):</span></span><br><span class=\"line\"><span class=\"comment\">#     print(item)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> IterableHelper.find_all(list_wife,<span class=\"keyword\">lambda</span> item:item.face_score &gt; <span class=\"number\">90</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 練習1：</span></span><br><span class=\"line\"><span class=\"comment\"># def first01():</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         if item.name == &quot;方怡&quot;:</span></span><br><span class=\"line\"><span class=\"comment\">#             return item</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def first02():</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         if item.face_score &gt; 95:</span></span><br><span class=\"line\"><span class=\"comment\">#             return item</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def condition01(item):</span></span><br><span class=\"line\"><span class=\"comment\">#     return item.name == &quot;方怡&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def condition02(item):</span></span><br><span class=\"line\"><span class=\"comment\">#     return item.face_score &gt; 95</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def first(func):</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         # if item.face_score &gt; 95:</span></span><br><span class=\"line\"><span class=\"comment\">#         # if condition02(item):</span></span><br><span class=\"line\"><span class=\"comment\">#         if func(item):</span></span><br><span class=\"line\"><span class=\"comment\">#             return item</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(IterableHelper.first(list_wife,condition02))</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(IterableHelper.first(list_wife,<span class=\"keyword\">lambda</span> item:item.face_score &gt; <span class=\"number\">95</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 練習2：</span></span><br><span class=\"line\"><span class=\"comment\"># def get_count01():</span></span><br><span class=\"line\"><span class=\"comment\">#     count = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         if len(item.name) &gt; 2:</span></span><br><span class=\"line\"><span class=\"comment\">#             count += 1</span></span><br><span class=\"line\"><span class=\"comment\">#     return count</span></span><br><span class=\"line\"><span class=\"comment\"># def get_count02():</span></span><br><span class=\"line\"><span class=\"comment\">#     count = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         if item.age &lt; 25:</span></span><br><span class=\"line\"><span class=\"comment\">#             count += 1</span></span><br><span class=\"line\"><span class=\"comment\">#     return count</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def condition01(item):</span></span><br><span class=\"line\"><span class=\"comment\">#     return len(item.name) &gt; 2</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def condition02(item):</span></span><br><span class=\"line\"><span class=\"comment\">#     return item.age &lt; 25</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def get_count(func):</span></span><br><span class=\"line\"><span class=\"comment\">#     count = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         # if item.age &lt; 25:</span></span><br><span class=\"line\"><span class=\"comment\">#         # if condition02(item):</span></span><br><span class=\"line\"><span class=\"comment\">#         if func(item):</span></span><br><span class=\"line\"><span class=\"comment\">#             count += 1</span></span><br><span class=\"line\"><span class=\"comment\">#     return count</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(IterableHelper.get_count(list_wife,condition02))</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(IterableHelper.get_count(list_wife,<span class=\"keyword\">lambda</span> item: item.age &lt; <span class=\"number\">25</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 練習3</span></span><br><span class=\"line\"><span class=\"comment\"># def select01():</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         yield item.name</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def select02():</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         yield (item.name,item.face_score)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">handle01</span>(<span class=\"params\">item</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item.name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">handle02</span>(<span class=\"params\">item</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (item.name,item.face_score)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def select(func):</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         # yield (item.name,item.face_score)</span></span><br><span class=\"line\"><span class=\"comment\">#         # yield handle02(item)</span></span><br><span class=\"line\"><span class=\"comment\">#         yield func(item)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> IterableHelper.select(list_wife,handle02):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 練習4：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def is_exists01():</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         if item.name == &quot;蘇荃&quot;:</span></span><br><span class=\"line\"><span class=\"comment\">#             return True</span></span><br><span class=\"line\"><span class=\"comment\">#     return False</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def is_exists02():</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         if item.height &gt; 170:</span></span><br><span class=\"line\"><span class=\"comment\">#             return True</span></span><br><span class=\"line\"><span class=\"comment\">#     return False</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def condition01(item):</span></span><br><span class=\"line\"><span class=\"comment\">#     return item.name == &quot;蘇荃&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def condition02(item):</span></span><br><span class=\"line\"><span class=\"comment\">#     return item.height &gt; 170</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def is_exists(func):</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         # if item.height &gt; 170:</span></span><br><span class=\"line\"><span class=\"comment\">#         # if condition02(item):</span></span><br><span class=\"line\"><span class=\"comment\">#         if func(item):</span></span><br><span class=\"line\"><span class=\"comment\">#             return True</span></span><br><span class=\"line\"><span class=\"comment\">#     return False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(IterableHelper.is_exists(list_wife,<span class=\"keyword\">lambda</span> item:item.height &gt; <span class=\"number\">170</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 練習5：</span></span><br><span class=\"line\"><span class=\"comment\"># def sum01():</span></span><br><span class=\"line\"><span class=\"comment\">#     sum_value = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         sum_value += item.age</span></span><br><span class=\"line\"><span class=\"comment\">#     return sum_value</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def sum02():</span></span><br><span class=\"line\"><span class=\"comment\">#     sum_value = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         sum_value += item.height</span></span><br><span class=\"line\"><span class=\"comment\">#     return sum_value</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def sum(func):</span></span><br><span class=\"line\"><span class=\"comment\">#     sum_value = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     for item in list_wife:</span></span><br><span class=\"line\"><span class=\"comment\">#         # sum_value += item.height</span></span><br><span class=\"line\"><span class=\"comment\">#         sum_value += func(item)</span></span><br><span class=\"line\"><span class=\"comment\">#     return sum_value</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(IterableHelper.<span class=\"built_in\">sum</span>(list_wife,<span class=\"keyword\">lambda</span> item:item.height))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 練習6：</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(IterableHelper.get_max(list_wife,<span class=\"keyword\">lambda</span> element:element.height))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 練習7:</span></span><br><span class=\"line\"><span class=\"comment\"># print(IterableHelper.delete_all(list_wife,lambda e:e.age &gt; 25))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 練習8:</span></span><br><span class=\"line\">IterableHelper.order_by(list_wife,<span class=\"keyword\">lambda</span> e:e.age)</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list_wife:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    使用內置高級函數實現下列功能：</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    1. 在敵人列表中查找所有敵人名稱與攻擊力</span></span><br><span class=\"line\"><span class=\"string\">    2. 在敵人列表中查找血量大於500的所有敵人</span></span><br><span class=\"line\"><span class=\"string\">    3. 對敵人列表進行降冪排列</span></span><br><span class=\"line\"><span class=\"string\">    4. 找出列表[(1,),(2,2,2),(3,3)]中長度最大的元素</span></span><br><span class=\"line\"><span class=\"string\">    5. 根據value對字典進行昇冪排列&#123;&quot;張無忌&quot;:306,&quot;趙敏&quot;:305,&quot;小昭&quot;:102&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Enemy</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name=<span class=\"string\">&quot;&quot;</span>, hp=<span class=\"number\">0</span>, atk=<span class=\"number\">0</span>, defence=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.hp = hp</span><br><span class=\"line\">        self.atk = atk</span><br><span class=\"line\">        self.defence = defence</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;%s-%d-%d-%d&quot;</span> % (self.name, self.hp, self.atk, self.defence)</span><br><span class=\"line\"></span><br><span class=\"line\">list_enemy = [</span><br><span class=\"line\">    Enemy(<span class=\"string\">&quot;滅霸&quot;</span>,<span class=\"number\">999</span>,<span class=\"number\">555</span>,<span class=\"number\">333</span>),</span><br><span class=\"line\">    Enemy(<span class=\"string\">&quot;成昆&quot;</span>,<span class=\"number\">360</span>,<span class=\"number\">100</span>,<span class=\"number\">50</span>),</span><br><span class=\"line\">    Enemy(<span class=\"string\">&quot;玄冥二老&quot;</span>,<span class=\"number\">300</span>,<span class=\"number\">90</span>,<span class=\"number\">70</span>),</span><br><span class=\"line\">    Enemy(<span class=\"string\">&quot;白骨精&quot;</span>, <span class=\"number\">600</span>, <span class=\"number\">200</span>,<span class=\"number\">60</span>),</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">map</span>(<span class=\"keyword\">lambda</span> item:(item.name,item.atk),list_enemy):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">filter</span>(<span class=\"keyword\">lambda</span> item:item.hp &gt; <span class=\"number\">500</span>,list_enemy):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">sorted</span>(list_enemy,key = <span class=\"keyword\">lambda</span> item:item.hp):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\">list01 = [(<span class=\"number\">1</span>,),(<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>),(<span class=\"number\">3</span>,<span class=\"number\">3</span>)]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">max</span>(list01,key = <span class=\"keyword\">lambda</span> item:<span class=\"built_in\">len</span>(item)))</span><br><span class=\"line\"></span><br><span class=\"line\">dict01 = &#123;<span class=\"string\">&quot;張無忌&quot;</span>:<span class=\"number\">306</span>,<span class=\"string\">&quot;趙敏&quot;</span>:<span class=\"number\">305</span>,<span class=\"string\">&quot;小昭&quot;</span>:<span class=\"number\">102</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">sorted</span>(dict01.items(),key = <span class=\"keyword\">lambda</span> item:item[<span class=\"number\">1</span>]):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    閉包應用</span></span><br><span class=\"line\"><span class=\"string\">        邏輯連續</span></span><br><span class=\"line\"><span class=\"string\">        裝飾器</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">give_gife_money</span>(<span class=\"params\">money</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;得到了&quot;</span>, money, <span class=\"string\">&quot;元壓歲錢&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">child_buy</span>(<span class=\"params\">target, price</span>):</span><br><span class=\"line\">        <span class=\"keyword\">nonlocal</span> money</span><br><span class=\"line\">        money -= price</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;購買了&quot;</span>, target, <span class=\"string\">&quot;還剩&quot;</span>, money, <span class=\"string\">&quot;元&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> child_buy</span><br><span class=\"line\"></span><br><span class=\"line\">action = give_gife_money(<span class=\"number\">500</span>)</span><br><span class=\"line\">action(<span class=\"string\">&quot;變形金剛&quot;</span>, <span class=\"number\">130</span>)</span><br><span class=\"line\">action(<span class=\"string\">&quot;遙控飛機&quot;</span>, <span class=\"number\">250</span>)</span><br><span class=\"line\">action(<span class=\"string\">&quot;零食&quot;</span>, <span class=\"number\">120</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    在不改變原有功能的定義與調用情況下(進入後臺、刪除訂單),</span></span><br><span class=\"line\"><span class=\"string\">    為其增加新功能(驗證許可權).</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">verify_permissions</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>(<span class=\"params\">*args, **kwargs</span>):  <span class=\"comment\"># 合</span></span><br><span class=\"line\">        <span class=\"comment\"># 新功能</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;驗證許可權&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 舊功能</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> func(*args, **kwargs)  <span class=\"comment\"># 拆</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@verify_permissions</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">enter_background</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;進入後臺&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@verify_permissions</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">delete_order</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;刪除訂單&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># enter_background = verify_permissions(enter_background)</span></span><br><span class=\"line\"><span class=\"comment\"># delete_order = verify_permissions(delete_order)</span></span><br><span class=\"line\"></span><br><span class=\"line\">enter_background()</span><br><span class=\"line\">delete_order()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    在不改變原有功能的定義與調用情況下,為其增加新功能.</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">print_execute_time</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>(<span class=\"params\">*args, **kwargs</span>):</span><br><span class=\"line\">        start_time = time.time()</span><br><span class=\"line\">        result = func(*args, **kwargs)</span><br><span class=\"line\">        stop_time = time.time()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(stop_time - start_time)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@print_execute_time</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func01</span>():</span><br><span class=\"line\">    sum_value = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">        sum_value += i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum_value</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@print_execute_time</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func02</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\">    sum_value = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):</span><br><span class=\"line\">        sum_value += i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum_value</span><br><span class=\"line\"></span><br><span class=\"line\">func01()</span><br><span class=\"line\"></span><br><span class=\"line\">func02(<span class=\"number\">100000</span>)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【程式結構】_反覆運算( iterable / iterator )","url":"/2022/01/16/2022-01-16-%E3%80%90%E7%A8%8B%E5%BC%8F%E7%B5%90%E6%A7%8B%E3%80%91-%E5%8F%8D%E8%A6%86%E9%81%8B%E7%AE%97-iterable-iterator/","content":"<p>每一次對過程的重複稱為一次“反覆運算”，而每一次反覆運算得到的結果會作為下一次反覆運算的初始值。例如：迴圈獲取容器中的元素。</p>\n<h2 id=\"可反覆運算對象iterable\"><a href=\"#可反覆運算對象iterable\" class=\"headerlink\" title=\"可反覆運算對象iterable\"></a>可反覆運算對象iterable</h2><ol>\n<li>定義：具有__iter__函數的物件，可以返回反覆運算器物件。<span id=\"more\"></span></li>\n<li>語法</li>\n</ol>\n<ul>\n<li><p>創建：<br>class 可反覆運算對象名稱:<br>def <strong>iter</strong>(self):<br>return 反覆運算器</p>\n</li>\n<li><p>使用：<br>for 變數名 in 可反覆運算對象:<br>語句</p>\n</li>\n</ul>\n<ol>\n<li>原理：<br>反覆運算器 &#x3D; 可反覆運算對象.<strong>iter</strong>()</li>\n</ol>\n<p>while True:</p>\n<p>try:</p>\n<p>print(反覆運算器.<strong>next</strong>())</p>\n<p>except StopIteration:</p>\n<p>break</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    可反覆運算對象</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">list01 = [<span class=\"number\">34</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">46</span>, <span class=\"number\">57</span>, <span class=\"number\">87</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for item in list01:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(item)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 物件可以for的條件是什麼？</span></span><br><span class=\"line\"><span class=\"comment\"># 物件具有__iter__方法</span></span><br><span class=\"line\"><span class=\"comment\"># 物件可以獲取反覆運算器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for 原理:</span></span><br><span class=\"line\"><span class=\"comment\"># 1. 獲取反覆運算器對象</span></span><br><span class=\"line\">iterator = list01.__iter__()</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 2. 獲取下一個元素</span></span><br><span class=\"line\">        item = iterator.__next__()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\">    <span class=\"comment\"># 3. 如果沒有元素,則捕獲異常，停止迴圈。</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> StopIteration:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"反覆運算器對象iterator\"><a href=\"#反覆運算器對象iterator\" class=\"headerlink\" title=\"反覆運算器對象iterator\"></a>反覆運算器對象iterator</h2><ol>\n<li>定義：可以被next()函式呼叫並返回下一個值的物件。</li>\n<li>語法</li>\n</ol>\n<p>class 反覆運算器類名:</p>\n<p>def <strong>init</strong>(self, 聚合物件):</p>\n<p>self.聚合物件&#x3D; 聚合物件</p>\n<p>def <strong>next</strong>(self):</p>\n<p>if 沒有元素:</p>\n<p>raise StopIteration</p>\n<p>return 聚合物件元素</p>\n<ol>\n<li>說明：</li>\n</ol>\n<ul>\n<li><ul>\n<li>聚合物件通常是容器物件。</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>作用：使用者只需通過一種方式，便可簡潔明瞭的獲取聚合物件中各個元素，而又無需瞭解其內部結構。</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    反覆運算器</span></span><br><span class=\"line\"><span class=\"string\">    目的：反覆運算自訂對象</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SkillIterator</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, data</span>):</span><br><span class=\"line\">        self.__data = data</span><br><span class=\"line\">        self.__index = -<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__next__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.__index += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.__index &gt; <span class=\"built_in\">len</span>(self.__data) - <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> StopIteration()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__data[self.__index]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SkillManager</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.__skills = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">add_skill</span>(<span class=\"params\">self, skill</span>):</span><br><span class=\"line\">        self.__skills.append(skill)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__iter__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> SkillIterator(self.__skills)</span><br><span class=\"line\"></span><br><span class=\"line\">manager = SkillManager()</span><br><span class=\"line\">manager.add_skill(<span class=\"string\">&quot;九陽神功&quot;</span>)</span><br><span class=\"line\">manager.add_skill(<span class=\"string\">&quot;乾大挪移&quot;</span>)</span><br><span class=\"line\">manager.add_skill(<span class=\"string\">&quot;太極坤&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for item in manager:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(item)#</span></span><br><span class=\"line\"></span><br><span class=\"line\">iterator = manager.__iter__()</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        item = iterator.__next__()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> StopIteration:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    練習1:使用反覆運算思想,獲取元組中所有元素</span></span><br><span class=\"line\"><span class=\"string\">    練習2:使用反覆運算思想,獲取字典中所有k.v</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">dict01 = &#123;<span class=\"string\">&quot;唐僧&quot;</span>:<span class=\"number\">27</span>,<span class=\"string\">&quot;悟空&quot;</span>:<span class=\"number\">29</span>,<span class=\"string\">&quot;八戒&quot;</span>:<span class=\"number\">30</span>&#125;</span><br><span class=\"line\">iterator = dict01.__iter__()</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        key = iterator.__next__()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(key,dict01[key])</span><br><span class=\"line\">    <span class=\"keyword\">except</span> StopIteration:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    反覆運算員工管理器</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">EmployeeIterator</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, data</span>):</span><br><span class=\"line\">        self.__data = data</span><br><span class=\"line\">        self.__index = -<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__next__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.__index += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.__index &gt; <span class=\"built_in\">len</span>(self.__data) - <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> StopIteration()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__data[self.__index]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">EmployeeManager</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.__employee = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">add_employee</span>(<span class=\"params\">self, skill</span>):</span><br><span class=\"line\">        self.__employee.append(skill)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__iter__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> EmployeeIterator(self.__employee)</span><br><span class=\"line\"></span><br><span class=\"line\">manager = EmployeeManager()</span><br><span class=\"line\">manager.add_employee(<span class=\"string\">&quot;八戒&quot;</span>)</span><br><span class=\"line\">manager.add_employee(<span class=\"string\">&quot;悟空&quot;</span>)</span><br><span class=\"line\">manager.add_employee(<span class=\"string\">&quot;張無忌&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> manager:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    for item in MyRange(5):</span></span><br><span class=\"line\"><span class=\"string\">        print(item)# 0 1 2 3 4</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyRangeIterator</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, stop</span>):</span><br><span class=\"line\">        self.__number = -<span class=\"number\">1</span></span><br><span class=\"line\">        self.__stop_value = stop</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__next__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.__number += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.__number &gt;= self.__stop_value:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> StopIteration()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__number</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyRange</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, stop</span>):</span><br><span class=\"line\">        self.__stop = stop</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__iter__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> MyRangeIterator(self.__stop)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 迴圈一次 計算一次  返回一次</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> MyRange(<span class=\"number\">999999999999999999999999999999999999</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)  <span class=\"comment\"># 0 1 2 3 4</span></span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【程式結構】_生成器generator","url":"/2022/01/16/2022-01-16-%E3%80%90%E7%A8%8B%E5%BC%8F%E7%B5%90%E6%A7%8B%E3%80%91-%E7%94%9F%E6%88%90%E5%99%A8generator/","content":"<h2 id=\"生成器generator\"><a href=\"#生成器generator\" class=\"headerlink\" title=\"生成器generator\"></a>生成器generator</h2><ol>\n<li>定義：能夠動態(迴圈一次計算一次返回一次)提供資料的可反覆運算物件。</li>\n<li>作用：在迴圈過程中，按照某種演算法推算資料，不必創建容器存儲完整的結果，從而節省記憶體空間。資料量越大，優勢越明顯。</li>\n<li>以上作用也稱之為延遲操作或惰性操作，通俗的講就是在需要的時候才計算結果，而不是一次構建出所有結果。<span id=\"more\"></span></li>\n</ol>\n<h3 id=\"生成器函數\"><a href=\"#生成器函數\" class=\"headerlink\" title=\"生成器函數\"></a>生成器函數</h3><ol>\n<li>定義：含有yield語句的函數，返回值為生成器對象。</li>\n<li>語法</li>\n</ol>\n<ul>\n<li><ul>\n<li>創建：</li>\n</ul>\n</li>\n</ul>\n<p>def 函數名():</p>\n<p>…</p>\n<p>yield 數據</p>\n<p>…</p>\n<p>– 調用：</p>\n<p>for 變數名 in 函數名():</p>\n<p>語句</p>\n<ol>\n<li>說明：</li>\n</ol>\n<ul>\n<li>調用生成器函數將返回一個生成器物件，不執行函數體。</li>\n<li>yield翻譯為”產生”或”生成”</li>\n</ul>\n<ol>\n<li>執行過程：</li>\n</ol>\n<ul>\n<li>調用生成器函數會自動創建反覆運算器物件。</li>\n<li>調用反覆運算器物件的__next__()方法時才執行生成器函數。</li>\n<li>每次執行到yield語句時返回資料，暫時離開。</li>\n<li>待下次調用__next__()方法時繼續從離開處繼續執行。</li>\n</ul>\n<ol>\n<li>原理：生成反覆運算器物件的大致規則如下</li>\n</ol>\n<ul>\n<li>將yield關鍵字以前的代碼放在next方法中。</li>\n<li>將yield關鍵字後面的資料作為next方法的返回值。</li>\n</ul>\n<h3 id=\"返回單個結果用return\"><a href=\"#返回單個結果用return\" class=\"headerlink\" title=\"返回單個結果用return\"></a>返回單個結果用return</h3><h3 id=\"返回多個結果用yieid\"><a href=\"#返回多個結果用yieid\" class=\"headerlink\" title=\"返回多個結果用yieid\"></a>返回多個結果用yieid</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    反覆運算器 --&gt; yield</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SkillManager</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.__skills = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">add_skill</span>(<span class=\"params\">self, skill</span>):</span><br><span class=\"line\">        self.__skills.append(skill)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__iter__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 你看見的代碼,不是這個樣子.</span></span><br><span class=\"line\">        <span class=\"comment\"># 代碼生成大致流程：</span></span><br><span class=\"line\">        <span class=\"comment\"># 1. 將yield以前的代碼,定義在__next__方法中</span></span><br><span class=\"line\">        <span class=\"comment\"># 2. 將yield以後的資料,作為__next__方法的返回值</span></span><br><span class=\"line\">        <span class=\"comment\"># print(&quot;準備&quot;)</span></span><br><span class=\"line\">        <span class=\"comment\"># yield self.__skills[0]</span></span><br><span class=\"line\">        <span class=\"comment\"># print(&quot;準備&quot;)</span></span><br><span class=\"line\">        <span class=\"comment\"># yield self.__skills[1]</span></span><br><span class=\"line\">        <span class=\"comment\"># print(&quot;準備&quot;)</span></span><br><span class=\"line\">        <span class=\"comment\"># yield self.__skills[2]</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> self.__skills:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;準備&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> item</span><br><span class=\"line\"></span><br><span class=\"line\">manager = SkillManager()</span><br><span class=\"line\">manager.add_skill(<span class=\"string\">&quot;九陽神功&quot;</span>)</span><br><span class=\"line\">manager.add_skill(<span class=\"string\">&quot;乾大挪移&quot;</span>)</span><br><span class=\"line\">manager.add_skill(<span class=\"string\">&quot;太極坤&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> manager:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># iterator = manager.__iter__()</span></span><br><span class=\"line\"><span class=\"comment\"># while True:</span></span><br><span class=\"line\"><span class=\"comment\">#     try:</span></span><br><span class=\"line\"><span class=\"comment\">#         item = iterator.__next__()</span></span><br><span class=\"line\"><span class=\"comment\">#         print(item)</span></span><br><span class=\"line\"><span class=\"comment\">#     except StopIteration:</span></span><br><span class=\"line\"><span class=\"comment\">#         break</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    yield --&gt; 生成器</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    # 生成器:可反覆運算物件（可以參與for） + 反覆運算器（產生資料）</span></span><br><span class=\"line\"><span class=\"string\">    calss Generator:</span></span><br><span class=\"line\"><span class=\"string\">        def __iter__(self):</span></span><br><span class=\"line\"><span class=\"string\">            return self</span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">        def __next__(self):</span></span><br><span class=\"line\"><span class=\"string\">            ...</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">my_range</span>(<span class=\"params\">stop</span>):</span><br><span class=\"line\">    number = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> number &lt; stop:</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> number</span><br><span class=\"line\">        number += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for item in my_range(5):</span></span><br><span class=\"line\"><span class=\"comment\">#     print(item)  # 0 1 2 3 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 惰性操作/延遲操作</span></span><br><span class=\"line\">my = my_range(<span class=\"number\">5</span>)</span><br><span class=\"line\">iterator = my.__iter__()</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        item = iterator.__next__()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> StopIteration:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    定義函數,在清單中獲取所有偶數.</span></span><br><span class=\"line\"><span class=\"string\">        -- 傳統思想：將結果存入新列表再返回</span></span><br><span class=\"line\"><span class=\"string\">        -- 生成器思想：將結果交給生成器對象推算</span></span><br><span class=\"line\"><span class=\"string\">    通過調試，體會惰性操作</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">list01 = [<span class=\"number\">43</span>, <span class=\"number\">42</span>, <span class=\"number\">68</span>, <span class=\"number\">66</span>, <span class=\"number\">78</span>, <span class=\"number\">87</span>, <span class=\"number\">453</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_even01</span>():</span><br><span class=\"line\">    list_result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> item % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            list_result.append(item)</span><br><span class=\"line\">\t\t<span class=\"comment\">#返回單個結果用return</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> list_result</span><br><span class=\"line\"></span><br><span class=\"line\">result = get_even01()</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> result:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_even02</span>():</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> item % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">\t\t<span class=\"comment\">#返回多個結果用yieid</span></span><br><span class=\"line\">           <span class=\"keyword\">yield</span> item</span><br><span class=\"line\"></span><br><span class=\"line\">result = get_even02()</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> result:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"內置生成器\"><a href=\"#內置生成器\" class=\"headerlink\" title=\"內置生成器\"></a>內置生成器</h2><h3 id=\"枚舉函數enumerate\"><a href=\"#枚舉函數enumerate\" class=\"headerlink\" title=\"枚舉函數enumerate\"></a>枚舉函數enumerate</h3><ul>\n<li>語法：</li>\n</ul>\n<p>for 變數 in enumerate(可反覆運算物件):</p>\n<p>語句</p>\n<p>for 索引, 元素in enumerate(可反覆運算物件):</p>\n<p>語句</p>\n<ul>\n<li>作用：遍歷可反覆運算物件時，可以將索引與元素組合為一個元組。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    參照下列代碼,自訂生成器my_enumerate.</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">my_enumerate</span>(<span class=\"params\">iterable</span>):</span><br><span class=\"line\">    index = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> iterable:</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> (index, item)</span><br><span class=\"line\">        index += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">dict01 = &#123;<span class=\"string\">&quot;悟空&quot;</span>: <span class=\"number\">26</span>, <span class=\"string\">&quot;八戒&quot;</span>: <span class=\"number\">28</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> my_enumerate(dict01):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(dict01):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"zip\"><a href=\"#zip\" class=\"headerlink\" title=\"zip\"></a>zip</h3><ul>\n<li>語法：</li>\n</ul>\n<p>for item in zip(可反覆運算物件1, 可反覆運算對象2….):</p>\n<p>語句</p>\n<ul>\n<li>作用：將多個可反覆運算物件中對應的元素組合成一個個元組，生成的元組個數由最小的可反覆運算物件決定。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    參照下列代碼,自訂生成器my_zip</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">my_zip</span>(<span class=\"params\">iterable01, iterable02</span>):</span><br><span class=\"line\">\t\t<span class=\"comment\">#此語句判定誰最小，所以不會報錯</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(iterable01)):</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> (iterable01[i], iterable02[i])</span><br><span class=\"line\"></span><br><span class=\"line\">list01 = [<span class=\"string\">&quot;八戒&quot;</span>, <span class=\"string\">&quot;悟空&quot;</span>, <span class=\"string\">&quot;蘇大強&quot;</span>]</span><br><span class=\"line\">list02 = [<span class=\"number\">102</span>, <span class=\"number\">105</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> my_zip(list01, list02):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"生成器運算式-表達式\"><a href=\"#生成器運算式-表達式\" class=\"headerlink\" title=\"生成器運算式(表達式)\"></a>生成器運算式(表達式)</h2><ol>\n<li>定義：用推導式形式創建生成器物件。</li>\n<li>語法：變數 &#x3D; ( 運算式 for 變數 in 可反覆運算物件 [if 真值表達式] )</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    生成器運算式</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列表推導式</span></span><br><span class=\"line\">list01 = [<span class=\"number\">34</span>, <span class=\"number\">43</span>, <span class=\"number\">54</span>, <span class=\"number\">65</span>, <span class=\"number\">67</span>, <span class=\"number\">7</span>]</span><br><span class=\"line\">list02 = [item <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01 <span class=\"keyword\">if</span> item &gt; <span class=\"number\">10</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list02:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#元祖沒有推倒式，所以小括號給到生成器</span></span><br><span class=\"line\">generator02 = (item <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01 <span class=\"keyword\">if</span> item &gt; <span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> generator02:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> (item <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01 <span class=\"keyword\">if</span> item &gt; <span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    1. 使用生成器運算式在list01中找出所有字串</span></span><br><span class=\"line\"><span class=\"string\">    2. 使用生成器運算式找出所有大於10的整數</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">list01 = [<span class=\"string\">&quot;悟空&quot;</span>,<span class=\"number\">57</span>,<span class=\"string\">&quot;八戒&quot;</span>,<span class=\"literal\">True</span>,<span class=\"string\">&quot;三藏&quot;</span>,<span class=\"number\">5.8</span>,<span class=\"number\">10</span>,<span class=\"number\">90</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> element <span class=\"keyword\">in</span> (item <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01 <span class=\"keyword\">if</span> <span class=\"built_in\">type</span>(item) == <span class=\"built_in\">str</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(element)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> element <span class=\"keyword\">in</span> (item <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01 <span class=\"keyword\">if</span> <span class=\"built_in\">type</span>(item) == <span class=\"built_in\">int</span> <span class=\"keyword\">and</span> item &gt; <span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(element)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python全】_總複習","url":"/2022/01/23/2022-01-23-%E3%80%90Python%E5%85%A8%E3%80%91-%E7%B8%BD%E8%A4%87%E7%BF%92/","content":"<h2 id=\"Python-總複習\"><a href=\"#Python-總複習\" class=\"headerlink\" title=\"Python 總複習\"></a>Python 總複習</h2><span id=\"more\"></span>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Python核心總複習</span></span><br><span class=\"line\"><span class=\"string\">        1. Python 執行過程</span></span><br><span class=\"line\"><span class=\"string\">            原始程式碼  -“編譯”-&gt;  位元組碼(.pyc)  -解釋-&gt;  機器碼</span></span><br><span class=\"line\"><span class=\"string\">            |      第一次        |</span></span><br><span class=\"line\"><span class=\"string\">            main.py  -- 入口代碼應當簡潔</span></span><br><span class=\"line\"><span class=\"string\">        2. 自動化記憶體管理機制</span></span><br><span class=\"line\"><span class=\"string\">            引用計數： 每個物件記錄被變數綁定(引用)的數量,當為0時被銷毀。</span></span><br><span class=\"line\"><span class=\"string\">                缺點：對迴圈引用無效</span></span><br><span class=\"line\"><span class=\"string\">            標記清除：當記憶體不足時,對整塊記憶體空間進行掃描,清空垃圾資料(整理有用的資料).</span></span><br><span class=\"line\"><span class=\"string\">                缺點：全盤掃描記憶體,計算量大。</span></span><br><span class=\"line\"><span class=\"string\">            分代回收：將記憶體劃分為多個區域(代),當記憶體不足時，進行升代操作.</span></span><br><span class=\"line\"><span class=\"string\">                    將有用的資料,轉移到下一代,垃圾資料清空.</span></span><br><span class=\"line\"><span class=\"string\">                    由於分代,所以避免了全盤掃描.</span></span><br><span class=\"line\"><span class=\"string\">            記憶體優化：盡少產生垃圾、物件集區(減少重複物件的存在,減少物件創建與銷毀的過程)</span></span><br><span class=\"line\"><span class=\"string\">                    可以設置分代回收參數</span></span><br><span class=\"line\"><span class=\"string\">        3. 容器</span></span><br><span class=\"line\"><span class=\"string\">            字串str:存儲字元編碼,不可變序列</span></span><br><span class=\"line\"><span class=\"string\">            列表list:存儲變數,可變序列</span></span><br><span class=\"line\"><span class=\"string\">            元組tuple:存儲變數,不可變序列</span></span><br><span class=\"line\"><span class=\"string\">            字典dict:存儲鍵值對,可變散列</span></span><br><span class=\"line\"><span class=\"string\">            集合set:存儲鍵,可變散列</span></span><br><span class=\"line\"><span class=\"string\">            序列與散列：</span></span><br><span class=\"line\"><span class=\"string\">                序列:連續的記憶體空間，有順序(索引.切片)</span></span><br><span class=\"line\"><span class=\"string\">                散列:不連續的記憶體空間，順序(通過key)</span></span><br><span class=\"line\"><span class=\"string\">            可變與不可變：</span></span><br><span class=\"line\"><span class=\"string\">                可變：預留空間</span></span><br><span class=\"line\"><span class=\"string\">                不可變：按需分配</span></span><br><span class=\"line\"><span class=\"string\">    4. 可變與不可變對象的傳參：</span></span><br><span class=\"line\"><span class=\"string\">            不可變資料,在函數內的修改,不影響函數外</span></span><br><span class=\"line\"><span class=\"string\">            可變資料,在函數內的修改,可以影響函數外</span></span><br><span class=\"line\"><span class=\"string\">        結論：傳入可變物件,修改可變物件,可以不通過返回值傳遞結果</span></span><br><span class=\"line\"><span class=\"string\">    5. 函數參數</span></span><br><span class=\"line\"><span class=\"string\">        實參：如何給形參傳遞資料</span></span><br><span class=\"line\"><span class=\"string\">            位置實參：根據順序對應</span></span><br><span class=\"line\"><span class=\"string\">                序列實參： 函數名(*序列)       【拆】</span></span><br><span class=\"line\"><span class=\"string\">            關鍵字實參：根據名稱對應 函數名(形參名 = 資料)</span></span><br><span class=\"line\"><span class=\"string\">                字典實參： 函數名(**字典)      【拆】</span></span><br><span class=\"line\"><span class=\"string\">        形參：規定傳參方式</span></span><br><span class=\"line\"><span class=\"string\">            默認參數：實參可以不傳遞</span></span><br><span class=\"line\"><span class=\"string\">                def 函數名(形參名 = 預設值)</span></span><br><span class=\"line\"><span class=\"string\">            位置形參：實參必須傳遞</span></span><br><span class=\"line\"><span class=\"string\">                星號元組形參：實參數量無限  def 函數名(*args)   【合】</span></span><br><span class=\"line\"><span class=\"string\">            命名關鍵字形參：實參必須是關鍵字實參</span></span><br><span class=\"line\"><span class=\"string\">                def 函數名(*args,a,b)</span></span><br><span class=\"line\"><span class=\"string\">                def 函數名(*,a,b)</span></span><br><span class=\"line\"><span class=\"string\">                雙星號字典形參：關鍵字實參數量無限  def 函數名(*kwargs)【合】</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">a = <span class=\"string\">&quot;悟空&quot;</span>  <span class=\"comment\"># 引用計數增加1</span></span><br><span class=\"line\">b = a      <span class=\"comment\"># 引用計數增加1</span></span><br><span class=\"line\">c = b      <span class=\"comment\"># 引用計數增加1</span></span><br><span class=\"line\"><span class=\"keyword\">del</span> a      <span class=\"comment\"># 引用計數減少1</span></span><br><span class=\"line\">b = <span class=\"string\">&quot;八戒&quot;</span> <span class=\"comment\"># 引用計數減少1</span></span><br><span class=\"line\">c = <span class=\"literal\">None</span>  <span class=\"comment\"># 引用計數減少1</span></span><br><span class=\"line\"><span class=\"comment\"># 悟空因為引用計數為零,所以被銷毀.</span></span><br><span class=\"line\"></span><br><span class=\"line\">list01 = []</span><br><span class=\"line\">list02 = []</span><br><span class=\"line\">list01.append(list02)</span><br><span class=\"line\">list02.append(list01)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 對不可變對象的頻繁修改，要改為對可變對象的修改。</span></span><br><span class=\"line\">list_result = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">    list_result.append(<span class=\"built_in\">str</span>(i))</span><br><span class=\"line\"></span><br><span class=\"line\">data01 = <span class=\"number\">100.7890</span></span><br><span class=\"line\">data02 = <span class=\"number\">100.7890</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">id</span>(data01),<span class=\"built_in\">id</span>(data02))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func01</span>(<span class=\"params\">p1,p2</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 不可變資料,在函數內的修改,不影響函數外</span></span><br><span class=\"line\">    p1 = <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"comment\"># 可變資料,在函數內的修改,可以影響函數外</span></span><br><span class=\"line\">    p2[<span class=\"number\">0</span>] = <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"number\">1</span></span><br><span class=\"line\">list01 = [<span class=\"number\">1</span>]</span><br><span class=\"line\">func01(a,list01)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list01)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    物件導向總複習</span></span><br><span class=\"line\"><span class=\"string\">    1. 面向過程與物件導向：</span></span><br><span class=\"line\"><span class=\"string\">        考慮問題從步驟(實現細節)角度出發</span></span><br><span class=\"line\"><span class=\"string\">        考慮問題從物件(誰)角度出發</span></span><br><span class=\"line\"><span class=\"string\">    2. 類和對象</span></span><br><span class=\"line\"><span class=\"string\">        實例成員:變數、方法.  每個物件不同的資料與行為.</span></span><br><span class=\"line\"><span class=\"string\">        類成員:變數、方法.  大家(共用)的資料與行為.</span></span><br><span class=\"line\"><span class=\"string\">        靜態方法：函數.   工具</span></span><br><span class=\"line\"><span class=\"string\">    3. 三大特徵：</span></span><br><span class=\"line\"><span class=\"string\">        封裝：分而治之（變化點單獨定義）</span></span><br><span class=\"line\"><span class=\"string\">        繼承：抽象 --&gt;統一 --&gt; 隔離(變化點)</span></span><br><span class=\"line\"><span class=\"string\">        多態：執行變化,定義變化（重寫）</span></span><br><span class=\"line\"><span class=\"string\">        核心理念：先用,再做.</span></span><br><span class=\"line\"><span class=\"string\">    6. 六大原則：</span></span><br><span class=\"line\"><span class=\"string\">        開閉原則：允許增加新功能,不能修改用戶端代碼.</span></span><br><span class=\"line\"><span class=\"string\">        單一職責：每個類有且只有一個改變的原因</span></span><br><span class=\"line\"><span class=\"string\">        依賴倒置：調用父,不調用子.</span></span><br><span class=\"line\"><span class=\"string\">        組合複用：僅僅複用代碼，優先考慮組合關係,不使用繼承關係。</span></span><br><span class=\"line\"><span class=\"string\">        裡氏替換：父出現的地方，可以使用子替換.</span></span><br><span class=\"line\"><span class=\"string\">                 建議使用擴展重寫</span></span><br><span class=\"line\"><span class=\"string\">        迪米特：低耦合</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Python高級總複習</span></span><br><span class=\"line\"><span class=\"string\">    1. 導入三種方式：</span></span><br><span class=\"line\"><span class=\"string\">        import 路徑.模組 as 別名</span></span><br><span class=\"line\"><span class=\"string\">        from 路徑.模組 import 成員</span></span><br><span class=\"line\"><span class=\"string\">        from 路徑.模組 import *</span></span><br><span class=\"line\"><span class=\"string\">    2. 導包成功的條件：sys.path + 導入路徑 = 真實路徑</span></span><br><span class=\"line\"><span class=\"string\">    3. 異常處理</span></span><br><span class=\"line\"><span class=\"string\">        語法：</span></span><br><span class=\"line\"><span class=\"string\">            try:</span></span><br><span class=\"line\"><span class=\"string\">                可能觸發異常的語句</span></span><br><span class=\"line\"><span class=\"string\">            except 錯誤類型1 [as 變數1]：</span></span><br><span class=\"line\"><span class=\"string\">                處理語句1</span></span><br><span class=\"line\"><span class=\"string\">            except 錯誤類型2 [as 變數2]：</span></span><br><span class=\"line\"><span class=\"string\">                處理語句2</span></span><br><span class=\"line\"><span class=\"string\">            except Exception  [as 變數3]：</span></span><br><span class=\"line\"><span class=\"string\">                不是以上錯誤類型的處理語句</span></span><br><span class=\"line\"><span class=\"string\">            else:</span></span><br><span class=\"line\"><span class=\"string\">                未發生異常的語句</span></span><br><span class=\"line\"><span class=\"string\">            finally:</span></span><br><span class=\"line\"><span class=\"string\">                無論是否發生異常的語句</span></span><br><span class=\"line\"><span class=\"string\">        現象：當異常發生時，程式不會再向下執行，而轉到函數的調用語句。</span></span><br><span class=\"line\"><span class=\"string\">        目的：將異常流程(向上)轉換為正常流程(向下)</span></span><br><span class=\"line\"><span class=\"string\">        目標：邏輯錯誤,非語法錯誤.</span></span><br><span class=\"line\"><span class=\"string\">        人為拋出異常：快速傳遞資訊</span></span><br><span class=\"line\"><span class=\"string\">            raise 異常物件</span></span><br><span class=\"line\"><span class=\"string\">        自訂異常類：封裝錯誤資訊</span></span><br><span class=\"line\"><span class=\"string\">    4. 反覆運算</span></span><br><span class=\"line\"><span class=\"string\">        可反覆運算對象：__iter__,可以參與for迴圈</span></span><br><span class=\"line\"><span class=\"string\">        反覆運算器：__next__,可以通過next取值</span></span><br><span class=\"line\"><span class=\"string\">    5. 生成器</span></span><br><span class=\"line\"><span class=\"string\">        特點：惰性/延遲（迴圈一次/計算一次/返回一次）</span></span><br><span class=\"line\"><span class=\"string\">        生成器函數:yield</span></span><br><span class=\"line\"><span class=\"string\">                如果結果是多個使用yield返回</span></span><br><span class=\"line\"><span class=\"string\">                         單個   return</span></span><br><span class=\"line\"><span class=\"string\">        生成器運算式：(推導式語法)</span></span><br><span class=\"line\"><span class=\"string\">    6. 函數式程式設計</span></span><br><span class=\"line\"><span class=\"string\">        函數作為參數:將核心邏輯傳入函數,從而得到通用的函數.</span></span><br><span class=\"line\"><span class=\"string\">            重點：IterableHelper 集成操作框架</span></span><br><span class=\"line\"><span class=\"string\">        函數作為返回值:邏輯連續</span></span><br><span class=\"line\"><span class=\"string\">            閉包、裝飾器 </span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n","categories":["python"],"tags":["學習筆記"]},{"title":"IO文件讀寫","url":"/2022/06/16/IO%E8%AE%80%E5%AF%AB/","content":"<h2 id=\"檔案處理\"><a href=\"#檔案處理\" class=\"headerlink\" title=\"檔案處理\"></a>檔案處理</h2><h2 id=\"引入\"><a href=\"#引入\" class=\"headerlink\" title=\"引入\"></a>引入</h2><p>檔案是保存在持久化存放裝置(硬碟、U盤、光碟..)上的一段資料，一個文本，一個py 檔，一張圖片，一段視······ 這些都是文件。</p>\n<span id=\"more\"></span>\n<h2 id=\"檔案分類\"><a href=\"#檔案分類\" class=\"headerlink\" title=\"檔案分類\"></a>檔案分類</h2><p>文字檔案：打開後會自動解碼為字元，如txt檔，word檔，py程式檔。 </p>\n<p>二進位檔案：內部編碼為二進位碼，無法通過文字編碼解析，如壓縮包，音訊，視頻，圖片等。</p>\n<p>位元組串類型概念 ： 在python3中引入了位元組串的概念，與str不同，位元組串以位元組序列值表達資料，更方便用來處理二進程資料。 字串與位元組串相互轉化方法</p>\n<blockquote>\n<ul>\n<li>普通的英文字元字串常量可以在前面加b轉換為位元組串，例如：b’hello’</li>\n<li>變數或者包含非英文字元的字串轉換為位元組串方法 ：str.encode() </li>\n<li>位元組串轉換為字串方法 : bytes.decode()</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>注意：python字串用來表達utf8字元，因為並不是所有二進位內容都可以轉化為utf8字元， 所以不是所有位元組串都能 轉化為字串，但是所有字串都能轉化成二進位，所以所有字串都能 轉換為位元組串。</p>\n</blockquote>\n<h2 id=\"檔案讀寫操作\"><a href=\"#檔案讀寫操作\" class=\"headerlink\" title=\"檔案讀寫操作\"></a>檔案讀寫操作</h2><p>使用程式操作檔，無外乎對檔案進行讀或者寫讀 ：即從檔中獲取內容寫 ：即修改檔中的內容對檔案實現讀寫的基本操作步驟為：打開文件，讀寫文件，關閉文件。</p>\n<h2 id=\"打開文件\"><a href=\"#打開文件\" class=\"headerlink\" title=\"打開文件\"></a>打開文件</h2><p>file_object &#x3D; open(file_name, access_mode&#x3D;’r’, buffering&#x3D;-1，encoding&#x3D;None) </p>\n<p>功能：打開一個檔案，返回一個檔案物件。 </p>\n<p>參數：file_name 檔案名</p>\n<p> access_mode 打開檔的方式,如果不寫預設為‘r’ </p>\n<p>buffering 1表示有行緩衝，預設則表示使用系統預設提供的緩衝機制。 </p>\n<p>encoding&#x3D;’UTF-8’ 設置打開檔的編碼方式，一般Linux下不需要 </p>\n<p>返回值：成功返回檔操作物件</p>\n<table>\n<thead>\n<tr>\n<th>打開模式</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>r</td>\n<td>以讀方式打開，檔必須存在</td>\n</tr>\n<tr>\n<td>w</td>\n<td>以寫方式打開，檔不存在則創建，存在清空原有內容</td>\n</tr>\n<tr>\n<td>a</td>\n<td>以追加模式打開，檔不存在則創建，存在則繼續進行寫操作</td>\n</tr>\n<tr>\n<td>r+</td>\n<td>以讀寫模式打開 檔必須存在</td>\n</tr>\n<tr>\n<td>w+</td>\n<td>以讀寫模式打開檔，不存在則創建，存在清空原有內容</td>\n</tr>\n<tr>\n<td>a+</td>\n<td>追加並可讀模式，檔不存在則創建，存在則繼續進行寫操作</td>\n</tr>\n<tr>\n<td>rb</td>\n<td>以二進位讀模式打開 同r</td>\n</tr>\n<tr>\n<td>wb</td>\n<td>以二進位寫模式打開 同w</td>\n</tr>\n<tr>\n<td>ab</td>\n<td>以二進位追加模式打開 同a</td>\n</tr>\n<tr>\n<td>rb+</td>\n<td>以二進位讀寫模式打開 同r+</td>\n</tr>\n<tr>\n<td>wb+</td>\n<td>以二進位讀寫模式打開 同w+</td>\n</tr>\n<tr>\n<td>ab+</td>\n<td>以二進位讀寫模式打開 同a+</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>注意 ： </p>\n<ol>\n<li>以二進位方式打開檔，讀取內容為位元組串，寫入也需要寫入位元組串 </li>\n<li>無論什麼檔都可以使用二進位方式打開，但是二進位檔案則不能以文本方式打開，否則後 續讀寫會報錯。</li>\n</ol>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">文件打開訓練</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># f = open(&#x27;bytes.pyc&#x27;,&#x27;r&#x27;)   #默認r,文件不存在會報錯</span></span><br><span class=\"line\"><span class=\"comment\"># f = open(&#x27;file&#x27;,&#x27;w&#x27;)   #w方式打開，檔內容會被清空</span></span><br><span class=\"line\">f = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;file&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>)    <span class=\"comment\">#a追加方式打開，檔內容不會被清空</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(f)</span><br><span class=\"line\"></span><br><span class=\"line\">f.close()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"讀取文件\"><a href=\"#讀取文件\" class=\"headerlink\" title=\"讀取文件\"></a>讀取文件</h2><p>方法1</p>\n<ul>\n<li>read([size]) 功能：來直接讀取檔中字元。</li>\n<li>參數： 如果沒有給定size參數（預設值為-1）或者size值為負，文件將被讀取直至末尾，給定size最多讀 取給定數目個字元（位元組）。</li>\n<li>返回值： 返回讀取到的內容。</li>\n</ul>\n<blockquote>\n<p>注意：檔過大時候不建議直接讀取到檔結尾，讀到檔結尾會返回空字串</p>\n</blockquote>\n<p>方法2</p>\n<ul>\n<li>readline([size]) 功能： 用來讀取檔中一行。</li>\n<li>參數： 如果沒有給定size參數（預設值為-1）或者size值為負，表示讀取一行，給定size表示最多讀取制 定的字元（位元組）。</li>\n<li>返回值： 返回讀取到的內容。</li>\n</ul>\n<p>方法3</p>\n<ul>\n<li>readlines([sizeint]) 功能： 讀取檔中的每一行作為列表中的一項 。</li>\n<li>參數： 如果沒有給定size參數（預設值為-1）或者size值為負，檔將被讀取直至末尾，給定size表示讀 取到size字元所在行為止。</li>\n<li>返回值： 返回讀取到的內容清單。</li>\n</ul>\n<p>方法4</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 檔案物件本身也是一個可反覆運算物件，在for迴圈中可以反覆運算檔的每一行。</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f:</span><br><span class=\"line\"><span class=\"built_in\">print</span>(line)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">檔讀取演示</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">f = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;file.txt&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 檔讀操作</span></span><br><span class=\"line\"><span class=\"comment\"># data = f.read()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># while True:</span></span><br><span class=\"line\"><span class=\"comment\">#     data = f.read(2)</span></span><br><span class=\"line\"><span class=\"comment\">#     # 避免迴圈會列印很多空字串</span></span><br><span class=\"line\"><span class=\"comment\">#     if not data:</span></span><br><span class=\"line\"><span class=\"comment\">#         break</span></span><br><span class=\"line\"><span class=\"comment\">#     print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># while True:</span></span><br><span class=\"line\"><span class=\"comment\">#     data = f.readline()</span></span><br><span class=\"line\"><span class=\"comment\">#     if not data:</span></span><br><span class=\"line\"><span class=\"comment\">#         break</span></span><br><span class=\"line\"><span class=\"comment\">#     print(data)</span></span><br><span class=\"line\"><span class=\"comment\"># f.close()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># data = f.readlines()</span></span><br><span class=\"line\"><span class=\"comment\"># data = f.readlines(12)</span></span><br><span class=\"line\"><span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(line)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 關閉文件</span></span><br><span class=\"line\">f.close()</span><br></pre></td></tr></table></figure>\n<h2 id=\"寫入文件\"><a href=\"#寫入文件\" class=\"headerlink\" title=\"寫入文件\"></a>寫入文件</h2><p>方法1</p>\n<ul>\n<li>write(data) 功能: 把文本資料或二進位資料塊的字串寫入到檔案中去</li>\n<li>參數：要寫入的內容</li>\n<li>返回值：寫入的字元個數</li>\n</ul>\n<blockquote>\n<p>注意： 如果需要換行要自己在寫入內容中添加\\n</p>\n</blockquote>\n<p>方法2</p>\n<p>writelines(str_list) 功能：接受一個字串清單作為參數，將它們寫入檔。 </p>\n<p>參數: 要寫入的內容清單</p>\n<h2 id=\"關閉文件\"><a href=\"#關閉文件\" class=\"headerlink\" title=\"關閉文件\"></a>關閉文件</h2><p>打開一個檔後我們就可以通過檔物件對檔進行操作了，當操作結束後可以關閉檔操作</p>\n<ul>\n<li>方法</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">file_object.close()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>好處</li>\n</ul>\n<ol>\n<li>可以銷毀物件節省資源，（當然如果不關閉程式結束後物件也會被銷毀）。 </li>\n<li>防止後面對這個物件的誤操作。</li>\n</ol>\n<h2 id=\"with操作\"><a href=\"#with操作\" class=\"headerlink\" title=\"with操作\"></a>with操作</h2><p>python中的with語句也可以用於訪問檔案，在語句塊結束後會自動釋放資源。</p>\n<p>with語句格式:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> context_expression [<span class=\"keyword\">as</span> obj]:</span><br><span class=\"line\">\t<span class=\"keyword\">with</span>-body</span><br></pre></td></tr></table></figure>\n\n<p>with訪問檔案:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;file&#x27;</span>,<span class=\"string\">&#x27;r+&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">\tf.read()</span><br></pre></td></tr></table></figure>\n\n<aside>\n💡 注意 ： with語句塊結束後會自動釋放f所以不再需要close().\n\n</aside>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day01_01_編程四大特點","url":"/2021/12/25/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day01-01-%E7%B7%A8%E7%A8%8B%E5%9B%9B%E5%A4%A7%E7%89%B9%E9%BB%9E/","content":"<h2 id=\"特點一-弱語法-重本質\"><a href=\"#特點一-弱語法-重本質\" class=\"headerlink\" title=\"特點一:弱語法,重本質\"></a>特點一:弱語法,重本質</h2><ul>\n<li><p>是一種弱語法語言規則，注重程序原理的學習過程。</p>\n</li>\n<li><p>語法是表象，只有了解深層機器原理，才能活用。</p>\n</li>\n<li><p>學習編程要深入內存，剖析原理，才能看清語法。</p>\n</li>\n<li><p>就像太極”用意不用力，先在心後再身”的道理。</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<p>(把重點放在本質上，不應該把重點放在外在的表現上)</p>\n<h2 id=\"特點二-重思想-重設計\"><a href=\"#特點二-重思想-重設計\" class=\"headerlink\" title=\"特點二:重思想,重設計\"></a>特點二:重思想,重設計</h2><ul>\n<li><p>思想是解決問題的思維方式，設計指編寫程式結構的過程。</p>\n</li>\n<li><p>通過面相對象三大特徵，六大原則學習設計思想。</p>\n</li>\n</ul>\n<h2 id=\"特點三-是技術-更藝術\"><a href=\"#特點三-是技術-更藝術\" class=\"headerlink\" title=\"特點三:是技術,更藝術\"></a>特點三:是技術,更藝術</h2><ul>\n<li><p>邊程是一門技術,但更是一門藝術。</p>\n</li>\n<li><p>寫出質量高的代碼(功能性、維護姓、靈活性)，享受寫代碼的樂趣。</p>\n</li>\n</ul>\n<h2 id=\"特點四-項目化，實戰化\"><a href=\"#特點四-項目化，實戰化\" class=\"headerlink\" title=\"特點四:項目化，實戰化\"></a>特點四:項目化，實戰化</h2><ul>\n<li><p>想著需求，實作出來</p>\n</li>\n<li><p>多嘗試項目，找到自己有興趣的題目，實行並解決，套用以上三種特點檢視程式的完整性</p>\n</li>\n</ul>\n<h3 id=\"學習方法要正確\"><a href=\"#學習方法要正確\" class=\"headerlink\" title=\"學習方法要正確:\"></a>學習方法要正確:</h3><ul>\n<li><p>What 是甚麼，及理解知識點的定義</p>\n</li>\n<li><p>Why為什麼，及理解知識點的作用</p>\n</li>\n<li><p>Where在哪裡，及理解知識點的適用性</p>\n</li>\n<li><p>How如何使用，及理解知識點的語法</p>\n</li>\n</ul>\n<p><code>最重要的就是第三點(適用性)</code>，其他忘了也沒關西(都能查到)</p>\n<h3 id=\"學習的項目必須整理成筆記\"><a href=\"#學習的項目必須整理成筆記\" class=\"headerlink\" title=\"學習的項目必須整理成筆記:\"></a>學習的項目必須整理成筆記:</h3><ul>\n<li><p>整理所學的內容過程，可複習加強記憶</p>\n</li>\n<li><p>日後遺忘(一定會)或混淆可以回來翻筆記</p>\n</li>\n<li><p>將理論、代碼、圖示三合一，以便觀看喚醒記憶</p>\n</li>\n</ul>\n","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day01_02_計算機基礎結構","url":"/2021/12/25/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day01-02-%E8%A8%88%E7%AE%97%E6%A9%9F%E5%9F%BA%E7%A4%8E%E7%B5%90%E6%A7%8B/","content":"<h2 id=\"硬體\"><a href=\"#硬體\" class=\"headerlink\" title=\"硬體\"></a>硬體</h2><p>1944年，美籍匈牙利數學家馮·諾依曼提出電腦基本結構。</p>\n<p>五大組成部分：運算器、控制器、記憶體、輸入裝置、輸出設備。</p>\n<span id=\"more\"></span>\n<p>雖然計算機因現代飛速發展，但至今為止依然還是使用著馮·諾伊曼的架構<br><a href=\"https://imgur.com/PHMJYIE\"><img src=\"https://i.imgur.com/PHMJYIE.png\" title=\"source: imgur.com\" /></a></p>\n<ul>\n<li><p>運算器：按照程式中的指令，對資料進行加工處理。</p>\n</li>\n<li><p>控制器：根據程式需求，指揮電腦的各個部件協調工作。</p>\n<ul>\n<li><p>通常將運算器和控制器集成在中央處理器（CPU）中</p>\n</li>\n<li><p>CPU相當於人的大腦，操控著整個身體與行為</p>\n</li>\n</ul>\n</li>\n<li><p>記憶體：保存各類程式的資料資訊。<br><a href=\"https://imgur.com/p5KnCOK\"><img src=\"https://i.imgur.com/p5KnCOK.png\" title=\"source: imgur.com\" /></a></p>\n</li>\n<li><p>存儲器：保存各類程序的數據信息。</p>\n<ul>\n<li><p>記憶體RAM – 容量小，速度快，臨時存儲資料</p>\n</li>\n<li><p>硬碟HDD – 容量大，速度慢，永久存儲資料</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://imgur.com/ARMVhwg\"><img src=\"https://i.imgur.com/ARMVhwg.png\" title=\"source: imgur.com\" /></a></p>\n<ul>\n<li><p>輸入裝置：外界向電腦傳送資訊的裝置。<br>  例如：滑鼠、鍵盤、掃描器…  </p>\n</li>\n<li><p>輸出設備：電腦向外界傳送資訊的裝置。\t<br>  例如：顯示器、音響、印表機…</p>\n</li>\n</ul>\n<blockquote>\n<p>(輸入輸出設備也叫做IO設備)</p>\n</blockquote>\n<h3 id=\"硬體總結\"><a href=\"#硬體總結\" class=\"headerlink\" title=\"硬體總結:\"></a>硬體總結:</h3><p>CPU主要是用來處理數據用的，存儲器主要是運行程序要在裡面開空間，程序下載後會放在硬碟裡面</p>\n<p>CPU不會直接去操作硬碟的數據，因為太慢了</p>\n<blockquote>\n<p>過程:<br>CPU —&gt; 存儲器 —&gt; 硬碟</p>\n</blockquote>\n<h2 id=\"軟件\"><a href=\"#軟件\" class=\"headerlink\" title=\"軟件\"></a>軟件</h2><p>沒有軟件的計算機稱之為”裸機”，無法完成任何工作。</p>\n<ol>\n<li><p>作業系統：</p>\n<ul>\n<li><p>管理和控制電腦軟體與硬體資源的程式。</p>\n</li>\n<li><p>隔離不同硬體的差異，使軟體發展簡單化。</p>\n</li>\n<li><p>Windows，Linux，Unix。</p>\n</li>\n</ul>\n</li>\n<li><p>應用軟體：為了某種特定的用途而被開發的軟體。</p>\n<ul>\n<li><p>程式是一組電腦能識別和執行的指令集合。</p>\n</li>\n<li><p>文檔是為了便於瞭解程式所需的說明性資料。</p>\n</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>軟體：程式 + 文檔。</p>\n</blockquote>\n","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day01_03_簡介","url":"/2021/12/26/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day01-03-%E7%B0%A1%E4%BB%8B/","content":"<h2 id=\"Python簡介\"><a href=\"#Python簡介\" class=\"headerlink\" title=\"Python簡介\"></a>Python簡介</h2><p>是一個免費、開源、跨平臺、動態、物件導向的程式設計語言。<br>Python是一種代表簡單主義思想的語言。<br>閱讀一個良好的Python程式就感覺像是在讀英語一樣。它使你能夠專注於解決問題，而不是去搞明白語言本身。 </p>\n<span id=\"more\"></span>\n<h3 id=\"Python背景\"><a href=\"#Python背景\" class=\"headerlink\" title=\"Python背景\"></a>Python背景</h3><p> Python的創始人為： 荷蘭人 【吉多·范羅蘇姆】在1989年耶誕節期間，在阿姆斯特丹 為了打發耶誕節的無趣，決心開發一個新的腳本解釋程式，作為 ABC語言 的一種繼承。之所以選中Python（大蟒蛇的意思）作為該程式設計語言的名字，是取自英國20世紀 70年代首播的電視喜劇《蒙提·派森的飛行馬戲團》（Monty Python’s Flying Circus）。<br><a href=\"https://imgur.com/QfkcTtF\"><img src=\"https://i.imgur.com/QfkcTtF.png\" title=\"source: imgur.com\" /></a></p>\n<h3 id=\"免費開源\"><a href=\"#免費開源\" class=\"headerlink\" title=\"免費開源\"></a>免費開源</h3><p>免費：就是完全提供給用戶使用，但是原始程式碼不一定公開<br>開源：開放原始程式碼，允許使用者拷貝、改動、著作，正因如此所以衍生出來很多 Python強大的模組。 </p>\n<ul>\n<li>圖像介面開發：wxPython、pyqt、tkinter </li>\n<li>辦公自動化：openpyxl、python-docx、pyPDF2 </li>\n<li>web開發：Django、Flask </li>\n<li>遊戲開發：pygame、Panda3D </li>\n<li>網路爬蟲：requests、Scrapy </li>\n<li>資料分析：pandas、numpy、scipy </li>\n<li>資料採擷：NLTK、Gensim </li>\n<li>人工智慧：TensorFlow、sklearn、keras </li>\n<li>自動化測試：Robot Framework、Pytest、UnitTest、Behave、Lettuce<blockquote>\n<p>世界程式設計語言排行榜： <a href=\"https://www.tiobe.com/tiobe-index\">https://www.tiobe.com/tiobe-index</a><br>(排行榜排序會一直變動)</p>\n</blockquote>\n</li>\n</ul>\n<p>那要怎麼用呢?  Python有兩種執行方式互動式與文件式<br>如果希望在Windows系統上，操作Linux做開發，我們需要使用虛擬機</p>\n<h2 id=\"Python程式的執行方式分為兩種\"><a href=\"#Python程式的執行方式分為兩種\" class=\"headerlink\" title=\"Python程式的執行方式分為兩種\"></a>Python程式的執行方式分為兩種</h2><h3 id=\"互動式\"><a href=\"#互動式\" class=\"headerlink\" title=\"互動式:\"></a>互動式:</h3><p>缺點：執行的語句會隨著交互環境的關閉而消失。<br>優點：簡單的代碼可以在終端中執行。<br>在命令行輸入指令，輸入鍵即可得到結果。</p>\n<p>(以下虛擬機畫面)<br><a href=\"https://imgur.com/O1H0j8i\"><img src=\"https://i.imgur.com/O1H0j8i.png\" title=\"source: imgur.com\" /></a></p>\n<ol>\n<li><p>打開終端機<br><a href=\"https://imgur.com/8lMQyeH\"><img src=\"https://i.imgur.com/8lMQyeH.png\" title=\"source: imgur.com\" /></a></p>\n</li>\n<li><p>進入交互式：<code>python3</code><br><a href=\"https://imgur.com/zl1GPOg\"><img src=\"https://i.imgur.com/zl1GPOg.png\" title=\"source: imgur.com\" /></a></p>\n</li>\n<li><p>編寫代碼：<code>print(“hello world”)</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello world&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://imgur.com/VdWdV1X\"><img src=\"https://i.imgur.com/VdWdV1X.png\" title=\"source: imgur.com\" /></a></p>\n</li>\n<li><p>離開交互式：<code>exit()</code><br><a href=\"https://imgur.com/TI7xbMc\"><img src=\"https://i.imgur.com/TI7xbMc.png\" title=\"source: imgur.com\" /></a></p>\n</li>\n</ol>\n<p>也可以進行一些簡單運算(例如:1+2&#x3D;3…<br>只要前面有<strong>三個箭頭</strong>就代表是互動式Python<br><a href=\"https://imgur.com/k2aXaUf\"><img src=\"https://i.imgur.com/k2aXaUf.png\" title=\"source: imgur.com\" /></a></p>\n<h3 id=\"文件式-需要多行代碼-主要創建代碼的地方\"><a href=\"#文件式-需要多行代碼-主要創建代碼的地方\" class=\"headerlink\" title=\"文件式(需要多行代碼)(主要創建代碼的地方):\"></a>文件式(需要多行代碼)(主要創建代碼的地方):</h3><p>將指令編寫到.py文件，可以重覆運行程序。</p>\n<ol>\n<li><p>編寫檔案。</p>\n</li>\n<li><p>打開終端機</p>\n</li>\n<li><p>進入程序所在目錄：cd 目錄</p>\n</li>\n<li><p>執行程序： python3 檔案名</p>\n</li>\n</ol>\n<h2 id=\"Linux常用命令\"><a href=\"#Linux常用命令\" class=\"headerlink\" title=\"Linux常用命令\"></a>Linux常用命令</h2><ul>\n<li><p>pwd：查看當前工作目錄的路徑</p>\n</li>\n<li><p>ls：查看指定目錄的內容或檔資訊</p>\n</li>\n<li><p>cd：改變工作目錄（進入到某個目錄）</p>\n</li>\n<li><p>touch ：創建文件 ( 不能右鍵創建文件，就使用touch )</p>\n</li>\n</ul>\n<h2 id=\"執行過程\"><a href=\"#執行過程\" class=\"headerlink\" title=\"執行過程\"></a>執行過程</h2><p><a href=\"https://imgur.com/UB40pfu\"><img src=\"https://i.imgur.com/UB40pfu.png\" title=\"source: imgur.com\" /></a><br>計算機只能識別機器碼 (1010)，不能識別源代碼(python)。<br>由源代碼轉變成機器碼的過程分成兩類：編譯和解釋。</p>\n<ol>\n<li><p>編譯：在程式運行之前，通過編譯器將源代碼變成機器碼，例如：C語言。</p>\n<ul>\n<li><p>優點：運行速度快</p>\n</li>\n<li><p>缺點：開發效率低，不能跨平臺。</p>\n</li>\n</ul>\n</li>\n<li><p>解釋：在程式運行之時，通過解釋器對程式逐行翻譯，然後執行。例如Javascript</p>\n<ul>\n<li><p>優點：開發效率高，可以跨平臺；</p>\n</li>\n<li><p>缺點：運行速度慢。</p>\n</li>\n</ul>\n</li>\n<li><p>python是解釋型語言，但為了提高運行速度，使用了一種編譯的方法。<br> 編譯之後得到pyc檔，存儲了字節碼（特定於Python的表現形式，不是機器碼）。</p>\n<blockquote>\n<p>源代碼 – 編譯 –&gt; 字節碼 – 解釋 –&gt; 機器碼<br>|————1次———|</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"解釋器類型\"><a href=\"#解釋器類型\" class=\"headerlink\" title=\"解釋器類型\"></a>解釋器類型</h2><ol>\n<li>CPython（C語言開發)</li>\n<li>Jython (java開發)</li>\n<li>IronPython (.net開發)</li>\n</ol>\n","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day01_04_建置檔案","url":"/2021/12/26/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day01-04-%E5%BB%BA%E7%BD%AE%E6%AA%94%E6%A1%88/","content":"<h2 id=\"基礎知識\"><a href=\"#基礎知識\" class=\"headerlink\" title=\"基礎知識\"></a>基礎知識</h2><p>使用pycharm是一個專門寫python的軟體(集成開發工具)。<br>熟悉快捷鍵可以加速寫程式的速度。</p>\n<span id=\"more\"></span>\n<p><a href=\"https://imgur.com/abUkZ9a\"><img src=\"https://i.imgur.com/abUkZ9a.png\" title=\"source: imgur.com\" /></a></p>\n<p>打開pycharm創建一個New Project<br><a href=\"https://imgur.com/167P3xn\"><img src=\"https://i.imgur.com/167P3xn.png\" title=\"source: imgur.com\" /></a></p>\n<p>看自己的python檔案要放在哪裡<br><a href=\"https://imgur.com/PojpDP9\"><img src=\"https://i.imgur.com/PojpDP9.png\" title=\"source: imgur.com\" /></a></p>\n<ul>\n<li><p>Interpreter &#x3D; 解釋器</p>\n</li>\n<li><p>New environment using Virtualenv &#x3D; 使用虛擬解釋器</p>\n</li>\n<li><p>Previously configured interpreter &#x3D; 內置解釋器</p>\n</li>\n</ul>\n<p>現在還用不到虛擬解釋器，使用內置解釋器就好<br><a href=\"https://imgur.com/bZX4tEq\"><img src=\"https://i.imgur.com/bZX4tEq.png\" title=\"source: imgur.com\" /></a></p>\n<p>在資料夾按右鍵顯示選單可以選擇Directory創建資料夾，Python File創建文件</p>\n<ul>\n<li><p>File：表示普通檔（類似windows系統下的txt）</p>\n</li>\n<li><p>Directory ：表示目錄（資料夾）：方便文件管理</p>\n</li>\n<li><p>Python Package ：表示Python 包</p>\n</li>\n<li><p>Python File ：表示Python檔（常用）</p>\n</li>\n<li><p>HTML File：表示HTML檔（屬於前端開發時使用）<br><a href=\"https://imgur.com/gKPlbLt\"><img src=\"https://i.imgur.com/gKPlbLt.png\" title=\"source: imgur.com\" /></a></p>\n</li>\n</ul>\n<p>創建好資料夾與文件<br><a href=\"https://imgur.com/qB8VqCH\"><img src=\"https://i.imgur.com/qB8VqCH.png\" title=\"source: imgur.com\" /></a></p>\n<p>打一段程式，運行不需要到終端，直接右鍵點擊Run 檔案名或是<code>Ctrl+Shift+F10</code>，就會運行程式，關閉運行也很簡單只要<code>Ctrl+Shift+F4</code>就可以關閉<br><a href=\"https://imgur.com/kF57D4J\"><img src=\"https://i.imgur.com/kF57D4J.png\" title=\"source: imgur.com\" /></a></p>\n<h3 id=\"運行視窗介紹-在運行後最下面顯示\"><a href=\"#運行視窗介紹-在運行後最下面顯示\" class=\"headerlink\" title=\"運行視窗介紹 (在運行後最下面顯示)\"></a>運行視窗介紹 (在運行後最下面顯示)</h3><ul>\n<li><p>Terminal ：終端（用於輸入 Linux命令 ）</p>\n</li>\n<li><p>Python Console ： Python 控制台（用於輸入Python語句，類似Python互動環境）</p>\n</li>\n<li><p>Run ：運行（用於檔運行的結果輸出）</p>\n</li>\n<li><p>Debug ：調試（用於分步調試代碼 )<br><a href=\"https://imgur.com/uQ8jJn7\"><img src=\"https://i.imgur.com/uQ8jJn7.png\" title=\"source: imgur.com\" /></a></p>\n</li>\n</ul>\n<p>可以調整字體大小間距，點擊左上角的File，再按Settings會顯示以下視窗<br><a href=\"https://imgur.com/GEeCuNY\"><img src=\"https://i.imgur.com/GEeCuNY.png\" title=\"source: imgur.com\" /></a></p>\n<h2 id=\"pycharm常用快捷鍵\"><a href=\"#pycharm常用快捷鍵\" class=\"headerlink\" title=\"pycharm常用快捷鍵\"></a>pycharm常用快捷鍵</h2><blockquote>\n<p>(快捷鍵是考察會不會pycharm的標準)</p>\n</blockquote>\n<ol>\n<li>移動到本行開頭：home鍵</li>\n<li>移動到本行末尾：end鍵</li>\n<li>刪除游標所在行：Ctrl + Y</li>\n<li>註解代碼：ctrl + &#x2F;</li>\n<li>複製行：ctrl +d</li>\n<li>選擇列：滑鼠左鍵+ alt</li>\n<li>移動行：shift + ctrl + 上下箭頭</li>\n<li>系統提示：ctrl + space</li>\n<li>代碼格式化：ctrl+alt+L(整理每行代碼的位置)</li>\n<li>刪除行: Shift + del</li>\n<li>在游標所在行下新起一行：Shift + Enter</li>\n<li>縮進&#x2F;反縮進：Tab&#x2F;Shift + Tab</li>\n<li>替換：Ctrl + R</li>\n<li>重構函數&#x2F;變量：shift+F6 </li>\n<li>如有一大段代碼須變成函數,能立即切分：control+alt+M</li>\n<li>創建參數 (鼠標要在字上面)：alt+return </li>\n<li>可以重寫函數：control+o</li>\n</ol>\n","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day01_05_數據基本運算","url":"/2021/12/26/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day01-05-%E6%95%B8%E6%93%9A%E5%9F%BA%E6%9C%AC%E9%81%8B%E7%AE%97/","content":"<h2 id=\"創建第一個代碼\"><a href=\"#創建第一個代碼\" class=\"headerlink\" title=\"創建第一個代碼\"></a>創建第一個代碼</h2><p>先找到功能再去實現</p>\n<span id=\"more\"></span>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">匯率轉換</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 1.獲取數據 --&gt; 美元</span></span><br><span class=\"line\">usd = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入美元：&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 2.獲取數據 --&gt; 美元 --&gt;台幣</span></span><br><span class=\"line\">rmb = <span class=\"built_in\">float</span>(usd) * <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"comment\"># 3.獲取數據 --&gt; 美元</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;台幣是：&quot;</span> + <span class=\"built_in\">str</span>(rmb))</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意<br>1.程式是改出來的，不是寫出來的<br>2.寫程式時，從右往左，從上往下</p>\n</blockquote>\n<h3 id=\"終端畫面\"><a href=\"#終端畫面\" class=\"headerlink\" title=\"終端畫面\"></a>終端畫面</h3><p><a href=\"https://imgur.com/F6s0ZYq\"><img src=\"https://i.imgur.com/F6s0ZYq.png\" title=\"source: imgur.com\" /></a></p>\n<h3 id=\"input函數介紹\"><a href=\"#input函數介紹\" class=\"headerlink\" title=\"input函數介紹\"></a>input函數介紹</h3><p>場景: 輸入或錄入資料<br>格式: 變數名 &#x3D; input(‘提示資訊’)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># data = input()</span></span><br><span class=\"line\"><span class=\"comment\"># print(&#x27;您輸入的資料是:&#x27;, data)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1 推薦添加提示資訊: input函數中添加一個字串</span></span><br><span class=\"line\"><span class=\"comment\"># 2 一直(阻塞)等待用戶的輸入</span></span><br><span class=\"line\">data = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入您的密碼:&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;您輸入的資料是:&#x27;</span>, data)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"shift-註解\"><a href=\"#shift-註解\" class=\"headerlink\" title=\"shift 註解\"></a>shift 註解</h3><blockquote>\n<p>給人看的，通常是對程式的描述資訊。</p>\n</blockquote>\n<ol>\n<li><p>單行註解：以#號開頭。</p>\n</li>\n<li><p>多行註解：三引號開頭，三引號結尾。</p>\n</li>\n</ol>\n<h2 id=\"函數\"><a href=\"#函數\" class=\"headerlink\" title=\"函數\"></a>函數</h2><ul>\n<li><p>表示一個功能，函數定義者是提供功能的人，函數調用者是使用功能的人。</p>\n</li>\n<li><p>只要有<strong>小括號</strong>就叫函數</p>\n</li>\n</ul>\n<p>例如：</p>\n<ol>\n<li>print(數據) 作用：將括號中的內容顯示在控制台中</li>\n<li>變量 &#x3D; input(“需要顯示的內容”) 作用：將用戶輸入的內容賦值給變量</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># = ：賦值號，將右邊的數據給左邊</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字面意思：輸入(提示資訊)</span></span><br><span class=\"line\"><span class=\"comment\"># 參數：提示資訊</span></span><br><span class=\"line\"><span class=\"comment\"># 返回值：實際輸入的結果</span></span><br><span class=\"line\"><span class=\"comment\"># 作用：在終端中獲取使用者輸入的資訊</span></span><br><span class=\"line\">name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入姓名:&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字面意思：列印(需要列印的資訊)</span></span><br><span class=\"line\"><span class=\"comment\"># 參數：需要列印的資訊</span></span><br><span class=\"line\"><span class=\"comment\"># 返回值：空</span></span><br><span class=\"line\"><span class=\"comment\"># 作用：在終端中顯示資訊</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;您好：&quot;</span> + name)</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://imgur.com/N6jnOcX\"><img src=\"https://i.imgur.com/N6jnOcX.png\" title=\"source: imgur.com\" /></a></p>\n<h3 id=\"練習\"><a href=\"#練習\" class=\"headerlink\" title=\"練習:\"></a>練習:</h3><p>效果：在終端中提示使用者輸入武器的名稱<br>           再提示用戶輸入武器的攻擊力<br>           最後顯示：  xx的攻擊力是xx</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">weapon = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入武器名稱：&quot;</span>)</span><br><span class=\"line\">atk = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入攻擊力：&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(weapon + <span class=\"string\">&quot;的攻擊力是&quot;</span> + atk)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"答案：\"><a href=\"#答案：\" class=\"headerlink\" title=\"答案：\"></a>答案：</h3><p><a href=\"https://imgur.com/sjFZw3y\"><img src=\"https://i.imgur.com/sjFZw3y.png\" title=\"source: imgur.com\" /></a></p>\n<h2 id=\"輸出函數\"><a href=\"#輸出函數\" class=\"headerlink\" title=\"輸出函數\"></a>輸出函數</h2><p>功能： 將一系列值以字串的形式輸出到標準輸出設備上(預設為終端)<br>格式： 參數： value：表示要輸出的內容，可以有0個、1個或多個。<br>sep：分割符，兩個值或兩個以上值的分隔方式，預設為一個空格 ‘’ “<br>end：結束符，資料輸出完畢末尾追加的字串，預設為分行符號‘\\n’，設置 end&#x3D;’’ 表示不換行<br>返回值： 無 </p>\n<h3 id=\"說明：\"><a href=\"#說明：\" class=\"headerlink\" title=\"說明：\"></a>說明：</h3><ol>\n<li><p>sep 表示2個或2個以上資料內容之間的分隔方式，對單個資料無效。 </p>\n</li>\n<li><p>要實現不換行只需將end 的 \\n 修改為其他字元。 3、end參數與sep參數設置無先後順序。</p>\n</li>\n</ol>\n<h3 id=\"練習-1\"><a href=\"#練習-1\" class=\"headerlink\" title=\"練習:\"></a>練習:</h3><p>‘’’列印古詩：<br>鵝，鵝，鵝，<br>曲項向天歌；<br>白毛浮綠水，<br>紅掌撥清波。’’’</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 寫法1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;鵝，鵝，鵝，&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;曲項向天歌；&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;白毛浮綠水，&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;紅掌撥清波。&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 寫法2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;鵝，鵝，鵝，&#x27;</span>,<span class=\"string\">&#x27;曲項向天歌；&#x27;</span>,<span class=\"string\">&#x27;白毛浮綠水，&#x27;</span>,<span class=\"string\">&#x27;紅掌撥清波。&#x27;</span>,sep=<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"變量\"><a href=\"#變量\" class=\"headerlink\" title=\"變量\"></a>變量</h2><ul>\n<li><p>想在內存操作數據，就要使用到變量</p>\n</li>\n<li><p>變量都會有自己的內存地址</p>\n</li>\n<li><p>變數定義<code>見名知意</code></p>\n</li>\n<li><p>類型變數名無資料類型，其資料類型由賦值運算式決定（動態）</p>\n</li>\n</ul>\n<ol>\n<li><p>定義：關聯一個對象的標誌符。</p>\n</li>\n<li><p>命名：必須是字母或下劃線開頭，後跟字母、數字、下劃線。</p>\n</li>\n</ol>\n<ul>\n<li><p>不能使用<font color=#0000FF>關鍵字(藍色)</font>，否則發生語法錯誤：SyntaxError: invalid syntax。</p>\n</li>\n<li><p>建議命名：字母小寫，多個單字以下劃線隔開。</p>\n</li>\n<li><p>class_name</p>\n</li>\n</ul>\n<ol start=\"3\">\n<li><p>賦值：創建一個變量或改變一個變量關聯的數據。</p>\n</li>\n<li><p>語法：變量名 &#x3D; 數據</p>\n</li>\n</ol>\n<ul>\n<li><p>變量名1 &#x3D; 變量名2 &#x3D; 數據</p>\n</li>\n<li><p>變量名1, 變量名2, &#x3D; 數據1, 數據2</p>\n</li>\n<li><p>作用</p>\n<ol>\n<li><p>沒有此變數時，創建一個變數，綁定到關聯的資料物件上</p>\n</li>\n<li><p>變數存在時，改變此變數綁定的資料物件</p>\n</li>\n<li><p>用變數訪問此變數關聯的物件</p>\n</li>\n</ol>\n</li>\n<li><p>說明</p>\n<ol>\n<li><p>使用變數前需要先賦值 </p>\n</li>\n<li><p>一個變數只能綁定在一個物件上 </p>\n</li>\n<li><p>一個物件上可以關聯多個變數</p>\n</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 引入</span></span><br><span class=\"line\"><span class=\"comment\"># print(&#x27;hello 龜叔&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 命名規則</span></span><br><span class=\"line\"><span class=\"comment\"># A）由數位、字母、底線組成</span></span><br><span class=\"line\"><span class=\"comment\"># 正確:aa</span></span><br><span class=\"line\"><span class=\"comment\"># 錯誤:$100   python-nice</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># B）不能以數字開頭</span></span><br><span class=\"line\"><span class=\"comment\"># 錯誤:3kyou</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># C）嚴格區分大小寫</span></span><br><span class=\"line\"><span class=\"comment\"># 正確:a   A     (2個變數)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># D）不能使用Python關鍵字</span></span><br><span class=\"line\"><span class=\"comment\"># 瞭解: 深藍色加粗</span></span><br><span class=\"line\"><span class=\"comment\"># import keyword</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print(keyword.kwlist)</span></span><br><span class=\"line\"><span class=\"comment\"># print(len(keyword.kwlist))   # 33</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># False</span></span><br><span class=\"line\"><span class=\"comment\"># True</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># E）不能使用使用Python內置函數名</span></span><br><span class=\"line\"><span class=\"comment\"># 識別: 藍色</span></span><br><span class=\"line\"><span class=\"comment\"># print = 3</span></span><br><span class=\"line\"><span class=\"comment\"># print(dir(__builtins__))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一定不推薦</span></span><br><span class=\"line\"><span class=\"comment\"># 姓名 = &#x27;沉沉&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># print(姓名)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 變數賦值</span></span><br><span class=\"line\"><span class=\"comment\"># words = &#x27;hello python&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># print(words)</span></span><br><span class=\"line\"><span class=\"comment\"># print(words)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(number)  # 變數使用前需要先賦值</span></span><br><span class=\"line\"></span><br><span class=\"line\">age = <span class=\"number\">16</span>     <span class=\"comment\"># 創建了變數age,並賦值16</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;今年的年齡為:&#x27;</span>, age)</span><br><span class=\"line\"></span><br><span class=\"line\">age = <span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;今年的年齡為:&#x27;</span>, age)</span><br><span class=\"line\"></span><br><span class=\"line\">age1 = <span class=\"number\">30</span></span><br><span class=\"line\">age2 = age1</span><br><span class=\"line\"><span class=\"built_in\">print</span>(age1, age2)</span><br><span class=\"line\"></span><br><span class=\"line\">age1 = age2 = <span class=\"number\">40</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(age1, age2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">person_name = <span class=\"string\">&quot;陳冰冰&quot;</span></span><br><span class=\"line\">class_name = <span class=\"string\">&quot;2356&quot;</span></span><br><span class=\"line\">person_name = <span class=\"string\">&quot;冰冰&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(person_name) <span class=\"comment\">#第一行代碼會被蓋掉</span></span><br><span class=\"line\"></span><br><span class=\"line\">name01 = name02 = <span class=\"string\">&quot;悟空&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">student01, student02 = <span class=\"string\">&quot;蘇大強&quot;</span>, <span class=\"string\">&quot;蘇明玉&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">del</span> name01, name02</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"del-語句\"><a href=\"#del-語句\" class=\"headerlink\" title=\"del 語句\"></a>del 語句</h2><ol>\n<li>語法:</li>\n</ol>\n<ul>\n<li>del 變量名1, 變量名2</li>\n</ul>\n<ol start=\"2\">\n<li>作用：</li>\n</ol>\n<ul>\n<li><p>用於刪除變量,同時解除與對向的關聯.如果可能則釋放對象。</p>\n</li>\n<li><p>說明：變數存在會佔用電腦記憶體空間。</p>\n</li>\n</ul>\n<ol start=\"3\">\n<li>引用計數：</li>\n</ol>\n<ul>\n<li>當一個pyhton物件被引用時其引用計數增加1，當其不再被引用時引用計數減1，當引用計數為0時，則物件就被刪除</li>\n</ul>\n<h3 id=\"刪除變量\"><a href=\"#刪除變量\" class=\"headerlink\" title=\"刪除變量\"></a>刪除變量</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">10</span></span><br><span class=\"line\">b = <span class=\"number\">20</span></span><br><span class=\"line\">c = <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a, b, c)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">del</span> a</span><br><span class=\"line\"><span class=\"keyword\">del</span> b, c</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a, b, c)</span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"number\">10</span></span><br><span class=\"line\">b = <span class=\"number\">10</span></span><br><span class=\"line\">c = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">del</span> a</span><br><span class=\"line\"><span class=\"keyword\">del</span> b, c</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a, b, c)</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://imgur.com/vdKZ3kr\"><img src=\"https://i.imgur.com/vdKZ3kr.png\" title=\"source: imgur.com\" /></a></p>\n<h2 id=\"畫出下列代碼內存圖：\"><a href=\"#畫出下列代碼內存圖：\" class=\"headerlink\" title=\"畫出下列代碼內存圖：\"></a>畫出下列代碼內存圖：</h2><p>teacher_of_month01 &#x3D; “qtx”<br>teacher_of_month01 &#x3D; “QTX”<br>teacher_of_month02 &#x3D; “lz”<br>teacher_of_month03 &#x3D; teacher_of_month02<br>teacher_of_month02 &#x3D; “lzmly”<br>print(teacher_of_month03)</p>\n<p>del teacher_of_month01<br><a href=\"https://imgur.com/zdBozQ0\"><img src=\"https://i.imgur.com/zdBozQ0.png\" title=\"source: imgur.com\" /></a></p>\n","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day01_06_核心數據類型","url":"/2021/12/26/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day01-06-%E6%A0%B8%E5%BF%83%E6%95%B8%E6%93%9A%E9%A1%9E%E5%9E%8B/","content":"<h2 id=\"核心資料類型\"><a href=\"#核心資料類型\" class=\"headerlink\" title=\"核心資料類型\"></a>核心資料類型</h2><ol>\n<li>在python中變數沒有類型，但關聯的物件有類型。</li>\n<li>通過type函數可查看。<span id=\"more\"></span></li>\n</ol>\n<h3 id=\"空值對象-None\"><a href=\"#空值對象-None\" class=\"headerlink\" title=\"空值對象 None\"></a>空值對象 None</h3><ol>\n<li>表示不存在的特殊物件。</li>\n<li>作用：占位元和解除與對象的關聯。</li>\n</ol>\n<h3 id=\"整形int\"><a href=\"#整形int\" class=\"headerlink\" title=\"整形int\"></a>整形int</h3><ul>\n<li>表示整數，包含正數、負數、0。<br>如： -5, 100, 0</li>\n</ul>\n<ol>\n<li>字面值：<ul>\n<li>十進位：5</li>\n<li>二進位：0b開頭，後跟1或者1</li>\n<li>八進制：0o開頭，後跟0~7</li>\n<li>十六進位：0x開頭，後跟0<del>9,A</del>F,a~f</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"浮點型float\"><a href=\"#浮點型float\" class=\"headerlink\" title=\"浮點型float\"></a>浮點型float</h3><ol>\n<li>表示小數，包含正數、負數，0)。</li>\n<li>字面值：<ul>\n<li>小數：1.0   2.5</li>\n<li>科學計數法：e&#x2F;E (正負號) 指數</li>\n<li>1.23e-2 (等同於0.0123)</li>\n<li>1.23456e5(等同於123456.0)</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"字串str\"><a href=\"#字串str\" class=\"headerlink\" title=\"字串str\"></a>字串str</h3><p>是用來記錄文本資訊(文字資訊)。</p>\n<ul>\n<li>字面值：雙引號</li>\n</ul>\n<h3 id=\"複數complex\"><a href=\"#複數complex\" class=\"headerlink\" title=\"複數complex\"></a>複數complex</h3><ul>\n<li>由實部和虛部組成的數位。</li>\n<li>虛部是以j或J結尾。</li>\n<li>字面值： 1j     1+1j   1-1j</li>\n<li>語法格式：<ul>\n<li>實部係數 + 虛部係數j &#x2F; 實部係數 + 虛部係數J</li>\n<li>說明：實部係數可以沒有，虛部係數不能不存在，沒有可以用0表示<br>範例 :<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">3.4</span>+<span class=\"number\">5j</span></span><br><span class=\"line\">Out[<span class=\"number\">7</span>]: (<span class=\"number\">3.4</span>+<span class=\"number\">5j</span>)</span><br><span class=\"line\"><span class=\"number\">4.6J</span></span><br><span class=\"line\">Out[<span class=\"number\">8</span>]: <span class=\"number\">4.6j</span></span><br><span class=\"line\"><span class=\"built_in\">type</span>(<span class=\"number\">4.6J</span>)</span><br><span class=\"line\">Out[<span class=\"number\">9</span>]: <span class=\"built_in\">complex</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"布林bool\"><a href=\"#布林bool\" class=\"headerlink\" title=\"布林bool\"></a>布林bool</h3><ul>\n<li>用來表示真和假的類型</li>\n<li>True 表示真(條件滿足或成立)，本質是1</li>\n<li>False 表示假(條件不滿足或不成立)，本質是0</li>\n<li>True、False 關鍵字首字母大寫。</li>\n</ul>\n<h2 id=\"總範例\"><a href=\"#總範例\" class=\"headerlink\" title=\"總範例:\"></a>總範例:</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">name = <span class=\"string\">&quot;lzmly&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 1. None 空</span></span><br><span class=\"line\"><span class=\"comment\"># -- 占位：只希望有一個變數，但指向的物件還不能確定.</span></span><br><span class=\"line\">skill = <span class=\"literal\">None</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">skill = <span class=\"string\">&quot;乾坤大挪移&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -- 解除與物件的綁定關係</span></span><br><span class=\"line\">name = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 整形(整數)  int</span></span><br><span class=\"line\"><span class=\"comment\"># 字面值</span></span><br><span class=\"line\"><span class=\"comment\"># -- 十進位：0 1 2 3 ...9 10</span></span><br><span class=\"line\">number01 = -<span class=\"number\">1</span></span><br><span class=\"line\">number01 = <span class=\"number\">1</span></span><br><span class=\"line\">number01 = <span class=\"number\">0</span></span><br><span class=\"line\">b = <span class=\"string\">&#x27;10&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a, <span class=\"built_in\">type</span>(a))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(b, <span class=\"built_in\">type</span>(b))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -- 二進位：0 1 10  11  100  101 ..</span></span><br><span class=\"line\">number02 = <span class=\"number\">0b10</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(number02)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -- 八進制：0 1 2 3 ... 7  10</span></span><br><span class=\"line\">number03 = <span class=\"number\">0o10</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(number03)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -- 十六進位：0 --9  a(10) -- f(15)  10   11</span></span><br><span class=\"line\">number04 = <span class=\"number\">0x11</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(number04)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 浮點數型 - float (描述小數)</span></span><br><span class=\"line\">b = <span class=\"number\">3.14</span>     <span class=\"comment\"># 字面值</span></span><br><span class=\"line\">b = -<span class=\"number\">3.14</span></span><br><span class=\"line\">b = <span class=\"number\">0.0</span></span><br><span class=\"line\">b = <span class=\"number\">23E10</span>    <span class=\"comment\"># 極大數(科學計數法)  23乘以10的10次方</span></span><br><span class=\"line\">b = <span class=\"number\">23e-5</span>    <span class=\"comment\"># 極小數(科學計數法)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(b, <span class=\"built_in\">type</span>(b))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 科學計數法</span></span><br><span class=\"line\">number06 = <span class=\"number\">5e3</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(number06)</span><br><span class=\"line\"></span><br><span class=\"line\">number07 = <span class=\"number\">0.00000000000000000005</span></span><br><span class=\"line\">number07 = <span class=\"number\">500000000000000000000.0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(number07)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 字串(文字)  str</span></span><br><span class=\"line\">name = <span class=\"string\">&quot;lzmly&quot;</span></span><br><span class=\"line\">str_number = <span class=\"string\">&quot;1000&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 布林類型 - bool (描述邏輯關係-成立/不成立)</span></span><br><span class=\"line\"><span class=\"comment\"># 取值: True(成立,數值為1)/False(不成立,數值為0)</span></span><br><span class=\"line\">d = <span class=\"number\">1</span> &gt; <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(d, <span class=\"built_in\">type</span>(d))</span><br><span class=\"line\"></span><br><span class=\"line\">number01 = <span class=\"number\">5</span></span><br><span class=\"line\">number02 = <span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(number01 &gt; number02)  <span class=\"comment\"># 5 &gt; 8 False</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(number01 &lt; number02)  <span class=\"comment\"># 5 &lt; 8 True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(number01 == number02)  <span class=\"comment\"># 5 == 8 False</span></span><br><span class=\"line\"><span class=\"comment\"># print(5 &gt; &quot;10&quot;)  # 不能用整數與字串進行大小的比較</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">5</span> == <span class=\"string\">&quot;5&quot;</span>)  <span class=\"comment\"># False  類型不一樣</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 空值物件 - None  (描述特殊不存在的物件)</span></span><br><span class=\"line\"><span class=\"comment\"># 作用: 占位元或解除與物件的關聯關係</span></span><br><span class=\"line\">a = <span class=\"literal\">None</span>        <span class=\"comment\"># 佔用</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"literal\">None</span>        <span class=\"comment\"># 解除</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># input函數</span></span><br><span class=\"line\"><span class=\"comment\"># 返回值的類型: 字串(str)</span></span><br><span class=\"line\">data = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入您的密碼:&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;密碼是:&#x27;</span>, data, <span class=\"built_in\">type</span>(data))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 數學運算</span></span><br><span class=\"line\">result = <span class=\"number\">1000</span> + <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\"># 文字拼接</span></span><br><span class=\"line\">result = <span class=\"string\">&quot;1000&quot;</span> + <span class=\"string\">&quot;1&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 資料類型轉換</span></span><br><span class=\"line\"><span class=\"comment\"># input函數的返回值永遠都是字串類型</span></span><br><span class=\"line\">str_number = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入一個數字：&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># str --&gt; int</span></span><br><span class=\"line\"><span class=\"comment\"># print(type(變數)) --&gt; 獲取變數所關聯的物件類型</span></span><br><span class=\"line\"><span class=\"comment\"># re = int(str_number)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># str --&gt; float</span></span><br><span class=\"line\">re = <span class=\"built_in\">float</span>(str_number)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(re))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意：int()轉換時，資料必須像整數</span></span><br><span class=\"line\"><span class=\"comment\"># 注意：float()轉換時，資料必須像小數</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 其他類型 --&gt; str</span></span><br><span class=\"line\">re = <span class=\"built_in\">str</span>(<span class=\"number\">100.6</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"序列賦值\"><a href=\"#序列賦值\" class=\"headerlink\" title=\"序列賦值\"></a>序列賦值</h2><ul>\n<li>場景:資料交換</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 現有變數 a=30, b=60，通過程式實現變數值的交換：a=60,  b=30</span></span><br><span class=\"line\">a = <span class=\"number\">30</span></span><br><span class=\"line\">b = <span class=\"number\">60</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 普通方法</span></span><br><span class=\"line\">c = a</span><br><span class=\"line\">a = b</span><br><span class=\"line\">b = c</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a, b)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 序列賦值</span></span><br><span class=\"line\">b, a = a, b  <span class=\"comment\"># b, a = 30, 60</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a, b)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意:</span></span><br><span class=\"line\"><span class=\"comment\"># 變數名個數小於資料物件個數(不可以)</span></span><br><span class=\"line\">x, y = <span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(x, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 變數名個數大於資料物件個數(不可以)</span></span><br><span class=\"line\">x, y, z, q = <span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(x, y)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"序列賦值內存圖\"><a href=\"#序列賦值內存圖\" class=\"headerlink\" title=\"序列賦值內存圖\"></a>序列賦值內存圖</h3><p><a href=\"https://imgur.com/zdBozQ0\"><img src=\"https://i.imgur.com/zdBozQ0.png\" title=\"source: imgur.com\" /></a></p>\n<h2 id=\"資料類型轉換\"><a href=\"#資料類型轉換\" class=\"headerlink\" title=\"資料類型轉換\"></a>資料類型轉換</h2><ul>\n<li>同類型的資料才可以運算</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># input函數</span></span><br><span class=\"line\"><span class=\"comment\"># 返回值的類型: 字串(str)</span></span><br><span class=\"line\">data = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入您的密碼:&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;密碼是:&#x27;</span>, data, <span class=\"built_in\">type</span>(data))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># str --&gt; int    常用</span></span><br><span class=\"line\">a = <span class=\"string\">&#x27;123&#x27;</span></span><br><span class=\"line\">b = <span class=\"built_in\">int</span>(a)   <span class=\"comment\"># 將a轉換為整型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(b, <span class=\"built_in\">type</span>(b))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># str --&gt; float   常用</span></span><br><span class=\"line\">c = <span class=\"string\">&#x27;3.14&#x27;</span></span><br><span class=\"line\">d = <span class=\"built_in\">float</span>(c)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(d, <span class=\"built_in\">type</span>(d))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 場景:字串的拼接</span></span><br><span class=\"line\"><span class=\"comment\"># int --&gt; str</span></span><br><span class=\"line\">e = <span class=\"built_in\">str</span>(<span class=\"number\">123</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(e, <span class=\"built_in\">type</span>(e))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># float --&gt; str</span></span><br><span class=\"line\">f = <span class=\"built_in\">str</span>(<span class=\"number\">3.14</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(f, <span class=\"built_in\">type</span>(f))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># float --&gt; int</span></span><br><span class=\"line\">s = <span class=\"built_in\">int</span>(<span class=\"number\">23.94</span>)    <span class=\"comment\"># 直接去除小數部分</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s, <span class=\"built_in\">type</span>(s))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意:</span></span><br><span class=\"line\"><span class=\"comment\"># 資料看起來得像對應的資料類型</span></span><br><span class=\"line\"><span class=\"comment\"># a = int(&#x27;3.234&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># a = int(&#x27;3a234&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># a = float(&#x27;3a5&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># print(a, type(a))</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"資料類型轉換應用\"><a href=\"#資料類型轉換應用\" class=\"headerlink\" title=\"資料類型轉換應用\"></a>資料類型轉換應用</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1 獲取資料</span></span><br><span class=\"line\"><span class=\"comment\"># 將輸入的資料轉換為整型,將整型結果賦值給變數number1</span></span><br><span class=\"line\">number1 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入數位1:&#x27;</span>))</span><br><span class=\"line\">number2 = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入數位2:&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2 資料處理(運算)</span></span><br><span class=\"line\"><span class=\"comment\"># float = float - int</span></span><br><span class=\"line\">result = number2 - number1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3 輸出結果</span></span><br><span class=\"line\"><span class=\"comment\"># 字串的拼接: str + str</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;計算的結果是:&#x27;</span> + <span class=\"built_in\">str</span>(result))  <span class=\"comment\"># 列印拼接後1個資料</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;計算的結果是:&#x27;</span>, <span class=\"built_in\">str</span>(result))   <span class=\"comment\"># 列印2個資料</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"資料類型轉換-1\"><a href=\"#資料類型轉換-1\" class=\"headerlink\" title=\"資料類型轉換\"></a>資料類型轉換</h2><ol>\n<li>轉換為整形: int(數據)</li>\n<li>轉換為浮點型:float(數據)</li>\n<li>轉換為字串:str(數據)</li>\n<li>轉換為布林:bool(數據)</li>\n</ol>\n<blockquote>\n<p>結果為False：bool(0)  bool(0.0)  bool(None)</p>\n</blockquote>\n<ul>\n<li>混合類型自動升級：<br>1 + 2.14  返回的結果是 3.14<br>1 + 3.0   返回結果是:  4.0</li>\n</ul>\n","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day02_02_算數運算練習題","url":"/2021/12/26/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day01-08-%E7%AE%97%E6%95%B8%E9%81%8B%E7%AE%97%E7%B7%B4%E7%BF%92%E9%A1%8C/","content":"<h2 id=\"練習題1\"><a href=\"#練習題1\" class=\"headerlink\" title=\"練習題1\"></a>練習題1</h2><p>練習1：在終端中錄入一個半徑，輸出圓形的面積(3.14 × 半徑的平方)，輸出的格式：圓形面積是：xxx</p>\n<span id=\"more\"></span>\n<p>練習2：在終端中分別錄入3個資料(分鐘數、小時數、天數)，輸出總秒數。</p>\n<p>練習3：在終端中首先獲取一個變數，再獲取一個變數，然後交換他們，最後輸出兩個變數。</p>\n<p>練習4：獲取用戶輸入的秒數，計算是多少小時多少分鐘多少秒？</p>\n<p>練習5：古代的秤1斤是16兩，獲取輸入的總兩數，計算是多少斤多少兩？</p>\n<h3 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法:\"></a>解法:</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 練習1：在終端中錄入一個半徑，輸出圓形的面積(3.14 × 半徑的平方)，輸出的格式：圓形面積是：xxx</span></span><br><span class=\"line\">radius = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入圓形半徑:&quot;</span>)</span><br><span class=\"line\">area = <span class=\"number\">3.14</span> * <span class=\"built_in\">float</span>(radius) ** <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;圓形面積是：&quot;</span> + <span class=\"built_in\">str</span>(area))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 練習2：在終端中分別錄入3個資料(分鐘數、小時數、天數)，輸出總秒數</span></span><br><span class=\"line\">minute = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入分鐘：&quot;</span>))</span><br><span class=\"line\">hour = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入小時：&quot;</span>))</span><br><span class=\"line\">day = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入天：&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">result = minute * <span class=\"number\">60</span> + hour * <span class=\"number\">60</span> * <span class=\"number\">60</span> + day * <span class=\"number\">24</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;總秒數是：&quot;</span> + <span class=\"built_in\">str</span>(result))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 練習3：在終端中首先獲取一個變數，再獲取一個變數，然後交換他們，最後輸出兩個變數。</span></span><br><span class=\"line\">variable01 = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入第一個變數：&quot;</span>)</span><br><span class=\"line\">variable02 = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入第二個變數：&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 變數交換思想：</span></span><br><span class=\"line\"><span class=\"comment\"># temp = variable01</span></span><br><span class=\"line\"><span class=\"comment\"># variable01= variable02</span></span><br><span class=\"line\"><span class=\"comment\"># variable02 = temp</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># python交換變數</span></span><br><span class=\"line\">variable01, variable02 = variable02, variable01</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;第一個變數是：&quot;</span> + variable01)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;第二個變數是：&quot;</span> + variable02)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 練習4：獲取用戶輸入的秒數，計算是多少小時多少分鐘多少秒？</span></span><br><span class=\"line\">seconds = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入秒數:&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">hour = seconds // <span class=\"number\">3600</span></span><br><span class=\"line\"><span class=\"comment\">#minute = seconds // 60 % 60</span></span><br><span class=\"line\">minute = seconds % <span class=\"number\">3600</span> // <span class=\"number\">60</span></span><br><span class=\"line\">second = seconds % <span class=\"number\">60</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(hour) + <span class=\"string\">&#x27;小時&#x27;</span> + <span class=\"built_in\">str</span>(minute) + <span class=\"string\">&#x27;分鐘&#x27;</span> + <span class=\"built_in\">str</span>(second) + <span class=\"string\">&#x27;秒&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">result = hour * <span class=\"number\">3600</span> + minute * <span class=\"number\">60</span> + second</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;總秒數:&#x27;</span> + <span class=\"built_in\">str</span>(result))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 練習5：古代的秤1斤是16兩，獲取輸入的總兩數，計算是多少斤多少兩？</span></span><br><span class=\"line\"><span class=\"comment\">#解法一</span></span><br><span class=\"line\">weight = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入總兩數:&#x27;</span>))</span><br><span class=\"line\">jin = weight // <span class=\"number\">16</span></span><br><span class=\"line\">liang = weight % <span class=\"number\">16</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(jin) + <span class=\"string\">&#x27;斤&#x27;</span> + <span class=\"built_in\">str</span>(liang) + <span class=\"string\">&#x27;兩&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">result = jin * <span class=\"number\">16</span> + liang</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;總兩數:&#x27;</span>, result)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#解法二</span></span><br><span class=\"line\">liang_weight = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入量：&quot;</span>))</span><br><span class=\"line\">jin = liang_weight // <span class=\"number\">16</span></span><br><span class=\"line\">liang = liang_weight % <span class=\"number\">16</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(jin) + <span class=\"string\">&quot;斤零&quot;</span> + <span class=\"built_in\">str</span>(liang) + <span class=\"string\">&quot;兩&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"練習題2\"><a href=\"#練習題2\" class=\"headerlink\" title=\"練習題2\"></a>練習題2</h2><ul>\n<li><p>練習題1:判斷以下運算式返回結果。<br>print(None and 1 or not False)<br>print(0 or not True and True)<br>print(1 &gt; 10 or 1 &lt; 10)<br>print(5 &lt; 8 and 7 &gt; 4)<br>print(‘3’ &#x3D;&#x3D; ‘3’ and 8 &gt; 4)<br>print(1 &gt; 10 or 10 &gt; 1)<br>print(5 &lt; 8 and 7 &lt; 4)<br>print(“3” &#x3D;&#x3D; “3” and 8 &gt; 4)<br>print(6 &#x3D;&#x3D; “6” or 9 &gt; 3)<br>print(“a” !&#x3D; “1” and 5 &#x3D;&#x3D; 5)</p>\n</li>\n<li><p>練習題2:寫出判斷平年或閏年的判斷邏輯。</p>\n</li>\n<li><p>練習題3:寫出判斷平年或閏年的判斷邏輯。</p>\n</li>\n<li><p>在終端中錄入年份，判斷是否為閏年。<br>  條件1：年份能被4整除，但是不能被100整除。<br>  條件2：能被400整除。</p>\n</li>\n<li><p>練習題4:在終端獲取一個四位元數，計算每位相加的和並列印。</p>\n</li>\n<li><p>練習題5:在終端中錄入距離，時間，初速度，計算加速度。</p>\n</li>\n</ul>\n<h3 id=\"解法-1\"><a href=\"#解法-1\" class=\"headerlink\" title=\"解法:\"></a>解法:</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#練習題1:判斷以下運算式返回結果。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">None</span> <span class=\"keyword\">and</span> <span class=\"number\">1</span> <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> <span class=\"literal\">False</span>)  <span class=\"comment\">#True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">0</span> <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> <span class=\"literal\">True</span> <span class=\"keyword\">and</span> <span class=\"literal\">True</span>)   <span class=\"comment\">#False</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span> &gt; <span class=\"number\">10</span> <span class=\"keyword\">or</span> <span class=\"number\">1</span> &lt; <span class=\"number\">10</span>)   <span class=\"comment\">#True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">5</span> &lt; <span class=\"number\">8</span> <span class=\"keyword\">and</span> <span class=\"number\">7</span> &gt; <span class=\"number\">4</span>)    <span class=\"comment\">#True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;3&#x27;</span> == <span class=\"string\">&#x27;3&#x27;</span> <span class=\"keyword\">and</span> <span class=\"number\">8</span> &gt; <span class=\"number\">4</span>)   <span class=\"comment\">#True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span> &gt; <span class=\"number\">10</span> <span class=\"keyword\">or</span> <span class=\"number\">10</span> &gt; <span class=\"number\">1</span>)<span class=\"comment\"># 一真俱真  --&gt; True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">5</span> &lt; <span class=\"number\">8</span> <span class=\"keyword\">and</span> <span class=\"number\">7</span> &lt; <span class=\"number\">4</span>)<span class=\"comment\"># 一假俱假  --&gt; False</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;3&quot;</span> == <span class=\"string\">&quot;3&quot;</span> <span class=\"keyword\">and</span> <span class=\"number\">8</span> &gt; <span class=\"number\">4</span>)<span class=\"comment\"># 俱真  --&gt; True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">6</span> == <span class=\"string\">&quot;6&quot;</span> <span class=\"keyword\">or</span> <span class=\"number\">9</span> &gt; <span class=\"number\">3</span>)<span class=\"comment\"># 一真俱真  --&gt; True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;a&quot;</span> != <span class=\"string\">&quot;1&quot;</span> <span class=\"keyword\">and</span> <span class=\"number\">5</span> == <span class=\"number\">5</span>)<span class=\"comment\"># 俱真  --&gt; True</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#練習題2:寫出判斷平年或閏年的判斷邏輯</span></span><br><span class=\"line\"><span class=\"comment\"># 閏年的判斷邏輯:</span></span><br><span class=\"line\"><span class=\"comment\">#   1 年份能被4整除,(並且) 但不能被100整除</span></span><br><span class=\"line\"><span class=\"comment\">#   2 年份能被400整除  (條件1與條件2 或者關係)</span></span><br><span class=\"line\"><span class=\"comment\">#  整除: 年份 % 4 == 0</span></span><br><span class=\"line\"></span><br><span class=\"line\">year = -<span class=\"number\">1900</span></span><br><span class=\"line\"></span><br><span class=\"line\">res = year &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> \\</span><br><span class=\"line\">      (year % <span class=\"number\">4</span> == <span class=\"number\">0</span> <span class=\"keyword\">and</span></span><br><span class=\"line\">      year % <span class=\"number\">100</span> != <span class=\"number\">0</span> <span class=\"keyword\">or</span></span><br><span class=\"line\">      year % <span class=\"number\">400</span> == <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(res)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#練習題3:寫出判斷平年或閏年的判斷邏輯。</span></span><br><span class=\"line\">\t\t<span class=\"comment\">#在終端中錄入年份，判斷是否為閏年。</span></span><br><span class=\"line\">    <span class=\"comment\">#條件1：年份能被4整除，但是不能被100整除。</span></span><br><span class=\"line\">    <span class=\"comment\">#條件2：能被400整除。</span></span><br><span class=\"line\"><span class=\"comment\">#解法一</span></span><br><span class=\"line\">year = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入年份：&quot;</span>))</span><br><span class=\"line\">result = year % <span class=\"number\">4</span> == <span class=\"number\">0</span> <span class=\"keyword\">and</span> year % <span class=\"number\">100</span> != <span class=\"number\">0</span> <span class=\"keyword\">or</span> year % <span class=\"number\">400</span> == <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#解法二</span></span><br><span class=\"line\">year = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入一個年份:&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> year &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">     <span class=\"keyword\">if</span> year % <span class=\"number\">4</span> == <span class=\"number\">0</span> <span class=\"keyword\">and</span> year % <span class=\"number\">100</span> != <span class=\"number\">0</span> <span class=\"keyword\">or</span> year % <span class=\"number\">400</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;閏年&#x27;</span>)</span><br><span class=\"line\">     <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;平年&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">     <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;年份輸入錯誤&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#練習題4:在終端獲取一個四位元數，計算每位相加的和並列印。</span></span><br><span class=\"line\"><span class=\"comment\"># 解法一</span></span><br><span class=\"line\"><span class=\"comment\"># 1 獲取資料(四位元數)</span></span><br><span class=\"line\">number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入一個四位數:&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2 獲取各個位上的數</span></span><br><span class=\"line\">thousand = number // <span class=\"number\">1000</span></span><br><span class=\"line\">hundred = number % <span class=\"number\">1000</span> // <span class=\"number\">100</span></span><br><span class=\"line\">ten = number % <span class=\"number\">100</span> // <span class=\"number\">10</span></span><br><span class=\"line\">one = number % <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"comment\"># print(thousand, hundred, ten, one)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3 將各個位上的數相加</span></span><br><span class=\"line\">sums = thousand + hundred + ten + one</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4 列印結果</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;四位數的和為:&#x27;</span>, sums)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解法二</span></span><br><span class=\"line\"><span class=\"comment\"># 增強運算子處理方法</span></span><br><span class=\"line\">number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入一個四位數:&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">sums = number // <span class=\"number\">1000</span></span><br><span class=\"line\">sums += number % <span class=\"number\">1000</span> // <span class=\"number\">100</span></span><br><span class=\"line\">sums += number % <span class=\"number\">100</span> // <span class=\"number\">10</span></span><br><span class=\"line\">sums += number % <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;四位數的和為:&#x27;</span>, sums)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#練習題5:在終端中錄入距離，時間，初速度，計算加速度。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    勻變速直線運動的位移與時間公式：</span></span><br><span class=\"line\"><span class=\"string\">        距離=初速度 * 時間 + 加速度 * 時間平方的一半</span></span><br><span class=\"line\"><span class=\"string\">    輸入：</span></span><br><span class=\"line\"><span class=\"string\">        距離:100</span></span><br><span class=\"line\"><span class=\"string\">        初速度:2</span></span><br><span class=\"line\"><span class=\"string\">        時間:5</span></span><br><span class=\"line\"><span class=\"string\">    輸出：加速度7.2</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    公式：</span></span><br><span class=\"line\"><span class=\"string\">        距離=初速度 * 時間 + 加速度 * 時間**2 * 0.5</span></span><br><span class=\"line\"><span class=\"string\">        (距離 - 初速度 * 時間) * 2/ 時間**2 = 加速度</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">distance = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入距離：&quot;</span>))</span><br><span class=\"line\">initial_velocity = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入初速度：&quot;</span>))</span><br><span class=\"line\">time = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入時間：&quot;</span>))</span><br><span class=\"line\">accelerated_speed = (distance - initial_velocity * time) * <span class=\"number\">2</span> / time ** <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;加速度是：&quot;</span> + <span class=\"built_in\">str</span>(accelerated_speed))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"練習題3\"><a href=\"#練習題3\" class=\"headerlink\" title=\"練習題3\"></a>練習題3</h2><p>練習題1:輸入4個同學的體重，列印出體重最重的值。</p>\n<p>練習題2:輸入一個成績，判斷該成績是屬於哪個成績等級？</p>\n<p>練習題3:玩家重複猜測，直到猜對為止。每次提示：大了、小了，若猜對了則列印恭喜猜對並結束猜數，列印總共猜了多少次。</p>\n<p>練習題4:列印 20 - 1 之間的[偶數]</p>\n<h3 id=\"解法-2\"><a href=\"#解法-2\" class=\"headerlink\" title=\"解法:\"></a>解法:</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#練習題1:輸入4個同學的體重，列印出體重最重的值</span></span><br><span class=\"line\">weight1 = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入第1個學生的體重:&#x27;</span>))</span><br><span class=\"line\">weight2 = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入第2個學生的體重:&#x27;</span>))</span><br><span class=\"line\">weight3 = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入第3個學生的體重:&#x27;</span>))</span><br><span class=\"line\">weight4 = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入第4個學生的體重:&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> weight4 &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> weight3 &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> weight2 &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> weight1 &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\"><span class=\"comment\">#     # 假設法: 假設其中一個資料最大,依次後後續的資料比較,最終計算出最大值</span></span><br><span class=\"line\">     max_weight = weight1</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span> weight2 &gt; max_weight:</span><br><span class=\"line\">         max_weight = weight2</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span> weight3 &gt; max_weight:</span><br><span class=\"line\">         max_weight = weight3</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span> weight4 &gt; max_weight:</span><br><span class=\"line\">         max_weight = weight4</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;最重體重值為:&#x27;</span>, max_weight)</span><br><span class=\"line\"> <span class=\"keyword\">else</span>:</span><br><span class=\"line\">     <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;請輸入正確的體重值&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#練習題2:輸入一個成績，判斷該成績是屬於哪個成績等級？</span></span><br><span class=\"line\"><span class=\"comment\"># \t  [0-60) 屬於E級</span></span><br><span class=\"line\"><span class=\"comment\">#     [60, 70)屬於D級</span></span><br><span class=\"line\"><span class=\"comment\">#     [70, 80)屬於C級</span></span><br><span class=\"line\"><span class=\"comment\">#     [80, 90)屬於B級</span></span><br><span class=\"line\"><span class=\"comment\">#     [90, 100]屬於A級</span></span><br><span class=\"line\"><span class=\"comment\">#     其他值均錯誤</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法1:</span></span><br><span class=\"line\">score = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入一個成績:&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"number\">0</span> &lt;= score &lt; <span class=\"number\">60</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;E等級&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> <span class=\"number\">60</span> &lt;= score &lt; <span class=\"number\">70</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;D等級&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> <span class=\"number\">70</span> &lt;= score &lt; <span class=\"number\">80</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;C等級&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> <span class=\"number\">80</span> &lt;= score &lt; <span class=\"number\">90</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;B等級&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> <span class=\"number\">90</span> &lt;= score &lt;= <span class=\"number\">100</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;A等級&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;成績輸入錯誤&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法2: if語句嵌套</span></span><br><span class=\"line\">score = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入一個成績:&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"number\">100</span> &gt;= score &gt;= <span class=\"number\">0</span>:   <span class=\"comment\"># 成績正確</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> score &lt; <span class=\"number\">60</span>:   <span class=\"comment\"># [0, 60)</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;E等級&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> score &lt; <span class=\"number\">70</span>: <span class=\"comment\"># [60, 70)</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;D等級&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> score &lt; <span class=\"number\">80</span>: <span class=\"comment\"># [70, 80)</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;C等級&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> score &lt; <span class=\"number\">90</span>: <span class=\"comment\"># [80, 90)</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;B等級&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># elif score &lt;= 100: # [90, 100]</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;A等級&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;成績輸入錯誤&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 隨機猜數：產生1個1到100之間的亂數：</span></span><br><span class=\"line\"><span class=\"comment\">#練習題3:玩家重複猜測，直到猜對為止。每次提示：大了、小了，若猜對了則列印恭喜猜對並結束猜數，列印總共猜了多少次。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">分析:</span></span><br><span class=\"line\"><span class=\"string\">    1 產生一個1-100(包含)之間的隨機整數</span></span><br><span class=\"line\"><span class=\"string\">    2 創建變數,記錄次數</span></span><br><span class=\"line\"><span class=\"string\">    3 迴圈輸入數:</span></span><br><span class=\"line\"><span class=\"string\">        記錄次數 += 1</span></span><br><span class=\"line\"><span class=\"string\">        判斷輸入的數與亂數的大小關係:</span></span><br><span class=\"line\"><span class=\"string\">            大: 輸入的數 &gt; 亂數</span></span><br><span class=\"line\"><span class=\"string\">            小: 輸入的數 &lt; 亂數</span></span><br><span class=\"line\"><span class=\"string\">            等: 輸入的數 == 亂數,列印猜測次數,結束迴圈</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\">randNum = random.randint(<span class=\"number\">1</span>, <span class=\"number\">10</span>)  <span class=\"comment\"># 隨機產生[1,10]的整數</span></span><br><span class=\"line\"><span class=\"comment\"># print(randNum)</span></span><br><span class=\"line\">times = <span class=\"number\">0</span>  <span class=\"comment\"># 記錄次數</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:  <span class=\"comment\"># 未知迴圈次數</span></span><br><span class=\"line\">    userNum = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入一個[1,100]的整數&#x27;</span>))</span><br><span class=\"line\">    times += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> userNum &gt; randNum:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;大了&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> userNum &lt; randNum:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;小了&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:  <span class=\"comment\"># userNum == randNum</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;恭喜您猜對了&#x27;</span>, <span class=\"string\">&quot;共使用&quot;</span> + <span class=\"built_in\">str</span>(times) + <span class=\"string\">&quot;次機會&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 練習題4:列印 1 - 20 之間的整數</span></span><br><span class=\"line\"><span class=\"comment\"># 方法1: 先列印後加</span></span><br><span class=\"line\">x = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> x &lt; <span class=\"number\">20</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(x, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">    x += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法2:先加後列印</span></span><br><span class=\"line\">x = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> x &lt; <span class=\"number\">19</span>:</span><br><span class=\"line\">    x += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(x, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#練習題4:列印 20 - 1 之間的[偶數]</span></span><br><span class=\"line\"><span class=\"comment\"># 偶數: 數 % 2 == 0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # 方法1:</span></span><br><span class=\"line\">y = <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> y &gt; <span class=\"number\">1</span>:    <span class=\"comment\"># 1 迴圈列印20-1之間的整數</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> y % <span class=\"number\">2</span> == <span class=\"number\">0</span>: <span class=\"comment\"># 2 判斷20-1之間的哪些是偶數,是則列印</span></span><br><span class=\"line\">         <span class=\"built_in\">print</span>(y, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">     y -= <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法2:</span></span><br><span class=\"line\">y = <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> y &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(y, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">    y -= <span class=\"number\">2</span></span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day02_01_算數運算","url":"/2021/12/26/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day02-01-%E7%AE%97%E6%95%B8%E9%81%8B%E7%AE%97/","content":"<h2 id=\"算術運算子\"><a href=\"#算術運算子\" class=\"headerlink\" title=\"算術運算子\"></a>算術運算子</h2><p>+加法<br>-減法<br>*乘法<br>&#x2F;\t除法：結果為浮點數<br>&#x2F;&#x2F;\t地板除：除的結果去掉小數部分<br>%\t求餘<br>**\t冪運算<br>優先順序從高到低： (  **     <strong>—&gt;</strong>     * &#x2F; % &#x2F;&#x2F;        <strong>—&gt;</strong>  + -     )</p>\n<blockquote>\n<p>凡是浮點數參與的運算,結果一定是浮點數</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">4.3</span> + <span class=\"number\">6</span>)  <span class=\"comment\"># 加法</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">4.3</span> - <span class=\"number\">6</span>)  <span class=\"comment\"># 減法</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">4</span> * <span class=\"number\">6</span>)    <span class=\"comment\"># 乘法</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">10</span> / <span class=\"number\">2</span>)   <span class=\"comment\"># 除法 [/ 返回值結果是浮點數]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">13</span> / <span class=\"number\">5</span>)   <span class=\"comment\"># 除法 - 取小數商</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">13</span> % <span class=\"number\">5</span>)   <span class=\"comment\"># 取餘(取模)  - 取餘數</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">13</span> // <span class=\"number\">5</span>)  <span class=\"comment\"># 地板除(向下取整)  - 取整數商</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(-<span class=\"number\">13</span> // <span class=\"number\">5</span>)  <span class=\"comment\"># 地板除(向下取整)  - 取整數商</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">13.9</span> // <span class=\"number\">2</span>)  <span class=\"comment\"># 地板除(向下取整)  - 取整數商</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">2</span> ** <span class=\"number\">10</span>)   <span class=\"comment\"># 求冪 - 2的10次方</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">12</span> * <span class=\"number\">10</span> ** <span class=\"number\">9</span>)   <span class=\"comment\"># 求冪 - 12乘以10的9次方</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">True</span> + <span class=\"number\">1</span>)   <span class=\"comment\"># True對應的數值為1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">False</span> + <span class=\"number\">1</span>)   <span class=\"comment\"># False對應的數值為0</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"練習\"><a href=\"#練習\" class=\"headerlink\" title=\"練習\"></a>練習</h3><ol>\n<li>超市西瓜 13 元一個, 問，你拿100 元可以買幾個西瓜，找零多少?</li>\n<li>獲取數字：324  百位、十位、個位上對應的數字</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#第一題</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;個數&#x27;</span>, <span class=\"number\">100</span> // <span class=\"number\">13</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;找零&#x27;</span>, <span class=\"number\">100</span> % <span class=\"number\">13</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#第二題</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;百位:&#x27;</span>, <span class=\"number\">324</span> // <span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;十位:&#x27;</span>, <span class=\"number\">324</span> % <span class=\"number\">100</span> // <span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;十位:&#x27;</span>, <span class=\"number\">324</span> // <span class=\"number\">10</span> % <span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;個位:&#x27;</span>, <span class=\"number\">324</span> % <span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://imgur.com/6CJrCBT\"><img src=\"https://i.imgur.com/6CJrCBT.png\" title=\"source: imgur.com\" /></a></p>\n<h2 id=\"增強運算子\"><a href=\"#增強運算子\" class=\"headerlink\" title=\"增強運算子\"></a>增強運算子</h2><ul>\n<li>功能 : 變數與其他資料運算的結果重新賦值給變數(節省記憶體)</li>\n<li>y +&#x3D; x\t\t等同於 y &#x3D; y + x</li>\n<li>y -&#x3D; x\t\t等同於 y &#x3D; y - x</li>\n<li>y *&#x3D; x\t\t等同於 y &#x3D; y * x</li>\n<li>y &#x2F;&#x3D; x\t\t等同於 y &#x3D; y &#x2F; x</li>\n<li>y &#x2F;&#x2F;&#x3D; x\t\t等同於 y &#x3D; y &#x2F;&#x2F; x</li>\n<li>y %&#x3D; x\t\t等同於 y &#x3D; y % x</li>\n<li>y **&#x3D; x\t\t等同於 y &#x3D; y ** x</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 需求:在a的基礎上,加2 (自增)  [其他程式設計語言: ++/--]</span></span><br><span class=\"line\">a += <span class=\"number\">2</span>   <span class=\"comment\"># 等效於</span></span><br><span class=\"line\"><span class=\"comment\"># a = a + 2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 創建新的變數(佔用記憶體)</span></span><br><span class=\"line\">a1 = a + <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a1)</span><br><span class=\"line\"></span><br><span class=\"line\">a //= <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"比較運算子\"><a href=\"#比較運算子\" class=\"headerlink\" title=\"比較運算子\"></a>比較運算子</h2><p>“&lt;\t\t小於”<br>“&lt;&#x3D;\t\t小於等於”<br>“&gt;&#x3D;      大於”<br>“&gt;&#x3D;\t\t大於等於”<br>“&#x3D;&#x3D;\t\t等於等於”<br>“!&#x3D;\t\t不等於”<br>返回布林類型的值<br>比較運算的數學表示方式:0 &lt;&#x3D; x &lt;&#x3D; 100</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">10</span></span><br><span class=\"line\">b = <span class=\"number\">15</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a &gt; b)   <span class=\"comment\"># 10 &gt; 15  不成立(False)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a &lt; b)   <span class=\"comment\"># 10 &lt; 15  成立(True)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a &lt;= <span class=\"number\">15</span>)  <span class=\"comment\"># 10 &lt;= 15 [10 &lt; 15 或者 10 == 15]  成立(True)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 判斷值是否在某個區間內</span></span><br><span class=\"line\">age = <span class=\"number\">16</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">0</span> &lt;= age &lt;= <span class=\"number\">18</span>)   <span class=\"comment\"># 鏈式比較</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># == 與 !=</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">10</span> == <span class=\"number\">2</span> * <span class=\"number\">5</span>)    <span class=\"comment\"># 等於</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">10</span> != <span class=\"number\">2</span> * <span class=\"number\">5</span>)    <span class=\"comment\"># 不等於</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">10.0</span> == <span class=\"number\">2</span> * <span class=\"number\">5</span>)  <span class=\"comment\"># 等於</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"布林-邏輯-運算子\"><a href=\"#布林-邏輯-運算子\" class=\"headerlink\" title=\"布林(邏輯)運算子\"></a>布林(邏輯)運算子</h2><ul>\n<li>短路邏輯<br>說明：一旦結果確定，後面的運算式將不再執行<br>擴展：邏輯運算時，儘量將複雜的（耗時的）判斷放在最後面</li>\n</ul>\n<h2 id=\"與and\"><a href=\"#與and\" class=\"headerlink\" title=\"與and\"></a>與and</h2><ul>\n<li>表示並且的關係，一假俱假。(都得滿足條件，結論才滿足條件表達並且的關係)</li>\n</ul>\n<p>示例:<br>True and True   # True<br>True and False  # False<br>False and True  # False<br>False and False # False</p>\n<h2 id=\"或or\"><a href=\"#或or\" class=\"headerlink\" title=\"或or\"></a>或or</h2><ul>\n<li>表示或者的關係，一真俱真。(一個滿足就行 表達或者的關係)</li>\n</ul>\n<p>示例:<br>True or True              # True<br>True or False             # True<br>False or True             # True<br>False or False            # False</p>\n<h2 id=\"非-not\"><a href=\"#非-not\" class=\"headerlink\" title=\"非 not\"></a>非 not</h2><ul>\n<li>表示取反</li>\n</ul>\n<p>例如：<br>not True   # 返回False<br>not False  # 返回True</p>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例:\"></a>示例:</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># and - 描述:並且</span></span><br><span class=\"line\"><span class=\"comment\"># or - 描述:或者</span></span><br><span class=\"line\"><span class=\"comment\"># not - 描述:不(非)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 需求:有房有車有存款</span></span><br><span class=\"line\">house = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請問有房嗎?&#x27;</span>)</span><br><span class=\"line\">money = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請問您的資產:&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(house == <span class=\"string\">&#x27;有&#x27;</span> <span class=\"keyword\">and</span> money &gt;= <span class=\"number\">1000000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">and</span></span><br><span class=\"line\"><span class=\"string\">    運算式1      運算式2       結果</span></span><br><span class=\"line\"><span class=\"string\">     True        True        True</span></span><br><span class=\"line\"><span class=\"string\">     True        False       False</span></span><br><span class=\"line\"><span class=\"string\">     False       True        False</span></span><br><span class=\"line\"><span class=\"string\">     False       False       False</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  結論: 一假俱假</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">house = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請問有房嗎?&#x27;</span>)</span><br><span class=\"line\">money = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請問您的資產:&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(house == <span class=\"string\">&#x27;有&#x27;</span> <span class=\"keyword\">or</span> money &gt;= <span class=\"number\">1000000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">or</span></span><br><span class=\"line\"><span class=\"string\">    運算式1      運算式2       結果</span></span><br><span class=\"line\"><span class=\"string\">     True        True        True</span></span><br><span class=\"line\"><span class=\"string\">     True        False       True</span></span><br><span class=\"line\"><span class=\"string\">     False       True        True</span></span><br><span class=\"line\"><span class=\"string\">     False       False       False</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  結論: 一真俱真</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">需求: 資產不少於<span class=\"number\">1000000</span></span><br><span class=\"line\">money = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請問您的資產:&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"keyword\">not</span> money &lt; <span class=\"number\">1000000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">not   </span></span><br><span class=\"line\"><span class=\"string\">       運算式     結果</span></span><br><span class=\"line\"><span class=\"string\">       True      False</span></span><br><span class=\"line\"><span class=\"string\">       False     True</span></span><br><span class=\"line\"><span class=\"string\">       </span></span><br><span class=\"line\"><span class=\"string\">  結論: 真亦假,假亦真</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># bool 函數</span></span><br><span class=\"line\"><span class=\"comment\"># bool(物件)    # 判斷物件的真假狀態</span></span><br><span class=\"line\"><span class=\"comment\"># 為假的情況:</span></span><br><span class=\"line\"><span class=\"comment\">#  0</span></span><br><span class=\"line\"><span class=\"comment\">#  0.0</span></span><br><span class=\"line\"><span class=\"comment\">#  False</span></span><br><span class=\"line\"><span class=\"comment\">#  None</span></span><br><span class=\"line\"><span class=\"comment\">#  &#x27;&#x27;/&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#  空容器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 數值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">bool</span>(<span class=\"number\">10</span>), <span class=\"built_in\">bool</span>(<span class=\"number\">20</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">10</span> <span class=\"keyword\">and</span> <span class=\"number\">20</span>)    <span class=\"comment\"># 20</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">10</span> <span class=\"keyword\">and</span> <span class=\"number\">0</span>)     <span class=\"comment\"># 0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">0</span> <span class=\"keyword\">and</span> <span class=\"number\">0.0</span>)    <span class=\"comment\"># 0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">0</span> <span class=\"keyword\">and</span> <span class=\"number\">10</span>)     <span class=\"comment\"># 0</span></span><br><span class=\"line\"><span class=\"comment\"># and: 優先返回為假(如果運算式1為真,則返回運算式2,否則直接返回運算式1)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">10</span> <span class=\"keyword\">or</span> <span class=\"number\">20</span>)    <span class=\"comment\"># 10</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">10</span> <span class=\"keyword\">or</span> <span class=\"number\">0</span>)     <span class=\"comment\"># 10</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">0</span> <span class=\"keyword\">or</span> <span class=\"number\">0.0</span>)    <span class=\"comment\"># 0.0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">0</span> <span class=\"keyword\">or</span> <span class=\"number\">10</span>)     <span class=\"comment\"># 10</span></span><br><span class=\"line\"><span class=\"comment\"># or: 優先返回為真(如果運算式1為真,則直接返回運算式1,否則返回運算式2)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"keyword\">not</span> <span class=\"number\">0</span>)    <span class=\"comment\"># not bool(0) --&gt; True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"keyword\">not</span> <span class=\"number\">1</span>)    <span class=\"comment\"># not bool(1) --&gt; False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># and</span></span><br><span class=\"line\"><span class=\"comment\"># 運算式1(True) --&gt; 運算式2(True)  --&gt; 結果(True)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># or</span></span><br><span class=\"line\"><span class=\"comment\"># 運算式1(True) --&gt;  結果(True)</span></span><br><span class=\"line\"><span class=\"comment\"># 運算式2(True) --&gt;  結果(True)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># and</span></span><br><span class=\"line\"><span class=\"comment\"># print(input(&#x27;請問有房嗎?&#x27;) == &#x27;有&#x27; and</span></span><br><span class=\"line\"><span class=\"comment\">#       int(input(&#x27;請問您的資產:&#x27;)) &gt;= 1000000)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># or</span></span><br><span class=\"line\"><span class=\"comment\"># print(input(&#x27;請問有房嗎?&#x27;) == &#x27;有&#x27; or</span></span><br><span class=\"line\"><span class=\"comment\">#       int(input(&#x27;請問您的資產:&#x27;)) &gt;= 1000000)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># not</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"keyword\">not</span> <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請問有房嗎?&#x27;</span>) == <span class=\"string\">&#x27;有&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"短路運算\"><a href=\"#短路運算\" class=\"headerlink\" title=\"短路運算\"></a>短路運算</h2><ul>\n<li>一但結果確定，後面的語句將不再執行。</li>\n</ul>\n<h2 id=\"身份運算子\"><a href=\"#身份運算子\" class=\"headerlink\" title=\"身份運算子\"></a>身份運算子</h2><p>語法:</p>\n<ul>\n<li>x is y</li>\n<li>x is not y</li>\n</ul>\n<p>作用：</p>\n<ul>\n<li>is 用於判斷兩個物件是否是同一個物件,是時返回True,否則返回False。</li>\n<li>is not 的作用與is相反</li>\n</ul>\n<h3 id=\"優先順序\"><a href=\"#優先順序\" class=\"headerlink\" title=\"優先順序\"></a>優先順序</h3><p>高到低：</p>\n<blockquote>\n<p>算數運算子 —&gt;  比較運算子 —&gt;  快捷運算子 —&gt;  身份運算子 —&gt;  邏輯運算子</p>\n</blockquote>\n<h2 id=\"語句\"><a href=\"#語句\" class=\"headerlink\" title=\"語句\"></a>語句</h2><h3 id=\"行\"><a href=\"#行\" class=\"headerlink\" title=\"行\"></a>行</h3><ol>\n<li>物理行：程式師編寫代碼的行。</li>\n<li>邏輯行：python解譯器需要執行的指令。</li>\n<li>建議一個邏輯行在一個物理行上。</li>\n<li>如果一個物理行中使用多個邏輯行，需要使用分號；隔開。</li>\n<li>如果邏輯行過長，可以使用隱式換行或顯式換行。</li>\n</ol>\n<ul>\n<li>隱式換行：所有括弧的內容換行,稱為隱式換行</li>\n<li>括弧包括:  ()  []   {} 三種</li>\n<li>顯式換行：通過折行符 \\ (反斜線)換行，必須放在一行的末尾，目的是告訴解譯器,下一行也是本行的語句。</li>\n</ul>\n<h3 id=\"pass-語句\"><a href=\"#pass-語句\" class=\"headerlink\" title=\"pass 語句\"></a>pass 語句</h3><ul>\n<li>通常用來填充語法空白。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 3個物理行,3個邏輯行</span></span><br><span class=\"line\">a = <span class=\"number\">1</span></span><br><span class=\"line\">b = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a, b)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2個物理行,3個邏輯行(不推薦)</span></span><br><span class=\"line\">a = <span class=\"number\">1</span>;b = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a, b)</span><br><span class=\"line\"></span><br><span class=\"line\">year = -<span class=\"number\">1900</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4個物理行,1個邏輯行</span></span><br><span class=\"line\"><span class=\"comment\"># 顯式換行: \\  續行符</span></span><br><span class=\"line\">res = year &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> \\</span><br><span class=\"line\">      (year % <span class=\"number\">4</span> == <span class=\"number\">0</span> <span class=\"keyword\">and</span></span><br><span class=\"line\">       year % <span class=\"number\">100</span> != <span class=\"number\">0</span> <span class=\"keyword\">or</span></span><br><span class=\"line\">       year % <span class=\"number\">400</span> == <span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 隱式換行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(res)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day02_03_選擇語句","url":"/2021/12/26/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day02-03-%E9%81%B8%E6%93%87%E8%AA%9E%E5%8F%A5/","content":"<h2 id=\"If-elif-else-語句\"><a href=\"#If-elif-else-語句\" class=\"headerlink\" title=\"If elif else 語句\"></a>If elif else 語句</h2><blockquote>\n<p>作用:<br>根據條件有選擇性的執行某條語句或某些語句。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h3 id=\"if結構\"><a href=\"#if結構\" class=\"headerlink\" title=\"if結構\"></a>if結構</h3><p>以下使用場景：適用於判斷事物1種情況</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">語句<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> 條件運算式: </span><br><span class=\"line\">\t語句<span class=\"number\">1</span> </span><br><span class=\"line\">語句<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"if-else結構\"><a href=\"#if-else結構\" class=\"headerlink\" title=\"if-else結構\"></a>if-else結構</h3><p>以下使用場景：適用於判斷事物2種情況</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">語句<span class=\"number\">0</span> </span><br><span class=\"line\"><span class=\"keyword\">if</span> 條件運算式: </span><br><span class=\"line\">\t語句<span class=\"number\">1</span> </span><br><span class=\"line\"><span class=\"keyword\">else</span>: </span><br><span class=\"line\">\t語句<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"if-elif-else-結構\"><a href=\"#if-elif-else-結構\" class=\"headerlink\" title=\"if-elif-else 結構\"></a>if-elif-else 結構</h3><p>以下使用場景：適用於判斷事物3種或3種以上的情況</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">語句<span class=\"number\">0</span> </span><br><span class=\"line\">\t<span class=\"keyword\">if</span> 條件運算式<span class=\"number\">1</span>： </span><br><span class=\"line\">語句<span class=\"number\">1</span>… </span><br><span class=\"line\">\t<span class=\"keyword\">elif</span> 條件運算式<span class=\"number\">2</span>: </span><br><span class=\"line\">語句<span class=\"number\">2</span>… </span><br><span class=\"line\">\t<span class=\"keyword\">elif</span> 條件運算式<span class=\"number\">3</span>: </span><br><span class=\"line\">語句<span class=\"number\">3</span>… … <span class=\"keyword\">else</span>: </span><br><span class=\"line\">\t語句n</span><br></pre></td></tr></table></figure>\n\n<p>結構縮進：官方描述為4個空格（不同的編輯器縮進存在不同），表示代碼的結構層次。</p>\n<ul>\n<li>說明:</li>\n<li>elif 子句可以有0個或多個。</li>\n<li>else 子句可以有0個或1個，且只能放在if語句的最後。</li>\n</ul>\n<h2 id=\"if-語句的真值表達式\"><a href=\"#if-語句的真值表達式\" class=\"headerlink\" title=\"if 語句的真值表達式\"></a>if 語句的真值表達式</h2><p>if 100:<br>print(“真值”)<br>等同於<br>if bool(100):<br>print(“真值”)</p>\n<h2 id=\"條件運算式\"><a href=\"#條件運算式\" class=\"headerlink\" title=\"條件運算式\"></a>條件運算式</h2><ul>\n<li>語法：變數 &#x3D; 結果1 if 條件 else 結果2。</li>\n<li>作用：根據條件(True&#x2F;False) 來決定返回結果1還是結果2。</li>\n<li>執行： 先執行真值表達式，若為True，返回運算式1，否則，返回運算式2。</li>\n<li>使用場景： 適用於簡單事物的2種的情況</li>\n</ul>\n<h2 id=\"代碼調試\"><a href=\"#代碼調試\" class=\"headerlink\" title=\"代碼調試\"></a>代碼調試</h2><p>功能：讓程式中斷，逐行執行。<br>目的：審查代碼的執行流程，明確每行執行的結果<br>流程：<br>1添加中斷點：點擊代碼行【】前，<code>出現紅點</code>。<br>2調試模式：右擊選擇 “debug” 。<br>3點擊“向下”或F7，逐行語句執行。<br>4<code>Ctrl + F2</code> 結束調試模式。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">sex = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入性別：&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># sex  變數 等於 &quot;男&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> sex == <span class=\"string\">&quot;男&quot;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;您好，先生！&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 否則如果</span></span><br><span class=\"line\"><span class=\"keyword\">elif</span> sex == <span class=\"string\">&quot;女&quot;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;您好，女士！&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;性別未知&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 調試：讓程式中斷，逐語句執行。</span></span><br><span class=\"line\"><span class=\"comment\"># 目的：審查程式執行流程</span></span><br><span class=\"line\"><span class=\"comment\">#      查看執行過程中變數的取值</span></span><br><span class=\"line\"><span class=\"comment\"># 步驟：</span></span><br><span class=\"line\"><span class=\"comment\"># 1. 添加中斷點</span></span><br><span class=\"line\"><span class=\"comment\"># 2. 調試運行Debug</span></span><br><span class=\"line\"><span class=\"comment\"># 3. F7 逐語句執行</span></span><br><span class=\"line\"><span class=\"comment\"># 4. Ctrl + F2 停止調試</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"練習題\"><a href=\"#練習題\" class=\"headerlink\" title=\"練習題\"></a>練習題</h3><p>第一題 : 先在終端中錄入一個數位</p>\n<ul>\n<li><p>再錄入一個運算子</p>\n</li>\n<li><p>最後錄入一個數字</p>\n</li>\n<li><p>列印計算的結果</p>\n</li>\n<li><p>要求：如果運算子不是+ - * &#x2F;提示“運算子輸入有誤”</p>\n</li>\n</ul>\n<p>第二題 : 在終端中錄入月份，然後列印天數。</p>\n<ul>\n<li><p>輸入：2 輸出：28天</p>\n</li>\n<li><p>輸入：1 3 5 7 8 10 12 輸出：31天</p>\n</li>\n<li><p>輸入：4 6 9 11 輸出： 30天</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    第一題 : 先在終端中錄入一個數位</span></span><br><span class=\"line\"><span class=\"string\">    再錄入一個運算子</span></span><br><span class=\"line\"><span class=\"string\">    最後錄入一個數字</span></span><br><span class=\"line\"><span class=\"string\">    列印計算的結果</span></span><br><span class=\"line\"><span class=\"string\">    要求：如果運算子不是+ - * /提示“運算子輸入有誤”</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">number_one = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入第一個數字：&quot;</span>))</span><br><span class=\"line\">operator = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入運算子：&quot;</span>)</span><br><span class=\"line\">number_two = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入第二個數字：&quot;</span>))</span><br><span class=\"line\"><span class=\"keyword\">if</span> operator == <span class=\"string\">&quot;+&quot;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(number_one + number_two)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> operator == <span class=\"string\">&quot;-&quot;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(number_one - number_two)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> operator == <span class=\"string\">&quot;*&quot;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(number_one * number_two)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> operator == <span class=\"string\">&quot;/&quot;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(number_one / number_two)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;運算子輸入有誤&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    第二題 : 在終端中錄入月份，然後列印天數。</span></span><br><span class=\"line\"><span class=\"string\">    輸入：2 輸出：28天</span></span><br><span class=\"line\"><span class=\"string\">    輸入：1 3 5 7 8 10 12 輸出：31天</span></span><br><span class=\"line\"><span class=\"string\">    輸入：4 6 9 11 輸出： 30天</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">month = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入月份：&quot;</span>))</span><br><span class=\"line\"><span class=\"keyword\">if</span> month &lt;<span class=\"number\">1</span> <span class=\"keyword\">or</span> month &gt;<span class=\"number\">12</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;月份輸入有誤&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> month == <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;28天&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> month == <span class=\"number\">4</span> <span class=\"keyword\">or</span> month == <span class=\"number\">6</span> <span class=\"keyword\">or</span> month ==<span class=\"number\">9</span> <span class=\"keyword\">or</span> month == <span class=\"number\">11</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;30天&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;31天&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://judyxi.github.io/2021/12/26/python-ling-ji-chu-day01-08-suan-shu-yun-suan-lian-xi-ti/\">【Python零基礎】_Day02_02_算數運算練習題 - 有練習題</a></p>\n</blockquote>\n","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day02_04_迴圈語句","url":"/2021/12/26/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day02-04-%E8%BF%B4%E5%9C%88%E8%AA%9E%E5%8F%A5/","content":"<h2 id=\"while語句\"><a href=\"#while語句\" class=\"headerlink\" title=\"while語句\"></a>while語句</h2><ul>\n<li>作用:<br>可以讓一段代碼滿足條件，重複執行。<span id=\"more\"></span></li>\n<li>語法:<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> 真值表達式: </span><br><span class=\"line\">\t循環體 </span><br><span class=\"line\"><span class=\"keyword\">else</span>: </span><br><span class=\"line\">\t語句塊</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>執行流程 </p>\n<ol>\n<li>先定義一個初始條件 </li>\n<li>先判斷真值表達式，測試布林值為True 或 False </li>\n<li>如果真值表達式為True，則執行語句塊1，再返回到第一步，判斷真值表達式 </li>\n<li>如果真值表達式為False，則執行語句塊2，然後結束while迴圈語句的執行 </li>\n<li>當真值表達式為假，則執行else中的內容，else部分可以省略</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">content = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入內容：&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># if content != &quot;&quot;:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(&quot;真值&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> content:  <span class=\"comment\"># bool(content)</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;真值&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根據一個條件，為變數進行賦值。</span></span><br><span class=\"line\"><span class=\"comment\"># if input(&quot;請輸入性別：&quot;) == &quot;男&quot;:</span></span><br><span class=\"line\"><span class=\"comment\">#     sex = 1</span></span><br><span class=\"line\"><span class=\"comment\"># else:</span></span><br><span class=\"line\"><span class=\"comment\">#     sex = 0</span></span><br><span class=\"line\"></span><br><span class=\"line\">sex = <span class=\"number\">1</span> <span class=\"keyword\">if</span> <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入性別：&quot;</span>) == <span class=\"string\">&quot;男&quot;</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"while迴圈嵌套\"><a href=\"#while迴圈嵌套\" class=\"headerlink\" title=\"while迴圈嵌套\"></a>while迴圈嵌套</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> 真值表達式:</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> 真值表達式:</span><br><span class=\"line\">\t\t循環體</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t語句塊<span class=\"number\">1</span></span><br><span class=\"line\">\t循環體</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t語句塊<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># while迴圈嵌套</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 需求:列印4行4列的小星星</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # 列印1行4列的小星星</span></span><br><span class=\"line\"><span class=\"comment\"># x = 0</span></span><br><span class=\"line\"><span class=\"comment\"># while x &lt; 4:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(&#x27;*&#x27;, end=&#x27; &#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">#     x += 1</span></span><br><span class=\"line\"><span class=\"comment\"># print()   # 換行</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # 列印1行4列的小星星</span></span><br><span class=\"line\"><span class=\"comment\"># x = 0</span></span><br><span class=\"line\"><span class=\"comment\"># while x &lt; 4:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(&#x27;*&#x27;, end=&#x27; &#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">#     x += 1</span></span><br><span class=\"line\"><span class=\"comment\"># print()   # 換行</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # 列印1行4列的小星星</span></span><br><span class=\"line\"><span class=\"comment\"># x = 0</span></span><br><span class=\"line\"><span class=\"comment\"># while x &lt; 4:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(&#x27;*&#x27;, end=&#x27; &#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">#     x += 1</span></span><br><span class=\"line\"><span class=\"comment\"># print()   # 換行</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # 列印1行4列的小星星</span></span><br><span class=\"line\"><span class=\"comment\"># x = 0</span></span><br><span class=\"line\"><span class=\"comment\"># while x &lt; 4:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(&#x27;*&#x27;, end=&#x27; &#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">#     x += 1</span></span><br><span class=\"line\"><span class=\"comment\"># print()   # 換行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">分析</span></span><br><span class=\"line\"><span class=\"string\">                起始條件      結束條件      控制因素</span></span><br><span class=\"line\"><span class=\"string\">    外層迴圈(t)   t = 0        t &lt; 4         行</span></span><br><span class=\"line\"><span class=\"string\">    內層迴圈(x)   x = 0        x &lt; 4         列  [難點]</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># times = 0</span></span><br><span class=\"line\"><span class=\"comment\"># while times &lt; 4:  # 外層迴圈:控制行</span></span><br><span class=\"line\"><span class=\"comment\">#     # 列印1行4列的小星星</span></span><br><span class=\"line\"><span class=\"comment\">#     x = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     while x &lt; 4:  # 內層迴圈:控制列</span></span><br><span class=\"line\"><span class=\"comment\">#         print(&#x27;*&#x27;, end=&#x27; &#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">#         x += 1</span></span><br><span class=\"line\"><span class=\"comment\">#     print()   # 換行</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     times += 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列印:數字三角形</span></span><br><span class=\"line\"><span class=\"comment\"># 9行的數字三角形</span></span><br><span class=\"line\"><span class=\"comment\"># 1</span></span><br><span class=\"line\"><span class=\"comment\"># 1 2</span></span><br><span class=\"line\"><span class=\"comment\"># 1 2 3</span></span><br><span class=\"line\"><span class=\"comment\"># 1 2 3 4</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"comment\"># 1 2 3 4 5 6 7 8 9</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">分析</span></span><br><span class=\"line\"><span class=\"string\">                起始條件      結束條件      控制因素</span></span><br><span class=\"line\"><span class=\"string\">    外層迴圈(t)   t = 1        t &lt; 10        行</span></span><br><span class=\"line\"><span class=\"string\">    內層迴圈(x)   x = 1        x &lt;= t        列  [難點]</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">t = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> t &lt; <span class=\"number\">10</span>:    <span class=\"comment\"># 行</span></span><br><span class=\"line\">    <span class=\"comment\"># print(t, end=&#x27; &#x27;)</span></span><br><span class=\"line\">    x = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> x &lt;= t:   <span class=\"comment\"># 列</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(x, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">        x += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>()    <span class=\"comment\"># 換行</span></span><br><span class=\"line\">    t += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    總結: 外層迴圈執行1次,內層迴圈執行1圈</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"閉環-死循環\"><a href=\"#閉環-死循環\" class=\"headerlink\" title=\"閉環(死循環)\"></a>閉環(死循環)</h2><p>說明：真值表達式一直成立的while迴圈語句。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> 真值表达式：</span><br><span class=\"line\">\t循环体</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t真值不表达式满足执行的语句</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 閉環(while)</span></span><br><span class=\"line\"><span class=\"comment\"># 場景: while閉環通常會和break語句結合使用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># while 真值表達式一直成立(True):</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># x = 1</span></span><br><span class=\"line\"><span class=\"comment\"># while x &gt; 0:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(x, end=&#x27; &#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 迴圈輸入,直到輸入為空,則結束輸入</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    data = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入:&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> data == <span class=\"string\">&#x27;&#x27;</span>:   <span class=\"comment\"># 直接回車,data的資料就是空字串</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>    <span class=\"comment\"># 終止當前的迴圈</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;輸入的資料是:&#x27;</span>, data)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 閉環</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入整數：&quot;</span>))</span><br><span class=\"line\">    state = <span class=\"string\">&quot;奇數&quot;</span> <span class=\"keyword\">if</span> number % <span class=\"number\">2</span> <span class=\"keyword\">else</span> <span class=\"string\">&quot;偶數&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(state)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入exit退出：&quot;</span>) == <span class=\"string\">&quot;exit&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span>  <span class=\"comment\"># 退出迴圈</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> count &lt; <span class=\"number\">3</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(count)  <span class=\"comment\"># 0   1    2</span></span><br><span class=\"line\">    count += <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># while語句 + if語句</span></span><br><span class=\"line\"><span class=\"comment\"># 場景:在while迴圈中需要做判斷</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列印 20 - 1 之間的[奇數]</span></span><br><span class=\"line\">x = <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> x &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">     <span class=\"keyword\">if</span> x % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">         <span class=\"built_in\">print</span>(x, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">     x -= <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"break語句\"><a href=\"#break語句\" class=\"headerlink\" title=\"break語句\"></a>break語句</h2><blockquote>\n<p>break語句<br>作用：用來終止當前迴圈語句的執行 </p>\n</blockquote>\n<p>說明： </p>\n<ol>\n<li>當break語句執行後，此迴圈語句中break之後的語句將不再執行； </li>\n<li>break語句終止迴圈時，迴圈語句的else子句的語句將不會被執行； </li>\n<li>break語句只能終止當前迴圈，如果有迴圈嵌套時，終止本次迴圈，執行外層迴圈 </li>\n<li>break語句只能在迴圈(while for語句)內部使用</li>\n</ol>\n<blockquote>\n<p>continue 語句<br>作用：跳過本次迴圈，繼續下一次新的迴圈 </p>\n</blockquote>\n<p>說明： </p>\n<ol>\n<li>continue語句執行後將不再執行本次迴圈內continue之後的語句</li>\n<li>在while語句中，執行continue將會直接跳轉到while語句的真值表達式處 重新判斷迴圈</li>\n<li>continue語句只能在迴圈(while for語句)內部使用</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># break語句</span></span><br><span class=\"line\"><span class=\"comment\"># 作用：用來終止當前迴圈語句的執行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 說明：</span></span><br><span class=\"line\"><span class=\"comment\">#   - 1、當break語句執行後，此迴圈語句中break之後的語句將不再執行；</span></span><br><span class=\"line\"><span class=\"comment\">#   - 2、break語句終止迴圈時，迴圈語句的else子句的語句將不會被執行；</span></span><br><span class=\"line\"><span class=\"comment\">#   - 3、break語句只能終止當前迴圈，如果有迴圈嵌套時，終止本次迴圈，執行外層迴圈</span></span><br><span class=\"line\"><span class=\"comment\">#   - 4、break語句只能在迴圈(while for語句)內部使用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 需求:當數字為4時,結束迴圈</span></span><br><span class=\"line\"><span class=\"comment\"># x = 1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># while x &lt; 11:</span></span><br><span class=\"line\"><span class=\"comment\">#     if x == 4:</span></span><br><span class=\"line\"><span class=\"comment\">#         break    # 終止當前的迴圈</span></span><br><span class=\"line\"><span class=\"comment\">#         # print(&#x27;執行了break語句&#x27;)   # 不執行</span></span><br><span class=\"line\"><span class=\"comment\">#     print(x, end=&#x27; &#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">#     x += 1</span></span><br><span class=\"line\"><span class=\"comment\"># else: # 真值表達式不成立(x &gt;= 11),則執行 (不執行)</span></span><br><span class=\"line\"><span class=\"comment\">#     print(&#x27;列印結束&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">x = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> x &lt; <span class=\"number\">3</span>:    <span class=\"comment\"># 外層迴圈</span></span><br><span class=\"line\">    <span class=\"comment\"># print(x, end=&#x27; &#x27;)</span></span><br><span class=\"line\">    y = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> y &lt;= <span class=\"number\">2</span>:   <span class=\"comment\"># 內層迴圈</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> y == <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span>   <span class=\"comment\"># 終止內層迴圈</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(y, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">        y += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span>   <span class=\"comment\"># 終止外層迴圈</span></span><br><span class=\"line\">    x += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>      <span class=\"comment\"># 終止外層迴圈</span></span><br><span class=\"line\"><span class=\"comment\"># else:</span></span><br><span class=\"line\"><span class=\"comment\">#     break   # break只能用在迴圈中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">break終止哪層迴圈:</span></span><br><span class=\"line\"><span class=\"string\">    break是在哪個迴圈的[循環體]中</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"總結\"><a href=\"#總結\" class=\"headerlink\" title=\"總結\"></a>總結</h3><ul>\n<li>不同點 break語句：用來終止當前迴圈。</li>\n<li>continue語句：跳出本次迴圈繼續下一次迴圈。</li>\n</ul>\n<p>相同點 :</p>\n<ol>\n<li>break語句與continue語句都是使用在while、for迴圈中 </li>\n<li>break語句與continue語句之後的語句不在執行</li>\n</ol>\n<h2 id=\"continue-語句\"><a href=\"#continue-語句\" class=\"headerlink\" title=\"continue 語句\"></a>continue 語句</h2><blockquote>\n<p>跳過本次，繼續下次迴圈。</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># continue語句</span></span><br><span class=\"line\"><span class=\"comment\"># - 作用：跳過本次迴圈，繼續下一次新的迴圈</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 說明：</span></span><br><span class=\"line\"><span class=\"comment\">#   - 1、continue語句執行後將不再執行本次迴圈內continue之後的語句</span></span><br><span class=\"line\"><span class=\"comment\">#   - 2、在while語句中，執行continue將會直接跳轉到while語句的真值表達式處重新判斷迴圈條件</span></span><br><span class=\"line\"><span class=\"comment\">#   - 3、continue語句只能在迴圈(while for語句)內部使用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 需求:列印1-10之間除了4以外的整數</span></span><br><span class=\"line\">x = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> x &lt; <span class=\"number\">9</span>:</span><br><span class=\"line\">    x += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x == <span class=\"number\">4</span>:</span><br><span class=\"line\">        <span class=\"keyword\">continue</span>   <span class=\"comment\"># 跳過本次迴圈,開啟一次新的迴圈(while)</span></span><br><span class=\"line\">        <span class=\"comment\"># print(&#x27;執行了continue語句&#x27;)  # 不執行</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(x, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># else:</span></span><br><span class=\"line\">    <span class=\"comment\"># continue    # continue只能使用在迴圈中</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"for-語句\"><a href=\"#for-語句\" class=\"headerlink\" title=\"for 語句\"></a>for 語句</h2><ul>\n<li><p>作用:<br>用來遍歷可反覆運算物件的資料元素。<br>可反覆運算物件是指能依次獲取資料元素的對象，例如：容器類型。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> 變數清單 <span class=\"keyword\">in</span> 可反覆運算物件： </span><br><span class=\"line\">\t循環體 </span><br><span class=\"line\"><span class=\"keyword\">else</span> ： </span><br><span class=\"line\">\t語句塊</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>說明:<br>else子句可以省略。<br>在循環體內用break終止迴圈時,else子句不執行。</p>\n</li>\n</ul>\n<h2 id=\"可反覆運算物件-可迭代對象\"><a href=\"#可反覆運算物件-可迭代對象\" class=\"headerlink\" title=\"可反覆運算物件 (可迭代對象)\"></a>可反覆運算物件 (可迭代對象)</h2><p>指能依次獲取資料的物件，包括：<br>非空字串str、 非空列表list、 非空元組tuple、 非空字典dict、 非空集合set、 反覆運算器等。</p>\n<p>執行流程 </p>\n<ol>\n<li>變數依次接收可反覆運算物件給出的元素，然後執行循環體；</li>\n<li>可反覆運算物件不能提供資料元素後，執行else子句部分語句，然後退出迴圈； </li>\n<li>else子句部分可省略</li>\n</ol>\n<h2 id=\"range-函數\"><a href=\"#range-函數\" class=\"headerlink\" title=\"range 函數\"></a>range 函數</h2><p>作用:</p>\n<ul>\n<li>用來創建一個生成一系列整數的可反覆運算物件(也叫整數序列生成器)。</li>\n</ul>\n<p>語法:</p>\n<blockquote>\n<p>range(開始點，結束點，間隔)</p>\n</blockquote>\n<p>說明:</p>\n<ul>\n<li>函數返回的可反覆運算物件可以用for取出其中的元素</li>\n<li>返回的數位不包含結束點</li>\n<li>開始點默認為0</li>\n<li>間隔預設值為1</li>\n</ul>\n<p>參數： </p>\n<ol>\n<li>start：起始值，默認為0，可以省略 </li>\n<li>stop：終止值，必須存在，且終止值無法取得 </li>\n<li>step：步長，默認為1，可正可負，可以省略 <ul>\n<li>返回值：一個整數的range物件</li>\n<li>說明：從start開始，每次生成一個整數後移動step，直到stop為止</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"練習題\"><a href=\"#練習題\" class=\"headerlink\" title=\"練習題\"></a>練習題</h3><ul>\n<li><p>第一題 : 猜數字2.0版本<br>        如果猜錯次數超過5次，則結束遊戲，並提示“失敗了”</p>\n</li>\n<li><p>第二題 : 列印數位矩形，輸入邊長,列印對應邊長的數字矩形</p>\n</li>\n<li><p>第三題 : 使下列代碼迴圈執行，直到錄入“exit”退出程式。<br>         season &#x3D; input(“請輸入季度：”)<br>         if season &#x3D;&#x3D; “春”:<br>         print(“1月2月3月”)<br>         elif season &#x3D;&#x3D; “夏”:<br>         print(“4月5月6月”)<br>         elif season &#x3D;&#x3D; “秋”:<br>         print(“7月8月9月”)<br>         elif season &#x3D;&#x3D; “冬”:<br>         print(“10月11月12月”)</p>\n</li>\n<li><p>第四題 :<br>         在控制台中輸出：0 1 2 3 4 5<br>         在控制台中輸出：2 3 4 5 6 7<br>         在控制台中輸出：0 2 4 6<br>         在控制台中輸出：4 3 2 1 0<br>         在控制台中輸出：-1  -2  -3  -4</p>\n</li>\n<li><p>第五題 : 在控制台中，獲取一個開始值，一個結束值。<br>        將中間的數字列印出來。<br>        輸入：3               9<br>        輸出：  4 5 6 7 8</p>\n</li>\n<li><p>第六題 : 一張紙的厚度是0.01毫米，請計算對折多少次，超過珠穆朗瑪峰8844.43米。<br>       答案：30</p>\n</li>\n<li><p>第七題 : 打印1-21之間的所有整數,每5個數一行</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    第一題:猜數字2.0版本</span></span><br><span class=\"line\"><span class=\"string\">\t\t       如果猜錯次數超過5次，則結束遊戲，並提示“失敗了”</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\">random_number = random.randint(<span class=\"number\">1</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(random_number)</span><br><span class=\"line\">count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> count &lt; <span class=\"number\">5</span>:</span><br><span class=\"line\">    count += <span class=\"number\">1</span></span><br><span class=\"line\">    input_number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入數位：&quot;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> input_number &gt; random_number:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;大了&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> input_number &lt; random_number:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;小了&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;猜對了，總共猜了&quot;</span> + <span class=\"built_in\">str</span>(count) + <span class=\"string\">&quot;次&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 當迴圈不滿足條件時退出，才執行以下代碼</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;失敗了&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 第二題 : 列印數位矩形</span></span><br><span class=\"line\"><span class=\"comment\"># 輸入邊長,列印對應邊長的數字矩形</span></span><br><span class=\"line\"><span class=\"comment\"># 如: 邊長為4</span></span><br><span class=\"line\"><span class=\"comment\">#   0 1 2 3     [col&lt;side+row]</span></span><br><span class=\"line\"><span class=\"comment\">#   1 2 3 4     [col&lt;side+row]</span></span><br><span class=\"line\"><span class=\"comment\">#   2 3 4 5     [col&lt;side+row]</span></span><br><span class=\"line\"><span class=\"comment\">#   3 4 5 6     [col&lt;side+row]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">分析</span></span><br><span class=\"line\"><span class=\"string\">                  起始條件      結束條件      控制因素</span></span><br><span class=\"line\"><span class=\"string\">    外層迴圈(row)   row=0       row&lt;side      行</span></span><br><span class=\"line\"><span class=\"string\">    內層迴圈(col)   col=row     col&lt;side+row  列 [難點]</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">side = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入邊長:&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">row = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> row &lt; side:</span><br><span class=\"line\">    col = row</span><br><span class=\"line\">    <span class=\"keyword\">while</span> col &lt; side + row:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(col, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">        col += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>()</span><br><span class=\"line\">    row += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 思考:當數字超過2位元數,則取個位</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">第三題 : 使下列代碼迴圈執行，直到錄入“exit”退出程式。</span></span><br><span class=\"line\"><span class=\"string\">    season = input(&quot;請輸入季度：&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    if season == &quot;春&quot;:</span></span><br><span class=\"line\"><span class=\"string\">        print(&quot;1月2月3月&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    elif season == &quot;夏&quot;:</span></span><br><span class=\"line\"><span class=\"string\">        print(&quot;4月5月6月&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    elif season == &quot;秋&quot;:</span></span><br><span class=\"line\"><span class=\"string\">        print(&quot;7月8月9月&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    elif season == &quot;冬&quot;:</span></span><br><span class=\"line\"><span class=\"string\">        print(&quot;10月11月12月&quot;)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    season = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入季度：&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> season == <span class=\"string\">&quot;春&quot;</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;1月2月3月&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> season == <span class=\"string\">&quot;夏&quot;</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;4月5月6月&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> season == <span class=\"string\">&quot;秋&quot;</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;7月8月9月&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> season == <span class=\"string\">&quot;冬&quot;</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;10月11月12月&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入exit退出：&quot;</span>) == <span class=\"string\">&quot;exit&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">第四題 :</span></span><br><span class=\"line\"><span class=\"string\">    在控制台中輸出：0 1 2 3 4 5</span></span><br><span class=\"line\"><span class=\"string\">    在控制台中輸出：2 3 4 5 6 7</span></span><br><span class=\"line\"><span class=\"string\">    在控制台中輸出：0 2 4 6</span></span><br><span class=\"line\"><span class=\"string\">    在控制台中輸出：4 3 2 1 0</span></span><br><span class=\"line\"><span class=\"string\">    在控制台中輸出：-1  -2  -3  -4</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> count &lt;=<span class=\"number\">5</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(count)</span><br><span class=\"line\">    count +=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">count = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> count &lt;=<span class=\"number\">7</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(count)</span><br><span class=\"line\">    count +=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> count &lt;= <span class=\"number\">6</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(count)</span><br><span class=\"line\">    count += <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">count = <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> count &gt;= <span class=\"number\">0</span>:<span class=\"comment\"># 4  &gt;= 0</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(count)</span><br><span class=\"line\">    count -=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">count = -<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> count &gt;= -<span class=\"number\">4</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(count)</span><br><span class=\"line\">    count -=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">**<span class=\"string\">&quot;&quot;&quot;**</span></span><br><span class=\"line\"><span class=\"string\">    第五題 :**在控制台中，獲取一個開始值，一個結束值。</span></span><br><span class=\"line\"><span class=\"string\">    將中間的數字列印出來。</span></span><br><span class=\"line\"><span class=\"string\">    輸入：3           9</span></span><br><span class=\"line\"><span class=\"string\">    輸出：  4 5 6 7 8</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">start = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入開始值：&quot;</span>))  <span class=\"comment\"># 3</span></span><br><span class=\"line\">stop = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入結束值：&quot;</span>))  <span class=\"comment\"># 9</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"># 3 --&gt; 9</span></span><br><span class=\"line\"><span class=\"string\">while start &lt; stop - 1:</span></span><br><span class=\"line\"><span class=\"string\">    start += 1</span></span><br><span class=\"line\"><span class=\"string\">    print(start)</span></span><br><span class=\"line\"><span class=\"string\"># 9 --&gt; 3</span></span><br><span class=\"line\"><span class=\"string\">while start &gt; stop +1:</span></span><br><span class=\"line\"><span class=\"string\">    start -=1</span></span><br><span class=\"line\"><span class=\"string\">    print(start)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">dir</span> = <span class=\"number\">1</span> <span class=\"keyword\">if</span> start &lt; stop <span class=\"keyword\">else</span> -<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> start != stop - <span class=\"built_in\">dir</span>:</span><br><span class=\"line\">    start += <span class=\"built_in\">dir</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(start)**</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">第六題 :一張紙的厚度是0.01毫米，請計算對折多少次，超過珠穆朗瑪峰8844.43米。</span></span><br><span class=\"line\"><span class=\"string\">答案：30次</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># thickness = 0.01 / 1000</span></span><br><span class=\"line\">thickness = <span class=\"number\">1e-5</span></span><br><span class=\"line\">count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> thickness &lt;  <span class=\"number\">8844.43</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 對折一次</span></span><br><span class=\"line\">    thickness *= <span class=\"number\">2</span></span><br><span class=\"line\">    count +=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;第&quot;</span>+<span class=\"built_in\">str</span>(count)+<span class=\"string\">&quot;次對折的厚度是：&quot;</span>+<span class=\"built_in\">str</span>(thickness))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(count)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 第七題 :打印1-21之间的所有整数,每5个数一行</span></span><br><span class=\"line\"><span class=\"comment\"># 1  2  3  4  5</span></span><br><span class=\"line\"><span class=\"comment\"># 6  7  8  9  10</span></span><br><span class=\"line\"><span class=\"comment\"># 11 12 13 14 15</span></span><br><span class=\"line\"><span class=\"comment\"># 16 17 18 19 20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分析:</span></span><br><span class=\"line\"><span class=\"comment\"># 1 循环1-21之间的整数</span></span><br><span class=\"line\"><span class=\"comment\"># 2 循环当数为5的倍数时换行,否则不换行(end=&#x27; &#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># x = 1</span></span><br><span class=\"line\"><span class=\"comment\"># while x &lt;= 20:</span></span><br><span class=\"line\"><span class=\"comment\">#     # 因为是5的倍数,数打印完毕后才换行</span></span><br><span class=\"line\"><span class=\"comment\">#     print(x, end=&#x27;\\t&#x27;)    # &#x27;\\t&#x27; 水平制表符</span></span><br><span class=\"line\"><span class=\"comment\">#     if x % 5 == 0:</span></span><br><span class=\"line\"><span class=\"comment\">#         print()      # 换行,print函数参数end=&#x27;\\n&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#     x += 1</span></span><br><span class=\"line\"></span><br><span class=\"line\">x = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> x &lt;= <span class=\"number\">20</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(x, x+<span class=\"number\">1</span>, x+<span class=\"number\">2</span>, x+<span class=\"number\">3</span>, x+<span class=\"number\">4</span>, sep=<span class=\"string\">&#x27;\\t&#x27;</span>)    <span class=\"comment\"># &#x27;\\t&#x27; 水平制表符</span></span><br><span class=\"line\">    x += <span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n\n","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day02_05_登入驗證","url":"/2021/12/26/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day02-05-%E7%99%BB%E5%85%A5%E9%A9%97%E8%AD%89/","content":"<h2 id=\"登錄驗證\"><a href=\"#登錄驗證\" class=\"headerlink\" title=\"登錄驗證\"></a>登錄驗證</h2><p>第1次可以輸入用戶名與密碼<code>（輸入的總次數不能超過3次）</code><br>    <span id=\"more\"></span><br>如果用戶名與密碼錯誤，提示：用戶名用戶名錯誤<br>如果用戶名正確，密碼錯誤，不用輸入用戶名，驗證密碼<br>在3次機會之內，如果用戶名與密碼正確，則提示：登錄成功<br>每次輸入列印剩餘多少次機會？<br>如果3次機會用完，列印：帳號被鎖定，程式結束</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 初始設置一個用戶名與密碼</span></span><br><span class=\"line\">init_name = <span class=\"string\">&#x27;cctv&#x27;</span></span><br><span class=\"line\">init_pwd = <span class=\"string\">&#x27;4567&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 記錄次數的變數</span></span><br><span class=\"line\">times = <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> times &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">    uname = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入用戶名:&#x27;</span>)</span><br><span class=\"line\">    upwd = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入密碼:&#x27;</span>)</span><br><span class=\"line\">    times -= <span class=\"number\">1</span>   <span class=\"comment\"># 操作1次,次數減1次</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> uname == init_name:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> upwd == init_pwd:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;登錄成功!&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">break</span>   <span class=\"comment\"># 終止外層迴圈</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:   <span class=\"comment\"># 密碼錯誤</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;剩餘次數:&#x27;</span>, times)</span><br><span class=\"line\">            <span class=\"keyword\">while</span> times &gt; <span class=\"number\">0</span>:   <span class=\"comment\"># 只需要驗證密碼(用戶名正確)</span></span><br><span class=\"line\">                upwd = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請再次輸入密碼:&#x27;</span>)</span><br><span class=\"line\">                times -= <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> upwd == init_pwd:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;登錄成功!&#x27;</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>   <span class=\"comment\"># 終止內層迴圈</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> times &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;剩餘次數:&#x27;</span>, times)</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> times == <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;帳號已被鎖定&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">break</span>   <span class=\"comment\"># 終止外層迴圈</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:   <span class=\"comment\"># 用戶名錯誤</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;用戶名或密碼錯誤!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> times &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;剩餘次數:&#x27;</span>, times)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;帳號被鎖定&#x27;</span>)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day03_01_For循環","url":"/2021/12/27/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day03-01-For%E5%BE%AA%E7%92%B0/","content":"<h2 id=\"for迴圈嵌套\"><a href=\"#for迴圈嵌套\" class=\"headerlink\" title=\"for迴圈嵌套\"></a>for迴圈嵌套</h2><blockquote>\n<p>再次複習</p>\n</blockquote>\n<ul>\n<li><p>作用:<br>用來遍歷可反覆運算物件的資料元素。<br>可反覆運算物件是指能依次獲取資料元素的對象，例如：容器類型。</p>\n<span id=\"more\"></span>\n<p>語法 : </p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> 變數清單 <span class=\"keyword\">in</span> 可反覆運算物件: </span><br><span class=\"line\">\t<span class=\"keyword\">for</span> 變數清單 <span class=\"keyword\">in</span> 可反覆運算物件:</span><br><span class=\"line\">\t\t循環體 </span><br><span class=\"line\">\t<span class=\"keyword\">else</span>: </span><br><span class=\"line\">\t\t語句塊 </span><br><span class=\"line\"><span class=\"keyword\">else</span>: </span><br><span class=\"line\">\t語句塊</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>說明:<br>else子句可以省略。<br>在循環體內用break終止迴圈時,else子句不執行。</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># for迴圈</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> g <span class=\"keyword\">in</span> <span class=\"string\">&#x27;我是小貓咪&#x27;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(g)</span><br><span class=\"line\"><span class=\"keyword\">else</span>: <span class=\"comment\"># 否則,可省略</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;可反覆運算物件中無數據,則執行else&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 迴圈數字</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 需求:列印10以內的所有整數</span></span><br><span class=\"line\"><span class=\"comment\"># 注意:數位不是可反覆運算物件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 函數:range</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # 結構1: range(stop)</span></span><br><span class=\"line\"><span class=\"comment\"># # 說明: 默認從0開始,不包含stop值(int)(到stop-1結束)</span></span><br><span class=\"line\"><span class=\"comment\"># # 需求1:列印10以內的所有整數</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 結構2: range(start, stop)</span></span><br><span class=\"line\"><span class=\"comment\"># 說明: 默認從start開始,不包含stop值(int)(到stop-1結束),step默認為1</span></span><br><span class=\"line\"><span class=\"comment\"># 需求2:列印從5-10之間的所有整數</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>, <span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 結構3: range(start, stop, step)</span></span><br><span class=\"line\"><span class=\"comment\"># 說明: 默認從start開始,不包含stop值(int)(到stop-1結束),數據間隔step</span></span><br><span class=\"line\"><span class=\"comment\"># 需求3:列印從5-10之間的所有奇數</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>, <span class=\"number\">10</span>, <span class=\"number\">2</span>):   <span class=\"comment\"># step:默認為1, step=2,表示正向取值(數從小到大)</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>, <span class=\"number\">5</span>, -<span class=\"number\">2</span>):  <span class=\"comment\"># step=-2,表示反向取值(數從大到小)</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>):  <span class=\"comment\"># step方向與資料取值範圍方向相反</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>, <span class=\"number\">10</span>, -<span class=\"number\">1</span>):  <span class=\"comment\"># start與stop重合</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"># # break語句與continue語句</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># # break語句：終止當前迴圈</span></span><br><span class=\"line\"><span class=\"comment\"># # continue語句：跳過當前迴圈，繼續下一次迴圈</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>):  <span class=\"comment\"># i=1 2 3 4 5 6 7 8 9</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> i == <span class=\"number\">4</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"comment\"># print(&#x27;break語句執行了&#x27;)  # 不執行</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:  <span class=\"comment\"># 可反覆運算物件中無數據,則執行</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;迴圈結束&#x27;</span>)  <span class=\"comment\"># 不執行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # 不列印4,其他的數都列印</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>):  <span class=\"comment\"># i=1 2 3 4 5 6 7 8 9</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> i == <span class=\"number\">4</span>:</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"comment\"># print(&#x27;continue語句執行了&#x27;)  # 不執行</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>:  <span class=\"comment\"># 可反覆運算物件中無數據,則執行</span></span><br><span class=\"line\">     <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;迴圈結束&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># x給定後,range函數中stop就固定了</span></span><br><span class=\"line\">x = <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(x):  <span class=\"comment\"># range(5)  0 1 2 3 4</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    x -= <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    continue </span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 累加1 --50</span></span><br><span class=\"line\">sum_value = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">51</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> item % <span class=\"number\">5</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        sum_value += item</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sum_value)</span><br><span class=\"line\"></span><br><span class=\"line\">sum_value = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">51</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 如果不滿足累加條件，那麼跳過當前數字</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> item % <span class=\"number\">5</span> != <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">    sum_value += item</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sum_value)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"># for迴圈 + if語句</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 1、迴圈列印 1 - 10 之間的所有偶數</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2、計算 20 以內不能被2、5整除的數之和</span></span><br><span class=\"line\">total = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">20</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> x % <span class=\"number\">2</span> != <span class=\"number\">0</span> <span class=\"keyword\">and</span> x % <span class=\"number\">5</span> != <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"comment\"># print(x)</span></span><br><span class=\"line\">        total += x</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(total)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    for for 嵌套</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 外層迴圈控制行</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>):<span class=\"comment\">#012</span></span><br><span class=\"line\">    <span class=\"comment\"># 內層迴圈控制列</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>):  <span class=\"comment\"># 01234</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;*&quot;</span>, end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>()</span><br></pre></td></tr></table></figure>\n<h2 id=\"練習題\"><a href=\"#練習題\" class=\"headerlink\" title=\"練習題\"></a>練習題</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"># for迴圈嵌套</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 1 列印4行4列的小星星</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">                起始值      結束值      意義</span></span><br><span class=\"line\"><span class=\"string\">    外層迴圈(x)     1         5         行</span></span><br><span class=\"line\"><span class=\"string\">    內層迴圈(y)     0         4         列</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">5</span>):  <span class=\"comment\"># x=1 2 3 4</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):  <span class=\"comment\"># y=0 1 2 3</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;*&#x27;</span>, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">times = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> times &lt; <span class=\"number\">4</span>:  <span class=\"comment\"># 外層迴圈:控制行</span></span><br><span class=\"line\">    x = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> x &lt; <span class=\"number\">4</span>:  <span class=\"comment\"># 內層迴圈:控制列</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;*&#x27;</span>, end=<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">        x += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>()   <span class=\"comment\"># 換行</span></span><br><span class=\"line\">    times += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 99乘法表</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">                起始值      結束值       意義</span></span><br><span class=\"line\"><span class=\"string\">    外層迴圈(x)     1         10        乘數</span></span><br><span class=\"line\"><span class=\"string\">    內層迴圈(y)     1         x+1       被乘數</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br><span class=\"line\"><span class=\"string\">    被乘數 x 乘數 = 積</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>):   <span class=\"comment\"># 乘數(行)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, x+<span class=\"number\">1</span>):  <span class=\"comment\">#　被乘數(列)</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(y, <span class=\"string\">&#x27;x&#x27;</span>, x, <span class=\"string\">&#x27;=&#x27;</span>, x*y, end=<span class=\"string\">&#x27;\\t&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列印 1 2 3 合成多少個每位元都不相同的組合</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">4</span>):   <span class=\"comment\"># 最高位</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">4</span>):  <span class=\"comment\"># 中間位</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">4</span>):  <span class=\"comment\"># 最低位</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> i != j <span class=\"keyword\">and</span> j != k <span class=\"keyword\">and</span> i != k:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(i, j, k)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">迴圈嵌套:</span></span><br><span class=\"line\"><span class=\"string\">    外層迴圈執行1次,內層迴圈執行1圈</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    練習2:迴圈計數</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># range(開始值,結束值,間隔)  不能包含結束值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># range(結束值)  開始值默認為0,間隔默認1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>,<span class=\"number\">10</span>,<span class=\"number\">2</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">8</span>,<span class=\"number\">1</span>,-<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">練習3:在終端中獲取任意整數，累加每位元數位。</span></span><br><span class=\"line\"><span class=\"string\">輸入：“12345”</span></span><br><span class=\"line\"><span class=\"string\">輸出：15</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">number = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入整數：&quot;</span>)</span><br><span class=\"line\">sum_value = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> number:</span><br><span class=\"line\">    <span class=\"comment\"># “1” --&gt; 1</span></span><br><span class=\"line\">    sum_value += <span class=\"built_in\">int</span>(item)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;結果是：&quot;</span>+<span class=\"built_in\">str</span>(sum_value))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">練習4:</span></span><br><span class=\"line\"><span class=\"string\">迴圈累加下列數位的和：0 1 2 3 4 5</span></span><br><span class=\"line\"><span class=\"string\">迴圈累加下列數位的和： 2 3 4 5 6 7</span></span><br><span class=\"line\"><span class=\"string\">迴圈累加下列數位的和： 0 2 4 6</span></span><br><span class=\"line\"><span class=\"string\">迴圈累加下列數位的和： 4 3 2 1 0</span></span><br><span class=\"line\"><span class=\"string\">迴圈累加下列數位的和： -1  -2  -3  -4</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">sum_value = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">6</span>):</span><br><span class=\"line\">    sum_value += item</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sum_value)</span><br><span class=\"line\"></span><br><span class=\"line\">sum_value = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>,<span class=\"number\">8</span>):</span><br><span class=\"line\">    sum_value += item</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sum_value)</span><br><span class=\"line\"></span><br><span class=\"line\">sum_value = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">7</span>,<span class=\"number\">2</span>):</span><br><span class=\"line\">    sum_value += item</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sum_value)</span><br><span class=\"line\"></span><br><span class=\"line\">sum_value = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>,-<span class=\"number\">1</span>,-<span class=\"number\">1</span>):</span><br><span class=\"line\">    sum_value += item</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sum_value)</span><br><span class=\"line\"></span><br><span class=\"line\">sum_value = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(-<span class=\"number\">1</span>,-<span class=\"number\">5</span>,-<span class=\"number\">1</span>):</span><br><span class=\"line\">    sum_value += item</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sum_value)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">練習5:累加10-50之間個位不是2,5,9的整數.</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">sum_value = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>,<span class=\"number\">51</span>):</span><br><span class=\"line\">    unit = item % <span class=\"number\">10</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> unit ==<span class=\"number\">2</span> <span class=\"keyword\">or</span> unit ==<span class=\"number\">5</span> <span class=\"keyword\">or</span> unit == <span class=\"number\">9</span>:</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">    sum_value += item</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sum_value)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">練習6:</span></span><br><span class=\"line\"><span class=\"string\">    隨機產生兩個數位(1--10),</span></span><br><span class=\"line\"><span class=\"string\">    在控制台中獲取兩個數相加的結果</span></span><br><span class=\"line\"><span class=\"string\">    如果用戶輸入正確得10分,否則扣5分。</span></span><br><span class=\"line\"><span class=\"string\">    總共３道題，最後輸出得分.</span></span><br><span class=\"line\"><span class=\"string\">    例如:“請輸入8+3=?” 11  得10分</span></span><br><span class=\"line\"><span class=\"string\">       　　&quot;請輸入4+3=?&quot;   8   扣5分</span></span><br><span class=\"line\"><span class=\"string\">       　　&quot;請輸入4+4=?&quot;   8   得10分</span></span><br><span class=\"line\"><span class=\"string\">        　 &quot;總分是15&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\">score = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>):<span class=\"comment\">#0 1 2</span></span><br><span class=\"line\">    random_number01 = random.randint(<span class=\"number\">1</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">    random_number02 = random.randint(<span class=\"number\">1</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">    input_number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入&quot;</span> + <span class=\"built_in\">str</span>(random_number01) + <span class=\"string\">&quot;+&quot;</span> + <span class=\"built_in\">str</span>(random_number02) + <span class=\"string\">&quot;=?&quot;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> input_number == random_number01 + random_number02:</span><br><span class=\"line\">        score += <span class=\"number\">10</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        score -= <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;總分是&quot;</span>+<span class=\"built_in\">str</span>(score))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">練習7:</span></span><br><span class=\"line\"><span class=\"string\">在終端中錄入一個整數，判斷是否為素數。</span></span><br><span class=\"line\"><span class=\"string\">素數:只能被１和自身整除的正數.</span></span><br><span class=\"line\"><span class=\"string\">思路：排除法,使用２到當前數字之間的正數判斷，如果存在被整除，則不是素數.</span></span><br><span class=\"line\"><span class=\"string\">判斷9：</span></span><br><span class=\"line\"><span class=\"string\">     能否被2　--  8 之間的數字整除,其中3可以，所以不是素數.</span></span><br><span class=\"line\"><span class=\"string\">判斷８:</span></span><br><span class=\"line\"><span class=\"string\">     能否被2　--  7 之間的數字整除,其中2可以，所以不是素數.</span></span><br><span class=\"line\"><span class=\"string\">判斷7:</span></span><br><span class=\"line\"><span class=\"string\">     能否被2　--  6 之間的數字整除,其中沒有，所以是素數.</span></span><br><span class=\"line\"><span class=\"string\">2   3   5  7  11  13  15 ....</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入整數：&quot;</span>))  <span class=\"comment\"># 5      9       7</span></span><br><span class=\"line\"><span class=\"comment\"># 2 3 4                  2 3                 2 3 4 5 6</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>, number):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> number % i == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;不是素數&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;是素數&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">練習8:</span></span><br><span class=\"line\"><span class=\"string\">    一個小球從100m的高度落下，每次彈回原高度一半。</span></span><br><span class=\"line\"><span class=\"string\">    請計算：</span></span><br><span class=\"line\"><span class=\"string\">\t總共經過多少次，最終落地(最小彈起高度0.01m)</span></span><br><span class=\"line\"><span class=\"string\">\t總共經過多少米。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">height = <span class=\"number\">100</span></span><br><span class=\"line\">count = <span class=\"number\">0</span></span><br><span class=\"line\">distance = height</span><br><span class=\"line\"><span class=\"comment\"># 判斷彈起來高度</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> height / <span class=\"number\">2</span> &gt; <span class=\"number\">0.01</span>:</span><br><span class=\"line\">    height /= <span class=\"number\">2</span>  <span class=\"comment\"># 彈回原高度一半</span></span><br><span class=\"line\">    count += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;第&quot;</span> + <span class=\"built_in\">str</span>(count) + <span class=\"string\">&quot;次彈起來的高度是&quot;</span> + <span class=\"built_in\">str</span>(height) + <span class=\"string\">&quot;.&quot;</span>)</span><br><span class=\"line\">    distance += height * <span class=\"number\">2</span>  <span class=\"comment\"># 累加起落距離</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;總共經過&quot;</span> + <span class=\"built_in\">str</span>(count) + <span class=\"string\">&quot;次&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;總共經過&quot;</span> + <span class=\"built_in\">str</span>(distance) + <span class=\"string\">&quot;米&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">練習9:</span></span><br><span class=\"line\"><span class=\"string\">在控制台中獲取一個整數作為邊長，列印矩形。</span></span><br><span class=\"line\"><span class=\"string\">輸入：4</span></span><br><span class=\"line\"><span class=\"string\">輸出：</span></span><br><span class=\"line\"><span class=\"string\">    ****</span></span><br><span class=\"line\"><span class=\"string\">    *  *</span></span><br><span class=\"line\"><span class=\"string\">    *  *</span></span><br><span class=\"line\"><span class=\"string\">    ****</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入邊長:&quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;*&quot;</span> * number)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(number -<span class=\"number\">2</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;*&quot;</span> + <span class=\"string\">&quot; &quot;</span> * (number -<span class=\"number\">2</span>) + <span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;*&quot;</span> * number)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">#   練習10:列印 20 - 1（包含）之間所有能被3整除的整數</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">20</span>, <span class=\"number\">0</span>, -<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> x % <span class=\"number\">3</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#2列印 -5 - 2 之間的所有整數</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(-<span class=\"number\">5</span>, <span class=\"number\">2</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#3 列印 10 之間的所有能被2整除的數</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> x % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">10</span>, <span class=\"number\">2</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">10</span>, <span class=\"number\">0</span>):  <span class=\"comment\"># step不能為0</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day03_02_字符串","url":"/2021/12/27/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day03-02-%E5%AD%97%E7%AC%A6%E4%B8%B2/","content":"<h2 id=\"定義\"><a href=\"#定義\" class=\"headerlink\" title=\"定義\"></a>定義</h2><p>由一系列字元組成的不可變序列容器，存儲的是字元的編碼值。</p>\n<span id=\"more\"></span>\n<h2 id=\"編碼\"><a href=\"#編碼\" class=\"headerlink\" title=\"編碼\"></a>編碼</h2><ol>\n<li>位元組byte：電腦最小存儲單位，等於8 位元</li>\n<li>字元：單個的數位，文字與符號。</li>\n<li>字元集(碼表)：存儲字元與二進位序列的對應關係。</li>\n<li>編碼：將字元轉換為對應的二進位序列的過程。</li>\n<li>解碼：將二進位序列轉換為對應的字元的過程。</li>\n<li>編碼方式：</li>\n</ol>\n<ul>\n<li>-ASCII編碼：包含英文、數位等字元，每個字元1個位元組。<br>–GBK編碼：相容ASCII編碼，包含21003個中文；英文1個位元組，漢字2個位元組。<br>–Unicode字元集：國際統一編碼，舊字元集每個字元2位元組，新字元集4位元組。<br>–UTF-8編碼：Unicode的存儲與傳輸方式，英文1位元組，中文3位元組。</li>\n</ul>\n<h2 id=\"相關函數\"><a href=\"#相關函數\" class=\"headerlink\" title=\"相關函數\"></a>相關函數</h2><ol>\n<li>ord(字串):返回該字串的Unicode碼。</li>\n<li>chr(整數):返回該整數對應的字串。</li>\n</ol>\n<h2 id=\"單引和雙引號的區別\"><a href=\"#單引和雙引號的區別\" class=\"headerlink\" title=\"單引和雙引號的區別\"></a>單引和雙引號的區別</h2><ol>\n<li>單引號內的雙引號不算結束符</li>\n<li>雙引號內的單引號不算結束符</li>\n</ol>\n<h2 id=\"三引號作用\"><a href=\"#三引號作用\" class=\"headerlink\" title=\"三引號作用\"></a>三引號作用</h2><ol>\n<li>換行會自動轉換為分行符號\\n</li>\n<li>三引號內可以包含單引號和雙引號</li>\n<li>作為文檔字串</li>\n</ol>\n<h2 id=\"轉義字元\"><a href=\"#轉義字元\" class=\"headerlink\" title=\"轉義字元\"></a>轉義字元</h2><ul>\n<li><p>改變字元的原始含義。<br>          \\’  \\”  \\”””  \\n  \\  \\t  \\0 空字元</p>\n</li>\n<li><p>原始字串：取消轉義。<br>          a &#x3D; r”C:\\newfile\\test.py”</p>\n</li>\n</ul>\n<h2 id=\"字串格式化\"><a href=\"#字串格式化\" class=\"headerlink\" title=\"字串格式化\"></a>字串格式化</h2><ul>\n<li><p>定義：<br>生成一定格式的字串。</p>\n</li>\n<li><p>語法：<br>字串%(變數)<br>          “我的名字是%s,年齡是%s” % (name, age)</p>\n</li>\n<li><p>類型碼：</p>\n</li>\n<li><p>%s 字串     %d整數     %f 浮點數</p>\n</li>\n</ul>\n<h2 id=\"實際範例\"><a href=\"#實際範例\" class=\"headerlink\" title=\"實際範例:\"></a>實際範例:</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    字串編碼</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 字 --&gt; 數</span></span><br><span class=\"line\">number = <span class=\"built_in\">ord</span>(<span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(number)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 數 --&gt; 字</span></span><br><span class=\"line\">str01 = <span class=\"built_in\">chr</span>(<span class=\"number\">3498573945793475</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(str01)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    字串字面值</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">name01 = <span class=\"string\">&quot;悟空&quot;</span></span><br><span class=\"line\">name02 = <span class=\"string\">&#x27;悟空&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 三引號：可見即所得</span></span><br><span class=\"line\">name03 = <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">   悟</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">空&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(name03)</span><br><span class=\"line\">name03 = <span class=\"string\">&quot;&quot;&quot;悟空&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">message = <span class=\"string\">&#x27;我是&quot;齊天大聖&quot;孫悟空.&#x27;</span></span><br><span class=\"line\">message = <span class=\"string\">&quot;我是&#x27;齊天大聖&#x27;孫悟空.&quot;</span></span><br><span class=\"line\">message = <span class=\"string\">&#x27;&#x27;&#x27;我是&#x27;齊天大聖&#x27;&quot;孫悟空&quot;.&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 轉義符：改變原有含義的特殊字元</span></span><br><span class=\"line\"><span class=\"comment\"># \\&quot;   \\&#x27;    水準制表格\\t    換行\\n    \\\\</span></span><br><span class=\"line\">message = <span class=\"string\">&quot;我是\\&quot;齊天\\n大聖\\&quot;孫\\t悟空.&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(message)</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">&quot;c:\\\\a\\\\b\\c\\d\\\\a.txt&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(url)</span><br><span class=\"line\"><span class=\"comment\"># 原是字串(沒有轉義符)</span></span><br><span class=\"line\">url = <span class=\"string\">r&quot;c:\\a\\b\\c\\d\\a.txt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 格式化字串</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;..%d...%s...%f..&quot;%(整數變數,字串變數,小數變數)</span></span><br><span class=\"line\"><span class=\"comment\"># 1 + 2 = 3</span></span><br><span class=\"line\">number_one = <span class=\"number\">1</span></span><br><span class=\"line\">number_two = <span class=\"number\">2</span></span><br><span class=\"line\">str_resutl = <span class=\"string\">&quot;%d + %d = %d&quot;</span>%(number_one,number_two,number_one +number_two)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(str_resutl)</span><br><span class=\"line\"></span><br><span class=\"line\">name = <span class=\"string\">&quot;張小盒&quot;</span></span><br><span class=\"line\">age = <span class=\"number\">25</span></span><br><span class=\"line\">score = <span class=\"number\">95.5</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;我叫%s今年%d歲了，考試%.1f。&quot;</span>%(name,age,score))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 字串 - str</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # 表示方式</span></span><br><span class=\"line\"><span class=\"comment\"># # 單引號中可嵌套雙引號，雙引號中可嵌套單引號（內容中有誰不用誰）。</span></span><br><span class=\"line\"><span class=\"comment\"># # 三引號：可實現自動換行（分行符號 \\n），三引號可嵌套單引號與雙引號；用作文檔字串【所見及所得】</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"> s1 = <span class=\"string\">&#x27;hello, baby~&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s1, <span class=\"built_in\">type</span>(s1))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># s4 = &#x27;&#x27;&#x27;python class</span></span><br><span class=\"line\"><span class=\"comment\"># 1 python核心</span></span><br><span class=\"line\"><span class=\"comment\"># 2 python物件導向</span></span><br><span class=\"line\"><span class=\"comment\"># 3 python高級&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># print(s4, type(s4))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># 運算子</span></span><br><span class=\"line\"><span class=\"comment\"># +   拼接</span></span><br><span class=\"line\"> s1 = <span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\"> s2 = <span class=\"string\">&#x27;baby&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s1 + s2)</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s1 + <span class=\"number\">12</span>)   <span class=\"comment\"># str + int  不行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 檔路徑</span></span><br><span class=\"line\"> project_path = <span class=\"string\">&#x27;/home/tarena/AIDVN2111&#x27;</span></span><br><span class=\"line\"> file_path = <span class=\"string\">&#x27;/Day05/demo5_str.py&#x27;</span></span><br><span class=\"line\"> path = project_path + file_path</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;檔的路徑是:&#x27;</span>, path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># +=   將拼接的結果重新賦值給變數</span></span><br><span class=\"line\"> path = <span class=\"string\">&#x27;/home/tarena/blog&#x27;</span></span><br><span class=\"line\"> file_path = <span class=\"string\">&#x27;/Day05/demo5_str.py&#x27;</span></span><br><span class=\"line\"> path += file_path</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;檔的路徑是:&#x27;</span>, path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># *   重複    str * int</span></span><br><span class=\"line\"> word = <span class=\"string\">&#x27;我錯了&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(word * <span class=\"number\">100</span>)</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(word)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># *=</span></span><br><span class=\"line\"> word *= <span class=\"number\">10</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(word)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 比較運算子</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;10000&#x27;</span> &gt; <span class=\"string\">&quot;90&quot;</span>)</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;10000&#x27;</span> == <span class=\"string\">&quot;90&quot;</span>)</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;1&#x27;</span>))</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;9&#x27;</span>))</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;台&#x27;</span>))   <span class=\"comment\"># 21488</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(<span class=\"number\">21488</span>))  <span class=\"comment\"># &#x27;台&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># in/not in 運算子(重要)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;py&#x27;</span> <span class=\"keyword\">in</span> <span class=\"string\">&#x27;Python&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;py&#x27;</span> <span class=\"keyword\">in</span> <span class=\"string\">&#x27;python&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;no&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"string\">&#x27;python&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 字串 - str</span></span><br><span class=\"line\"><span class=\"comment\"># 作用: 描述文本資料</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 轉義字元 - \\字元  轉義功能</span></span><br><span class=\"line\"> path = <span class=\"string\">&#x27;C:\\teacher\\nature\\vector\\read.txt&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法1:</span></span><br><span class=\"line\"> path = <span class=\"string\">&#x27;C:\\\\teacher\\\\nature\\\\vector\\\\read.txt&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法2: - 讓轉義字元的功能失效 --源字元(raw)</span></span><br><span class=\"line\"> path = <span class=\"string\">r&#x27;C:\\teacher\\nature\\vector\\read.txt&#x27;</span></span><br><span class=\"line\"> path = <span class=\"string\">r&#x27;&#x27;&#x27;C:\\teacher\\nature\\vector\\read.txt&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # 索引 - 獲取索引值對應的單個字元</span></span><br><span class=\"line\"> s = <span class=\"string\">&#x27;Python&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;t=&#x27;</span>, s[<span class=\"number\">2</span>])</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;t=&#x27;</span>, s[-<span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;o=&#x27;</span>, s[<span class=\"number\">4</span>])</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;o=&#x27;</span>, s[-<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;P=&#x27;</span>, s[<span class=\"number\">0</span>])</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;P=&#x27;</span>, s[-<span class=\"number\">6</span>])</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # &#x27;就近原則&#x27; - 從哪邊索引方便,從哪邊開始</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;t=&#x27;</span>, s[<span class=\"number\">2</span>])</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;o=&#x27;</span>, s[-<span class=\"number\">2</span>])</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;P=&#x27;</span>, s[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # 計算字串長度 - len  [重點]</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(s))   <span class=\"comment\"># int</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # 注意:</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s[<span class=\"number\">8</span>])   <span class=\"comment\"># 索引值超出範圍 - 索引值越界</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s[-<span class=\"number\">8</span>])  <span class=\"comment\"># 索引值超出範圍 - 索引值越界</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # 索引值運算式 --&gt; 結果(str)</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s[-<span class=\"number\">5</span>])   <span class=\"comment\"># &#x27;y&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s[-<span class=\"number\">1</span>])   <span class=\"comment\"># &quot;n&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切片 - 獲取一定間隔或連續的字串</span></span><br><span class=\"line\"> s = <span class=\"string\">&#x27;Python&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s[:])    <span class=\"comment\"># &#x27;Python&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s[<span class=\"number\">2</span>:])    <span class=\"comment\"># &#x27;thon&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s[<span class=\"number\">2</span>:<span class=\"number\">5</span>])    <span class=\"comment\"># &#x27;tho&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s[<span class=\"number\">2</span>:-<span class=\"number\">1</span>])    <span class=\"comment\"># &#x27;tho&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s[<span class=\"number\">2</span>:-<span class=\"number\">1</span>:<span class=\"number\">2</span>])    <span class=\"comment\"># &#x27;to&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s[-<span class=\"number\">1</span>:<span class=\"number\">1</span>:-<span class=\"number\">2</span>])    <span class=\"comment\"># &#x27;nh&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s[:<span class=\"number\">1</span>:-<span class=\"number\">2</span>])       <span class=\"comment\"># &#x27;nh&#x27;</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s[::-<span class=\"number\">1</span>])         <span class=\"comment\"># &#x27;nohtyP&#x27;  [反向]</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;--&gt;&#x27;</span>, s[<span class=\"number\">1</span>:<span class=\"number\">5</span>:-<span class=\"number\">2</span>])   <span class=\"comment\"># &#x27;&#x27;  [切片方向與索引值範圍方向相反]</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;--&lt;&#x27;</span>, s[-<span class=\"number\">1</span>:<span class=\"number\">5</span>:-<span class=\"number\">2</span>])   <span class=\"comment\"># &#x27;&#x27;  [起始與終止索引值重合]</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(s[:<span class=\"number\">100</span>])             <span class=\"comment\"># &#x27;Python&#x27; [不推薦]</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;oy&#x27;</span>, s[-<span class=\"number\">2</span>:<span class=\"number\">0</span>:-<span class=\"number\">3</span>])</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;oy&#x27;</span>, s[-<span class=\"number\">2</span>::-<span class=\"number\">3</span>])</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;oy&#x27;</span>, s[-<span class=\"number\">2</span>]+s[<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 常用方法</span></span><br><span class=\"line\"><span class=\"comment\"># 1 查看字串有哪些方法</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"built_in\">dir</span>(<span class=\"built_in\">str</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2 查看字串方法的使用</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"built_in\">help</span>(<span class=\"built_in\">str</span>.center))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3 str.isdigit()   # 重點</span></span><br><span class=\"line\"> age = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入一個年齡:&#x27;</span>))</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(age, <span class=\"built_in\">type</span>(age))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 需求:先判斷輸入的資料是否全是數位,是則轉為整型</span></span><br><span class=\"line\"> age = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請輸入一個年齡:&#x27;</span>)</span><br><span class=\"line\"> <span class=\"keyword\">if</span> age.isdigit():  <span class=\"comment\"># 全是數字則返回True</span></span><br><span class=\"line\">     age = <span class=\"built_in\">int</span>(age)</span><br><span class=\"line\">     <span class=\"built_in\">print</span>(age, <span class=\"built_in\">type</span>(age))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. str.isalpha()</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;abc&#x27;</span>.isalpha())</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Abc&#x27;</span>.isalpha())</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Ab.c&#x27;</span>.isalpha())</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Ab1c&#x27;</span>.isalpha())</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;貓貓&#x27;</span>.isalpha())    <span class=\"comment\"># True</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # 輸入英文名</span></span><br><span class=\"line\"> name = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;輸入英文名&#x27;</span>)</span><br><span class=\"line\"> <span class=\"keyword\">if</span> name.isalpha():</span><br><span class=\"line\">     <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;英文名為:&#x27;</span>, name)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.str.upper()/str.lower()</span></span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;abcd&#x27;</span>.upper())</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Abcd&#x27;</span>.upper())</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;bACd&#x27;</span>.lower())</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;bACD&#x27;</span>.lower())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 判斷輸入的是否為y/n</span></span><br><span class=\"line\"> choice = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;請問是否確認[y/n]:&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"> <span class=\"keyword\">if</span> choice.upper() == <span class=\"string\">&#x27;Y&#x27;</span>:</span><br><span class=\"line\">     <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;yes&#x27;</span>)</span><br><span class=\"line\"> <span class=\"keyword\">elif</span> choice.lower() == <span class=\"string\">&#x27;n&#x27;</span>:</span><br><span class=\"line\">     <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;no&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # 5 str.startswith(suffix [, start [, end]])</span></span><br><span class=\"line\"><span class=\"comment\"># # 5 str.endswith(suffix [, start [, end]])</span></span><br><span class=\"line\">s = <span class=\"string\">&#x27;www.baidu.com&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#print(s.startswith(&#x27;www&#x27;))</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s.startswith(<span class=\"string\">&#x27;baidu&#x27;</span>, <span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s.startswith(<span class=\"string\">&#x27;baidu&#x27;</span>, <span class=\"number\">4</span>, -<span class=\"number\">5</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s[<span class=\"number\">4</span>:-<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s.endswith(<span class=\"string\">&#x27;.com&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s.endswith(<span class=\"string\">&#x27;.com&#x27;</span>, -<span class=\"number\">4</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 判斷檔是否以什麼開頭/什麼結尾?</span></span><br><span class=\"line\">file = <span class=\"string\">&#x27;demo1_str.py&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(file.startswith(<span class=\"string\">&#x27;d&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(file.endswith(<span class=\"string\">&#x27;.py&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # 6 str.center(width, fillchar=&#x27; &#x27;)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;tedu&#x27;</span>.center(<span class=\"number\">10</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;tedu&#x27;</span>.center(<span class=\"number\">10</span>, <span class=\"string\">&#x27;-&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;ted&#x27;</span>.center(<span class=\"number\">10</span>, <span class=\"string\">&#x27;-&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;python&#x27;</span>.center(<span class=\"number\">5</span>, <span class=\"string\">&#x27;-&#x27;</span>))   <span class=\"comment\"># 居中無效(len(str) &gt; width)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 7 str.strip(char=None)    # 重點</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;  python   &#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;  python   &#x27;</span>.strip())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\npython\\n&#x27;</span>.strip())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;  pythyonyp   &#x27;</span>.strip(<span class=\"string\">&#x27;py &#x27;</span>))   <span class=\"comment\"># &#x27;剝洋蔥&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 8 str.replace(old, new, count=-1)  # 重點</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;pythyonyp&#x27;</span>.replace(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"string\">&#x27;-&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;pythyonyp&#x27;</span>.replace(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"string\">&#x27;-&#x27;</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;pythyonyp&#x27;</span>.replace(<span class=\"string\">&#x27;Y&#x27;</span>, <span class=\"string\">&#x27;-&#x27;</span>, <span class=\"number\">2</span>))  <span class=\"comment\"># 不存在則不替換</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;pythyonyp&#x27;</span>.replace(<span class=\"string\">&#x27;y&#x27;</span>, <span class=\"string\">&#x27;-&#x27;</span>).replace(<span class=\"string\">&#x27;p&#x27;</span>,<span class=\"string\">&#x27;*&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 9 str.count(sub [, start [, end]])   # 重點</span></span><br><span class=\"line\">s = <span class=\"string\">&#x27;banana&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s.count(<span class=\"string\">&#x27;a&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s.count(<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s.count(<span class=\"string\">&#x27;A&#x27;</span>))   <span class=\"comment\"># 不存在,則次數為0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 10 str.find(sub[, start[, end]])</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;banana&#x27;</span>.find(<span class=\"string\">&#x27;a&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;banana&#x27;</span>.find(<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;banana&#x27;</span>.find(<span class=\"string\">&#x27;A&#x27;</span>))   <span class=\"comment\"># 不存在,則返回-1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;banana&#x27;</span>.find(<span class=\"string\">&#x27;na&#x27;</span>))</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;banana&#x27;</span>.index(<span class=\"string\">&#x27;a&#x27;</span>, -<span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;banana&#x27;</span>.index(<span class=\"string\">&#x27;A&#x27;</span>))  <span class=\"comment\"># 不存在,則報錯(結合in/not in)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 格式化字串</span></span><br><span class=\"line\">name = <span class=\"string\">&#x27;小加&#x27;</span></span><br><span class=\"line\">age = <span class=\"number\">18</span></span><br><span class=\"line\">height = <span class=\"number\">1.81</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;姓名為:&#x27;</span> + name + <span class=\"string\">&#x27;,年齡為:&#x27;</span> + <span class=\"built_in\">str</span>(age) + <span class=\"string\">&#x27;歲,身高為:&#x27;</span> + <span class=\"built_in\">str</span>(height) + <span class=\"string\">&#x27;米&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;姓名為:&#x27;</span>, name, <span class=\"string\">&#x27;,年齡為:&#x27;</span>, age, <span class=\"string\">&#x27;歲,身高為:&#x27;</span>, height, <span class=\"string\">&#x27;米&#x27;</span>, sep=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法1: 預留位置</span></span><br><span class=\"line\"><span class=\"comment\"># print(&#x27;-&#x27; * 50)</span></span><br><span class=\"line\">name = <span class=\"string\">&#x27;粘阿&#x27;</span></span><br><span class=\"line\">age = <span class=\"number\">18</span></span><br><span class=\"line\">height = <span class=\"number\">1.81</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;姓名為:%s,年齡為:%d歲,身高為:%.2f米&#x27;</span> % (name, age, height))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;姓名為:%-5s,年齡為:%-4d歲,身高為:%-6.2f米&#x27;</span> % (name, age, height))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # 方法2:format方法</span></span><br><span class=\"line\"><span class=\"comment\"># print(&#x27;-&#x27; * 50)</span></span><br><span class=\"line\">name = <span class=\"string\">&#x27;柚子&#x27;</span></span><br><span class=\"line\">age = <span class=\"number\">18</span></span><br><span class=\"line\">height = <span class=\"number\">1.815</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;姓名為:&#123;&#125;,年齡為:&#123;&#125;歲,身高為:&#123;:.3&#125;米&#x27;</span>.<span class=\"built_in\">format</span>(name, age, height))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;姓名為:&#123;0&#125;,年齡為:&#123;1&#125;歲,幸運數字為:&#123;1&#125;&#x27;</span>.<span class=\"built_in\">format</span>(name, age))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法3:format簡寫方法</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;-&#x27;</span> * <span class=\"number\">50</span>)</span><br><span class=\"line\">name = <span class=\"string\">&#x27;老畢&#x27;</span></span><br><span class=\"line\">age = <span class=\"number\">18</span></span><br><span class=\"line\">height = <span class=\"number\">1.815</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;姓名為:<span class=\"subst\">&#123;name&#125;</span>,年齡為:<span class=\"subst\">&#123;age&#125;</span>歲,身高為:<span class=\"subst\">&#123;height&#125;</span>米&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;姓名為:<span class=\"subst\">&#123;<span class=\"string\">&quot;老畢&quot;</span>&#125;</span>,年齡為:<span class=\"subst\">&#123;<span class=\"number\">18</span>&#125;</span>歲,幸運數字為:<span class=\"subst\">&#123;<span class=\"number\">9</span>&#125;</span>&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">https://bj.lianjia.com/ershoufang/pg2/</span></span><br><span class=\"line\"><span class=\"string\">https://bj.lianjia.com/ershoufang/pg3/</span></span><br><span class=\"line\"><span class=\"string\">https://bj.lianjia.com/ershoufang/pg4/</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 構建1-10頁的URL地址</span></span><br><span class=\"line\"><span class=\"comment\"># 方式1</span></span><br><span class=\"line\">base_url = <span class=\"string\">&#x27;https://bj.lianjia.com/ershoufang/pg%d/&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">11</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(base_url % i)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式2</span></span><br><span class=\"line\">base_url = <span class=\"string\">&#x27;https://bj.lianjia.com/ershoufang/pg&#123;&#125;/&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">11</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(base_url.<span class=\"built_in\">format</span>(i))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式3:</span></span><br><span class=\"line\">base_url = <span class=\"string\">&#x27;https://bj.lianjia.com/ershoufang/pg&#123;&#125;/&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">11</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;https://bj.lianjia.com/ershoufang/pg<span class=\"subst\">&#123;i&#125;</span>/&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1. 在控制台中獲取一個字串，列印每個字元的編碼值。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">str_input = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入文字：&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> str_input:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">ord</span>(item))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">2. 在控制台中重複獲取編碼值列印字串，如果輸入空，則退出程式。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    str_code = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入編碼值：&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> str_code == <span class=\"string\">&quot;&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    char = <span class=\"built_in\">chr</span>(<span class=\"built_in\">int</span>(str_code))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(char)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    對字串：&quot;  自強不 息,  厚德 載物. &quot;</span></span><br><span class=\"line\"><span class=\"string\">    查找空格數量</span></span><br><span class=\"line\"><span class=\"string\">    刪除所有空格</span></span><br><span class=\"line\"><span class=\"string\">    查找&quot;厚德&quot;位置</span></span><br><span class=\"line\"><span class=\"string\">    判斷是否以&quot;自強&quot;開頭</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">message = <span class=\"string\">&quot;  自強不 息,  厚德 載物. &quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(message.count(<span class=\"string\">&quot; &quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(message.replace(<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;&quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(message.find(<span class=\"string\">&quot;厚德&quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(message.startswith(<span class=\"string\">&quot;自強&quot;</span>))</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day03_03_容器通用操作","url":"/2021/12/27/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day03-03-%E5%AE%B9%E5%99%A8%E9%80%9A%E7%94%A8%E6%93%8D%E4%BD%9C/","content":"<h2 id=\"數學運算子\"><a href=\"#數學運算子\" class=\"headerlink\" title=\"數學運算子\"></a>數學運算子</h2><ol>\n<li>+：用於拼接兩個容器</li>\n<li>+&#x3D;：用原容器與右側容器拼接,並重新綁定變數</li>\n<li>*：重複生成容器元素</li>\n<li>*&#x3D;：用原容器生成重複元素, 並重新綁定變數</li>\n<li>&lt; &lt;&#x3D; &gt; &gt;&#x3D; &#x3D;&#x3D; !&#x3D;：依次比較兩個容器中元素,一但不同則返回比較結果。<span id=\"more\"></span></li>\n</ol>\n<h2 id=\"成員運算子\"><a href=\"#成員運算子\" class=\"headerlink\" title=\"成員運算子\"></a>成員運算子</h2><ul>\n<li><p>語法：<br>數據 in 序列<br>數據 not in 序列</p>\n</li>\n<li><p>n作用：<br>如果在指定的序列中找到值，返回bool類型。</p>\n</li>\n</ul>\n<h2 id=\"索引index\"><a href=\"#索引index\" class=\"headerlink\" title=\"索引index\"></a>索引index</h2><ol>\n<li>作用：定位單個容器元素</li>\n<li>語法：容器[整數]</li>\n<li>說明：<br>正向索引從0開始，第二個索引為1，最後一個為len(s)-1。<br>反向索引從-1開始,-1代表最後一個,-2代表倒數第二個,以此類推,第一個是-len(s)。</li>\n</ol>\n<p>範例:</p>\n<ul>\n<li>字元 :        P   y  t   h  o   n</li>\n<li>正向索引   0  1  2   3  4   5</li>\n<li>反向索引 -6 -5 -4 -3 -2 -1</li>\n</ul>\n<h2 id=\"切片slice\"><a href=\"#切片slice\" class=\"headerlink\" title=\"切片slice\"></a>切片slice</h2><ul>\n<li><p>作用：<br>定位多個容器元素。</p>\n</li>\n<li><p>語法：<br>容器[(開始索引):(結束索引)(:(步長))]</p>\n</li>\n<li><p>說明：<br>小括弧()括起的部分代表可省略<br>結束索引不包含該位置元素<br>步長是切片每次獲取完當前元素後移動的偏移量</p>\n</li>\n</ul>\n<h2 id=\"內建函數\"><a href=\"#內建函數\" class=\"headerlink\" title=\"內建函數\"></a>內建函數</h2><ol>\n<li>len(x) 返回序列的長度</li>\n<li>max(x) 返回序列的最大值元素</li>\n<li>min(x) 返回序列的最小值元素</li>\n<li>sum(x) 返回序列中所有元素的和(元素必須是數數值型別)</li>\n</ol>\n<h2 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述 :\"></a>描述 :</h2><p> \\’ 代表一個單引號</p>\n<p> \\” 代表一個雙引號 </p>\n<p>\\n 代表分行符號 </p>\n<p>\\ 代表一個反斜線 </p>\n<p>\\r 返回游標至首行 </p>\n<p>\\t 水準定位字元(Tab) </p>\n<p>\\ 續行符 \\v 縱向定位字元</p>\n<h2 id=\"實際操作\"><a href=\"#實際操作\" class=\"headerlink\" title=\"實際操作:\"></a>實際操作:</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    容器通用操作</span></span><br><span class=\"line\"><span class=\"string\">        以字串為例</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># + : 拼接</span></span><br><span class=\"line\">name = <span class=\"string\">&quot;悟空&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">id</span>(name))</span><br><span class=\"line\"><span class=\"comment\"># 不可變:字串在拼接後，產生新物件，替換name存儲的位址.</span></span><br><span class=\"line\">name += <span class=\"string\">&quot;八戒&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">id</span>(name))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(name)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># *: 重複</span></span><br><span class=\"line\">name = <span class=\"string\">&quot;唐僧&quot;</span></span><br><span class=\"line\">name *= <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(name)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 成員運算</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;大聖&quot;</span> <span class=\"keyword\">in</span> <span class=\"string\">&quot;我叫齊天大聖&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;大聖&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"string\">&quot;我叫齊天大聖&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 索引</span></span><br><span class=\"line\">message = <span class=\"string\">&quot;我是花果山水簾洞的齊天大聖&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"comment\"># 倒數第二個字元</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[-<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"comment\"># 正數第三個字元</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"comment\"># print(message[20])# 索引不能超過範圍</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切片</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[<span class=\"number\">2</span>:<span class=\"number\">5</span>:<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[:<span class=\"number\">5</span>:<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[:])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[::-<span class=\"number\">1</span>])<span class=\"comment\"># 聖大天齊的洞簾水山果花是我</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[<span class=\"number\">2</span>:-<span class=\"number\">8</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[<span class=\"number\">2</span>:-<span class=\"number\">8</span>:-<span class=\"number\">1</span>])<span class=\"comment\"># 空</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[<span class=\"number\">2</span>:<span class=\"number\">2</span>])<span class=\"comment\"># 空</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[<span class=\"number\">2</span>:<span class=\"number\">100</span>])<span class=\"comment\"># 越界不報錯</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    創建清單，存儲水星，金星，地球，木星，土星，天王星。</span></span><br><span class=\"line\"><span class=\"string\">    向列表中追加海王星。</span></span><br><span class=\"line\"><span class=\"string\">    在地球後插入火星。</span></span><br><span class=\"line\"><span class=\"string\">    列印距離太陽最遠的行星(最後一個行星)</span></span><br><span class=\"line\"><span class=\"string\">    列印地球之前的所有行星(前兩個行星)。</span></span><br><span class=\"line\"><span class=\"string\">    刪除金星。</span></span><br><span class=\"line\"><span class=\"string\">    刪除地球後面的所有行星。</span></span><br><span class=\"line\"><span class=\"string\">    倒序列印所有行星。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">list_planet = [<span class=\"string\">&quot;水星&quot;</span>,<span class=\"string\">&quot;金星&quot;</span>,<span class=\"string\">&quot;地球&quot;</span>,<span class=\"string\">&quot;木星&quot;</span>,<span class=\"string\">&quot;土星&quot;</span>,<span class=\"string\">&quot;天王星&quot;</span>]</span><br><span class=\"line\">list_planet.append(<span class=\"string\">&quot;海王星&quot;</span>)</span><br><span class=\"line\">list_planet.insert(<span class=\"number\">3</span>,<span class=\"string\">&quot;火星&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list_planet[-<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list_planet[:<span class=\"number\">2</span>])</span><br><span class=\"line\">list_planet.remove(<span class=\"string\">&quot;金星&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">del</span> list_planet[<span class=\"number\">3</span>:]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(list_planet)-<span class=\"number\">1</span>,-<span class=\"number\">1</span>,-<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(list_planet[i])</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    1. 創建字串：人生苦短,我用Python</span></span><br><span class=\"line\"><span class=\"string\">    2. 列印第一個字元，最後一個字元。</span></span><br><span class=\"line\"><span class=\"string\">    3. 列印前兩個字元，後六個字元。</span></span><br><span class=\"line\"><span class=\"string\">    4. 列印中間一個字元。</span></span><br><span class=\"line\"><span class=\"string\">    5. 倒序列印所有字元。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">message = <span class=\"string\">&quot;人生苦短,我用Python&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[-<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[:<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[-<span class=\"number\">6</span>:])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[<span class=\"built_in\">len</span>(message) //<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(message[::-<span class=\"number\">1</span>])</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">S = <span class=\"string\">&#x27;ABCDEFG&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>、S[<span class=\"number\">3</span>] 的結果為： <span class=\"string\">&#x27;D&#x27;</span></span><br><span class=\"line\"><span class=\"number\">2</span>、S[::] 的結果為： <span class=\"string\">&#x27;ABCDEFG&#x27;</span>  不推薦</span><br><span class=\"line\"><span class=\"number\">3</span>、S[<span class=\"number\">2</span>:] 的結果為：  <span class=\"string\">&#x27;CDEFG&#x27;</span></span><br><span class=\"line\"><span class=\"number\">4</span>、S[:<span class=\"number\">6</span>] 的結果為：   <span class=\"string\">&#x27;ABCDEF&#x27;</span></span><br><span class=\"line\"><span class=\"number\">5</span>、<span class=\"built_in\">len</span>(S) 的結果為：   <span class=\"number\">7</span></span><br><span class=\"line\"><span class=\"number\">6</span>、S[-<span class=\"built_in\">len</span>(S):-<span class=\"number\">2</span>:-<span class=\"number\">1</span>] 的結果為：  S[-<span class=\"number\">7</span>:-<span class=\"number\">2</span>:-<span class=\"number\">1</span>]   <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"number\">7</span>、S[-<span class=\"number\">6</span>:<span class=\"number\">1</span>:<span class=\"number\">2</span>] 的結果為：  <span class=\"string\">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"【Python零基礎】_Day03_04_列表","url":"/2021/12/27/%E3%80%90Python%E9%9B%B6%E5%9F%BA%E7%A4%8E%E3%80%91-Day03-04-%E5%88%97%E8%A1%A8/","content":"<h1 id=\"定義\"><a href=\"#定義\" class=\"headerlink\" title=\"定義\"></a>定義</h1><blockquote>\n<p>由一系列變數組成的可變序列容器。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"基礎操作\"><a href=\"#基礎操作\" class=\"headerlink\" title=\"基礎操作\"></a>基礎操作</h2><p>創建列表：</p>\n<ul>\n<li><p>列表名 &#x3D; []</p>\n</li>\n<li><p>清單名 &#x3D; list(可反覆運算對象)</p>\n</li>\n</ul>\n<p>添加元素：</p>\n<ul>\n<li><p>列表名.append(元素)</p>\n</li>\n<li><p>列表.insert(索引，元素)</p>\n</li>\n</ul>\n<p>定位元素：</p>\n<ul>\n<li>清單名[索引] &#x3D; 元素</li>\n<li>變數 &#x3D; 清單名[索引]</li>\n<li>變數 &#x3D; 清單名[切片] # 賦值給變數的是切片所創建的新列表</li>\n<li>列表名[切片] &#x3D; 容器 # 右側必須是可反覆運算物件，左側切片沒有創建新列表。遍歷列表：</li>\n</ul>\n<p>正向：</p>\n<ul>\n<li>for 變數名 in 列表名:</li>\n<li>變數名就是元素</li>\n</ul>\n<p>反向：</p>\n<ul>\n<li>for 索引名 in range(len(列表名)-1,-1,-1):</li>\n<li>清單名[索引名]就是元素</li>\n</ul>\n<p>刪除元素：</p>\n<ul>\n<li>列表名.remove(元素)</li>\n<li>del 清單名[索引或切片]</li>\n</ul>\n<h3 id=\"實際操作\"><a href=\"#實際操作\" class=\"headerlink\" title=\"實際操作\"></a>實際操作</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    列表 list</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 1. 創建列表</span></span><br><span class=\"line\">list01 = []</span><br><span class=\"line\">list02 = <span class=\"built_in\">list</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">list01 = [<span class=\"number\">90</span>,<span class=\"string\">&quot;唐僧&quot;</span>,<span class=\"literal\">True</span>]</span><br><span class=\"line\"><span class=\"comment\"># 根據其他可反覆運算物件</span></span><br><span class=\"line\">list02 = <span class=\"built_in\">list</span>(<span class=\"string\">&quot;我是齊天大聖&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 添加</span></span><br><span class=\"line\"><span class=\"comment\"># -- 追加</span></span><br><span class=\"line\">list01.append(<span class=\"string\">&quot;悟空&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># -- 插入</span></span><br><span class=\"line\">list01.insert(<span class=\"number\">2</span>,<span class=\"string\">&quot;八戒&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 獲取</span></span><br><span class=\"line\"><span class=\"comment\"># 索引：單個</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(list01[-<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"comment\"># 切片：多個</span></span><br><span class=\"line\"><span class=\"comment\"># 創建新列表</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(list01[:<span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"comment\"># 迴圈：所有</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"><span class=\"comment\"># 倒序</span></span><br><span class=\"line\"><span class=\"comment\"># 因為切片會產生新清單，浪費記憶體，所以不建議下面的方式</span></span><br><span class=\"line\"><span class=\"comment\"># for item in list01[::-1]:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(item)</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(list01)-<span class=\"number\">1</span>,-<span class=\"number\">1</span>,-<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(list01[i])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 修改</span></span><br><span class=\"line\"><span class=\"comment\"># 索引</span></span><br><span class=\"line\"><span class=\"comment\"># 將右側的資料位址賦值給左側定位的元素</span></span><br><span class=\"line\">list01[-<span class=\"number\">1</span>] = <span class=\"string\">&quot;end&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切片</span></span><br><span class=\"line\"><span class=\"comment\"># 遍歷右側的可反覆運算物件，將每個元素賦值給左側定位的元素</span></span><br><span class=\"line\"><span class=\"comment\"># list01[:2] = [1,2]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(list01)</span><br><span class=\"line\"><span class=\"comment\"># list01[:2] = [1,2,3,4,5,6,7,8,9,10]</span></span><br><span class=\"line\"><span class=\"comment\"># list01[:3] = []</span></span><br><span class=\"line\">list01[<span class=\"number\">1</span>:<span class=\"number\">1</span>] = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"comment\"># 迴圈</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(list01)):</span><br><span class=\"line\">    list01[i] = <span class=\"literal\">None</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(list01)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 刪除</span></span><br><span class=\"line\"><span class=\"comment\"># 根據元素移除</span></span><br><span class=\"line\">list02.remove(<span class=\"string\">&quot;我&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根據索引、切片移除</span></span><br><span class=\"line\"><span class=\"keyword\">del</span> list02[-<span class=\"number\">1</span>]</span><br><span class=\"line\"><span class=\"keyword\">del</span> list02[:<span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list02)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    列表記憶體分配(列表內存分配)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">list01 = [<span class=\"number\">10</span>, <span class=\"number\">20</span>]</span><br><span class=\"line\">list02 = list01</span><br><span class=\"line\">list01[<span class=\"number\">0</span>] = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(list02[<span class=\"number\">0</span>])  <span class=\"comment\"># ?100</span></span><br><span class=\"line\"></span><br><span class=\"line\">list01 = [<span class=\"number\">10</span>, <span class=\"number\">20</span>]</span><br><span class=\"line\">list02 = list01</span><br><span class=\"line\">list01 = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(list02[<span class=\"number\">0</span>])  <span class=\"comment\"># ?10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 練習：</span></span><br><span class=\"line\">list01 = [<span class=\"number\">10</span>, <span class=\"number\">20</span>]</span><br><span class=\"line\">list02 = list01[:]</span><br><span class=\"line\">list01[<span class=\"number\">0</span>] = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(list02[<span class=\"number\">0</span>])  <span class=\"comment\"># ?</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> copy</span><br><span class=\"line\"></span><br><span class=\"line\">list01 = [<span class=\"number\">10</span>, [<span class=\"number\">20</span>, <span class=\"number\">30</span>]]</span><br><span class=\"line\">list02 = list01[:]  <span class=\"comment\"># 淺拷貝</span></span><br><span class=\"line\">list03 = list01  <span class=\"comment\"># 賦值</span></span><br><span class=\"line\">list04 = copy.deepcopy(list01)  <span class=\"comment\"># 深拷貝</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 深拷貝</span></span><br><span class=\"line\"><span class=\"comment\"># 優點:互不影響</span></span><br><span class=\"line\"><span class=\"comment\"># 缺點：往往佔用記憶體過多</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">列表資料類型</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 創建一個空列表</span></span><br><span class=\"line\">list01 = [] <span class=\"comment\"># 一個空清單 (空清單邏輯為假 非空清單邏輯為真)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(list01,<span class=\"built_in\">type</span>(list01))</span><br><span class=\"line\"></span><br><span class=\"line\">list02 = <span class=\"built_in\">list</span>()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list02,<span class=\"built_in\">type</span>(list02))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 創建一個非空列表 (所有Python支持的資料類型均可放入列表)</span></span><br><span class=\"line\">list03 = [<span class=\"number\">1</span>,<span class=\"number\">3.14</span>,<span class=\"literal\">True</span>,<span class=\"string\">&quot;abc&quot;</span>,[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list03)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通過list將可反覆運算對象生成清單</span></span><br><span class=\"line\">list04 = <span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">5</span>))</span><br><span class=\"line\">list04 = <span class=\"built_in\">list</span>(<span class=\"string\">&quot;abcdef&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list04)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">列表運算</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">list01 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">list02 = [<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">list03 = list01 + list02</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list03)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;list-1:&quot;</span>,<span class=\"built_in\">id</span>(list01))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;list-2:&quot;</span>,<span class=\"built_in\">id</span>(list02))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;list-3:&quot;</span>,<span class=\"built_in\">id</span>(list03))</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">list01 += list02</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list01)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;list-1:&quot;</span>,<span class=\"built_in\">id</span>(list01))</span><br><span class=\"line\"></span><br><span class=\"line\">列表重複  列表預留</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list01 * <span class=\"number\">3</span>)</span><br><span class=\"line\">list01 *= <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">id</span>(list01))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列表比較</span></span><br><span class=\"line\">list01 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">list02 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list01 &gt; list02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list01 == list02)</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # 獲取列表長度 -&gt; 列表之間比較大小並不是比長度</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(list01))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># in  操作</span></span><br><span class=\"line\">L = [<span class=\"string\">&quot;tom&quot;</span>,<span class=\"string\">&quot;Lily&quot;</span>,<span class=\"string\">&quot;Jame&quot;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;tom&quot;</span> <span class=\"keyword\">in</span> L)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Joy&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> L)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">切片 slice</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">L = <span class=\"built_in\">list</span>(<span class=\"string\">&quot;abcdefghijklmn&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(L) <span class=\"comment\"># [ a, b-&gt;1 ,c ,d-&gt;3,e,f-5,g,h,i,......n -1]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切片取值  [start起始索引: end取到end-1的索引位元]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L[<span class=\"number\">1</span>:<span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(L[:<span class=\"number\">5</span>]) <span class=\"comment\">#ｓｔａｒｔ 0可以省略</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L[<span class=\"number\">5</span>:]) <span class=\"comment\">#想取到最後一項，ｅｎｄ可以略  len(L) = 最後索引　＋　１</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print(L[5:-1])</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L[:]) <span class=\"comment\"># 從頭到尾</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 步長</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L[<span class=\"number\">1</span>:<span class=\"number\">10</span>:<span class=\"number\">3</span>]) <span class=\"comment\"># 正步長　ｓｔａｒｔ索引代表的元素在　ｅｎｄ索引元素前邊</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L[-<span class=\"number\">6</span>:<span class=\"number\">1</span>:-<span class=\"number\">2</span>]) <span class=\"comment\"># 負步長　ｓｔａｒｔ索引元素在ｅｎｄ元素的後邊</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">列表索引取值</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">L = [<span class=\"number\">5</span>,<span class=\"string\">&quot;Python&quot;</span>,<span class=\"number\">3</span>,[<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;第一項:&quot;</span>,L[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;最後項:&quot;</span>,L[<span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取清單元素中的子元素</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L[<span class=\"number\">1</span>][<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(L[<span class=\"number\">3</span>][<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 反向取值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L[<span class=\"number\">0</span>],L[<span class=\"number\">1</span>],L[<span class=\"number\">2</span>],L[<span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(L[-<span class=\"number\">4</span>],L[-<span class=\"number\">3</span>],L[-<span class=\"number\">2</span>],L[-<span class=\"number\">1</span>])</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">修改列表中的值</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">L = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改其中一個  : 指定元素重新賦值</span></span><br><span class=\"line\">L[<span class=\"number\">1</span>] = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">L[<span class=\"number\">1</span>],L[<span class=\"number\">3</span>] = <span class=\"number\">20</span>,<span class=\"number\">40</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 替換其中一段</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">id</span>(L[<span class=\"number\">1</span>]))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">id</span>(L[<span class=\"number\">4</span>]))</span><br><span class=\"line\">L[<span class=\"number\">1</span>:<span class=\"number\">4</span>] = [<span class=\"number\">20</span>,<span class=\"number\">30</span>,<span class=\"number\">40</span>] <span class=\"comment\"># 通過切片截取原列表中的一段進行替換</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">id</span>(L[<span class=\"number\">1</span>]))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L[<span class=\"number\">1</span>:<span class=\"number\">5</span>:<span class=\"number\">2</span>])</span><br><span class=\"line\">L[<span class=\"number\">1</span>:<span class=\"number\">5</span>:<span class=\"number\">2</span>] = [<span class=\"number\">20</span>,<span class=\"number\">40</span>]</span><br><span class=\"line\"><span class=\"comment\"># L[1],L[3] = [20,40]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"></span><br><span class=\"line\">L[:-<span class=\"number\">4</span>:-<span class=\"number\">2</span>] = [<span class=\"number\">70</span>,<span class=\"number\">50</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">a,b,c = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a,b,c)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L.index(<span class=\"number\">20</span>)) <span class=\"comment\"># 返回對應值的索引,找不到報錯</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L.index(<span class=\"number\">20</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>)) <span class=\"comment\"># L[3:5]</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">內建函數　　內置函數　：　　Ｐｙｔｈｏｎ自帶的函數</span></span><br><span class=\"line\"><span class=\"string\">builtin  function</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">L = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"literal\">False</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>] <span class=\"comment\"># True -&gt; 1  False -&gt; 0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;最大:&quot;</span>,<span class=\"built_in\">max</span>(L))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;最小:&quot;</span>,<span class=\"built_in\">min</span>(L))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;求和:&quot;</span>,<span class=\"built_in\">sum</span>(L)) <span class=\"comment\"># 13</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;列表長度:&quot;</span>,<span class=\"built_in\">len</span>(L))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假: 0  False []  &quot;&quot;   None</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;是否有邏輯真的元素:&quot;</span>,<span class=\"built_in\">any</span>(L)) <span class=\"comment\"># 一個真--&gt;True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;是否全都是邏輯真的元素:&quot;</span>,<span class=\"built_in\">all</span>(L)) <span class=\"comment\">#　全都為真　－－＞　Ｔｒｕｅ</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">列表操作</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">L = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"string\">&quot;Python&quot;</span>,<span class=\"string\">&quot;Java&quot;</span>,<span class=\"string\">&quot;C&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 增</span></span><br><span class=\"line\">L.append(<span class=\"string\">&quot;Go&quot;</span>)   <span class=\"comment\"># 末尾添加一項</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"></span><br><span class=\"line\">L.insert(<span class=\"number\">3</span>,<span class=\"number\">4</span>) <span class=\"comment\"># 在3號索引位置增加一個4</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"></span><br><span class=\"line\">L.extend([<span class=\"string\">&quot;桃園&quot;</span>,<span class=\"string\">&quot;台東&quot;</span>,<span class=\"string\">&quot;台南&quot;</span>]) <span class=\"comment\"># 合併一個列表 L += [xxxxx]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 刪除</span></span><br><span class=\"line\">res = L.pop(<span class=\"number\">0</span>) <span class=\"comment\"># 刪除一項並返回這一項元素內容</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(res)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"></span><br><span class=\"line\">L.remove(<span class=\"string\">&quot;台東&quot;</span>) <span class=\"comment\"># 刪除第一個&quot;台東&quot;值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">del</span> L[<span class=\"number\">1</span>] <span class=\"comment\"># 單獨擦除一項</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">del</span> L[<span class=\"number\">1</span>:<span class=\"number\">3</span>] <span class=\"comment\"># 更靈活的刪除</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"></span><br><span class=\"line\">L.clear() <span class=\"comment\"># 清空列表</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">列表排序</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">L = [<span class=\"number\">0</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">L.sort() <span class=\"comment\"># 昇冪排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">L.sort(reverse=<span class=\"literal\">True</span>) <span class=\"comment\"># 降冪排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"></span><br><span class=\"line\">L.reverse() <span class=\"comment\"># 列表翻轉</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br><span class=\"line\"></span><br><span class=\"line\">L = [<span class=\"string\">&quot;Python&quot;</span>,<span class=\"string\">&quot;Java&quot;</span>,<span class=\"string\">&quot;Go&quot;</span>,<span class=\"string\">&quot;PHP&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">a</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(a) <span class=\"comment\"># 按照長度排序呢</span></span><br><span class=\"line\"></span><br><span class=\"line\">L.sort(key=func)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(L)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">列表遍歷</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">L = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> L:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> L[<span class=\"number\">1</span>:<span class=\"number\">5</span>]:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(L)):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(L[i])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> L[::-<span class=\"number\">1</span>]:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(L) - <span class=\"number\">1</span>, -<span class=\"number\">1</span>, -<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(L[i])</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    練習題1 : 在控制台中迴圈錄入同學們的身高，如果輸入空，則停止。</span></span><br><span class=\"line\"><span class=\"string\">    列印所有人的身高(一行一個)。</span></span><br><span class=\"line\"><span class=\"string\">    列印總數。</span></span><br><span class=\"line\"><span class=\"string\">    列印最高、最低、和平均的身高。</span></span><br><span class=\"line\"><span class=\"string\">    使用 max   min    sum</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">list_height = []</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    str_height = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入身高：&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> str_height == <span class=\"string\">&quot;&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    list_height.append(<span class=\"built_in\">float</span>(str_height))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list_height:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(list_height))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">max</span>(list_height))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">min</span>(list_height))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">sum</span>(list_height)/<span class=\"built_in\">len</span>(list_height))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"清單-列表-VS字串\"><a href=\"#清單-列表-VS字串\" class=\"headerlink\" title=\"清單(列表)VS字串\"></a>清單(列表)VS字串</h2><ol>\n<li>清單和字串都是序列,元素之間有先後順序關係。</li>\n<li>字串是不可變的序列,列表是可變的序列。</li>\n<li>字串中每個元素只能存儲字元,而清單可以存儲任意類型。</li>\n<li>清單和字串都是可反覆運算物件。</li>\n<li>函數：<ul>\n<li>將多個字串拼接為一個。</li>\n<li>result &#x3D; “連接子”.join(列表)</li>\n<li>將一個字串拆分為多個。</li>\n<li>列表 &#x3D; “a-b-c-d”.split(“分隔符號”)</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">清單與字串淵源</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">l1 = <span class=\"built_in\">list</span>(<span class=\"string\">&quot;abcdef&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l1) <span class=\"comment\"># [a,b,c,d,e,f]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列表拼接: 使用指定字串將清單中每項連接起來形成一個大字串</span></span><br><span class=\"line\"><span class=\"comment\"># str01 = &#x27;##&#x27;.join(l1)</span></span><br><span class=\"line\"><span class=\"comment\"># print(str01)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 模擬 join</span></span><br><span class=\"line\"><span class=\"comment\"># str02 = &#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># for i in l1:</span></span><br><span class=\"line\"><span class=\"comment\">#     str02 += i</span></span><br><span class=\"line\"><span class=\"comment\">#     str02 += &quot;##&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># print(str02)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 按照指定的子串進行拆分　－－＞　列表</span></span><br><span class=\"line\">str03 = <span class=\"string\">&quot;Hello world nihao china&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(str03.split(<span class=\"string\">&quot; &quot;</span>))</span><br><span class=\"line\">str03 = <span class=\"string\">&quot;Hello world nihao china&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(str03.split(<span class=\"string\">&quot; &quot;</span>))</span><br><span class=\"line\">str03 = <span class=\"string\">&quot;Hello world nihao china&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(str03.split(<span class=\"string\">&quot; &quot;</span>,<span class=\"number\">2</span>)) <span class=\"comment\">#最多拆分2次</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"列表推導式\"><a href=\"#列表推導式\" class=\"headerlink\" title=\"列表推導式\"></a>列表推導式</h2><ul>\n<li><p>定義：<br>使用簡易方法，將可反覆運算物件轉換為清單。</p>\n</li>\n<li><p>語法：<br>變數 &#x3D; [運算式 for 變數 in 可反覆運算物件]<br>變數 &#x3D; [運算式 for 變數 in 可反覆運算物件 if 條件]</p>\n</li>\n<li><p>說明:<br>如果if真值表達式的布林值為False,則可反覆運算物件生成的資料將被丟棄。</p>\n</li>\n</ul>\n<h2 id=\"列表推導式嵌套\"><a href=\"#列表推導式嵌套\" class=\"headerlink\" title=\"列表推導式嵌套\"></a>列表推導式嵌套</h2><ul>\n<li><p>語法：<br>變數 &#x3D; [運算式 for 變數1 in 可反覆運算物件1 for 變數2 in可反覆運算物件2]</p>\n</li>\n<li><p>傳統寫法：<br>result &#x3D; []</p>\n<p>  for r in  [“a”, “b”, “c”]:</p>\n<p>  for c in [“A”, “B”, “C”]:</p>\n<p>  result.append(r + c)</p>\n</li>\n<li><p>推導式寫法：<br>result &#x3D; [r + c for r in list01 for c in list02]</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    list --&gt; str</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 根據xx邏輯，拼接一個字串。</span></span><br><span class=\"line\"><span class=\"comment\"># range(10) --&gt; &quot;0123456789&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># str_result = &quot;&quot;# 不可變</span></span><br><span class=\"line\"><span class=\"comment\"># for item in range(10):</span></span><br><span class=\"line\"><span class=\"comment\">#     # str_result += str(item)</span></span><br><span class=\"line\"><span class=\"comment\">#     # 每次迴圈 每次拼接 都會創建新物件 產生一個垃圾</span></span><br><span class=\"line\"><span class=\"comment\">#     str_result = str_result + str(item)</span></span><br><span class=\"line\"><span class=\"comment\"># print(str_result)</span></span><br><span class=\"line\"></span><br><span class=\"line\">list_temp = []<span class=\"comment\">#可變</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 每次追加新物件 不會產生垃圾</span></span><br><span class=\"line\">    list_temp.append(<span class=\"built_in\">str</span>(item))</span><br><span class=\"line\"></span><br><span class=\"line\">str_result = <span class=\"string\">&quot;-&quot;</span>.join(list_temp)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(str_result)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    在終端中迴圈錄入字串，如果輸入空則停止。</span></span><br><span class=\"line\"><span class=\"string\">    最後列印所有的內容(拼接後的字串)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">list_temp = []</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    str_input = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;請輸入：&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> str_input == <span class=\"string\">&quot;&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    list_temp.append(str_input)</span><br><span class=\"line\">str_result = <span class=\"string\">&quot;&quot;</span>.join(list_temp)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(str_result)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    str --&gt; list</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">message = <span class=\"string\">&quot;悟空-豬八戒-沙和尚&quot;</span></span><br><span class=\"line\">list_result = message.split(<span class=\"string\">&quot;-&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list_result)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    list 推導式</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">list01 = [<span class=\"number\">5</span>, <span class=\"number\">56</span>, <span class=\"number\">67</span>, <span class=\"number\">7</span>, <span class=\"number\">89</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># list02 = []</span></span><br><span class=\"line\"><span class=\"comment\"># for item in list01:</span></span><br><span class=\"line\"><span class=\"comment\">#     list02.append( item + 1 )</span></span><br><span class=\"line\"></span><br><span class=\"line\">list02 = [item + <span class=\"number\">1</span> <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list02)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># list03 = []</span></span><br><span class=\"line\"><span class=\"comment\"># for item in list01:</span></span><br><span class=\"line\"><span class=\"comment\">#     if item % 2 ==0:</span></span><br><span class=\"line\"><span class=\"comment\">#         list03.append(item)</span></span><br><span class=\"line\">list03 = [item <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list01 <span class=\"keyword\">if</span> item % <span class=\"number\">2</span> == <span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list03)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    列表推導式嵌套</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">list01 = [<span class=\"string\">&quot;香蕉&quot;</span>,<span class=\"string\">&quot;蘋果&quot;</span>,<span class=\"string\">&quot;哈密瓜&quot;</span>]</span><br><span class=\"line\">list02 = [<span class=\"string\">&quot;咖啡&quot;</span>,<span class=\"string\">&quot;牛奶&quot;</span>,<span class=\"string\">&quot;雪碧&quot;</span>,<span class=\"string\">&quot;可樂&quot;</span>]</span><br><span class=\"line\"><span class=\"comment\"># list03 = []</span></span><br><span class=\"line\"><span class=\"comment\"># for r in list01:</span></span><br><span class=\"line\"><span class=\"comment\">#     for c in list02:</span></span><br><span class=\"line\"><span class=\"comment\">#         list03.append(r +c)</span></span><br><span class=\"line\">list03 = [r +c <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> list01 <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> list02]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(list03)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["學習筆記"]},{"title":"安裝Mac MySQL問題","url":"/2022/06/16/%E5%AE%89%E8%A3%9DMac-MySQL%E5%95%8F%E9%A1%8C/","content":"<p>下載了MySQL 出現了 <strong><strong>: command not found 的問題</strong></strong></p>\n<p>需要去更改環境變量<code>PATH</code></p>\n<span id=\"more\"></span>\n<p>步驟一：下載完成後在終端檢查是否有 bash_profile ：如果沒有的話使用以下方式</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"code\"><pre><span class=\"line\">vim ~/.<span class=\"property\">bash_profile</span></span><br><span class=\"line\">如果顯示<span class=\"keyword\">new</span>代表要新增一個 bash_profile</span><br></pre></td></tr></table></figure>\n\n<p>步驟二：加入 .bash_profile文件</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"code\"><pre><span class=\"line\">touch .<span class=\"property\">bash_profile</span></span><br></pre></td></tr></table></figure>\n\n<p>步驟三：打開 bash_profile文件</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"code\"><pre><span class=\"line\">open .<span class=\"property\">bash_profile</span></span><br></pre></td></tr></table></figure>\n\n<p>步驟四：將下面這段複製到 打開的 bash_profile文件裡面 按下存擋（command+s）後關閉</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">PATH</span>=$&#123;<span class=\"variable constant_\">PATH</span>&#125;:<span class=\"regexp\">/usr/</span>local/mysql/bin</span><br></pre></td></tr></table></figure>\n\n<p>步驟四：到終端打上</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"code\"><pre><span class=\"line\">source ~/.<span class=\"property\">bash_profile</span></span><br></pre></td></tr></table></figure>\n\n<p>在輸入 mysql -u root -p</p>\n<p>有跳出 myspl &gt;  (代表成功)</p>\n<p>如退出終端再次輸入 mysql -u root -p 又顯示 <strong><strong>command not found</strong></strong> 但重複 步驟四又可以成功的話</p>\n<p>代表默認啟動腳本變為 ~&#x2F;.zshrc zsh</p>\n<hr>\n<p>解決方式如下：</p>\n<p>新增一個 .zshrc文件</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"code\"><pre><span class=\"line\">touch ~/.<span class=\"property\">zshrc</span></span><br></pre></td></tr></table></figure>\n\n<p>在source 一次</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"code\"><pre><span class=\"line\">source ~/.<span class=\"property\">bash_profile</span></span><br></pre></td></tr></table></figure>\n\n<p>最後再重新啟動終端 打上 mysql -u root -p  就成功了</p>\n","categories":["MySOL"],"tags":["問題紀錄"]},{"title":"Next寫文效果","url":"/2022/08/01/%E5%AF%AB%E6%96%87%E6%96%B9%E5%BC%8F/","content":"<h1 id=\"文字居中效果\"><a href=\"#文字居中效果\" class=\"headerlink\" title=\"文字居中效果\"></a>文字居中效果</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% centerquote %&#125;居中效果&#123;% endcenterquote %&#125;</span><br></pre></td></tr></table></figure>\n<p>顯示效果：</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <p>居中效果</p>\n\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n\n<h1 id=\"重點括號\"><a href=\"#重點括號\" class=\"headerlink\" title=\"重點括號\"></a>重點括號</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% note %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### Header</span></span><br><span class=\"line\"></span><br><span class=\"line\">(文字文字文字)</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<p>顯示效果：</p>\n<div class=\"note \">\n            <h4 id=\"Header\"><a href=\"#Header\" class=\"headerlink\" title=\"Header\"></a>Header</h4><p>(文字文字文字)</p>\n          </div>\n\n<h2 id=\"default-樣式\"><a href=\"#default-樣式\" class=\"headerlink\" title=\"default 樣式\"></a>default 樣式</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% note default %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### Default Header</span></span><br><span class=\"line\"></span><br><span class=\"line\">Welcome to [Hexo!](https://hexo.io)</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<p>顯示效果：</p>\n<div class=\"note default\">\n            <h4 id=\"Default-Header\"><a href=\"#Default-Header\" class=\"headerlink\" title=\"Default Header\"></a>Default Header</h4><p>Welcome to <a href=\"https://hexo.io/\">Hexo!</a></p>\n          </div>\n\n<h2 id=\"primary-樣式\"><a href=\"#primary-樣式\" class=\"headerlink\" title=\"primary 樣式\"></a>primary 樣式</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% note primary %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### Primary Header</span></span><br><span class=\"line\"></span><br><span class=\"line\">**Welcome** to [Hexo!](https://hexo.io)</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<p>顯示效果：</p>\n<div class=\"note primary\">\n            <h4 id=\"Primary-Header\"><a href=\"#Primary-Header\" class=\"headerlink\" title=\"Primary Header\"></a>Primary Header</h4><p><strong>Welcome</strong> to <a href=\"https://hexo.io/\">Hexo!</a></p>\n          </div>\n\n<h2 id=\"info-樣式\"><a href=\"#info-樣式\" class=\"headerlink\" title=\"info 樣式\"></a>info 樣式</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% note info %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### Info Header</span></span><br><span class=\"line\"></span><br><span class=\"line\">**Welcome** to [Hexo!](https://hexo.io)</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<p>顯示效果：</p>\n<div class=\"note info\">\n            <h3 id=\"Info-Header\"><a href=\"#Info-Header\" class=\"headerlink\" title=\"Info Header\"></a>Info Header</h3><p><strong>Welcome</strong> to <a href=\"https://hexo.io/\">Hexo!</a></p>\n          </div>\n\n<h2 id=\"success-樣式\"><a href=\"#success-樣式\" class=\"headerlink\" title=\"success 樣式\"></a>success 樣式</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% note success %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### Success Header</span></span><br><span class=\"line\"></span><br><span class=\"line\">**Welcome** to [Hexo!](https://hexo.io)</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<p>顯示效果：</p>\n<div class=\"note success\">\n            <h4 id=\"Success-Header\"><a href=\"#Success-Header\" class=\"headerlink\" title=\"Success Header\"></a>Success Header</h4><p><strong>Welcome</strong> to <a href=\"https://hexo.io/\">Hexo!</a></p>\n          </div>\n\n<h2 id=\"warning-樣式\"><a href=\"#warning-樣式\" class=\"headerlink\" title=\"warning 樣式\"></a>warning 樣式</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% note warning %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### Warning Header</span></span><br><span class=\"line\"></span><br><span class=\"line\">**Welcome** to [Hexo!](https://hexo.io)</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<p>顯示效果：</p>\n<div class=\"note warning\">\n            <h4 id=\"Warning-Header\"><a href=\"#Warning-Header\" class=\"headerlink\" title=\"Warning Header\"></a>Warning Header</h4><p><strong>Welcome</strong> to <a href=\"https://hexo.io/\">Hexo!</a></p>\n          </div>\n<h2 id=\"danger-樣式\"><a href=\"#danger-樣式\" class=\"headerlink\" title=\"danger 樣式\"></a>danger 樣式</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% note danger %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### Danger Header</span></span><br><span class=\"line\"></span><br><span class=\"line\">**Welcome** to [Hexo!](https://hexo.io)</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<p>顯示效果：</p>\n<div class=\"note danger\">\n            <h4 id=\"Danger-Header\"><a href=\"#Danger-Header\" class=\"headerlink\" title=\"Danger Header\"></a>Danger Header</h4><p><strong>Welcome</strong> to <a href=\"https://hexo.io/\">Hexo!</a></p>\n          </div>\n\n<h2 id=\"代碼顯示\"><a href=\"#代碼顯示\" class=\"headerlink\" title=\"代碼顯示\"></a>代碼顯示</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% note success %&#125;</span><br><span class=\"line\"><span class=\"comment\">#### Codeblock in note</span></span><br><span class=\"line\">&#123;% code %&#125;</span><br><span class=\"line\">code block <span class=\"keyword\">in</span> note tag</span><br><span class=\"line\">code block <span class=\"keyword\">in</span> note tag</span><br><span class=\"line\">code block <span class=\"keyword\">in</span> note tag</span><br><span class=\"line\">&#123;% endcode %&#125;</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<div class=\"note success\">\n            <h4 id=\"Codeblock-in-note\"><a href=\"#Codeblock-in-note\" class=\"headerlink\" title=\"Codeblock in note\"></a>Codeblock in note</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">code block in note tag</span><br><span class=\"line\">code block in note tag</span><br><span class=\"line\">code block in note tag</span><br></pre></td></tr></table></figure>\n          </div>\n\n\n<h1 id=\"欄位切換\"><a href=\"#欄位切換\" class=\"headerlink\" title=\"欄位切換\"></a>欄位切換</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% tabs First unique name %&#125;</span><br><span class=\"line\">&lt;!-- tab --&gt;</span><br><span class=\"line\">**This <span class=\"keyword\">is</span> Tab <span class=\"number\">1.</span>**</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&lt;!-- tab --&gt;</span><br><span class=\"line\">**This <span class=\"keyword\">is</span> Tab <span class=\"number\">2.</span>**</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&lt;!-- tab --&gt;</span><br><span class=\"line\">**This <span class=\"keyword\">is</span> Tab <span class=\"number\">3.</span>**</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>\n<p>顯示效果：</p>\n<div class=\"tabs\" id=\"first-unique-name\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#first-unique-name-1\">First unique name 1</a></li><li class=\"tab\"><a href=\"#first-unique-name-2\">First unique name 2</a></li><li class=\"tab\"><a href=\"#first-unique-name-3\">First unique name 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"first-unique-name-1\"><p><strong>This is Tab 1.</strong></p></div><div class=\"tab-pane\" id=\"first-unique-name-2\"><p><strong>This is Tab 2.</strong></p></div><div class=\"tab-pane\" id=\"first-unique-name-3\"><p><strong>This is Tab 3.</strong></p></div></div></div>\n\n<h1 id=\"畫線螢光\"><a href=\"#畫線螢光\" class=\"headerlink\" title=\"畫線螢光\"></a>畫線螢光</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">Lorem &#123;% label @ipsum %&#125; &#123;% label primary@dolor sit %&#125; amet, consectetur &#123;% label success@adipiscing elit, %&#125; sed &#123;% label info@do eiusmod %&#125; tempor incididunt ut labore et dolore magna aliqua.</span><br><span class=\"line\">Ut enim *&#123;% label warning @ad %&#125;* minim veniam, quis **&#123;% label danger@nostrud %&#125;** exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</span><br><span class=\"line\">Duis aute irure dolor <span class=\"keyword\">in</span> reprehenderit <span class=\"keyword\">in</span> voluptate ~~&#123;% label default @velit %&#125;~~ &lt;mark&gt;esse&lt;/mark&gt; cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt <span class=\"keyword\">in</span> culpa qui officia deserunt mollit anim <span class=\"built_in\">id</span> est laborum.</span><br></pre></td></tr></table></figure>\n<p>顯示效果：<br>Lorem <span class=\"label default\">ipsum</span> <span class=\"label primary\">dolor sit</span> amet, consectetur <span class=\"label success\">adipiscing elit,</span> sed <span class=\"label info\">do eiusmod</span> tempor incididunt ut labore et dolore magna aliqua.<br>Ut enim <em><span class=\"label warning\">ad</span></em> minim veniam, quis <strong><span class=\"label danger\">nostrud</span></strong> exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.<br>Duis aute irure dolor in reprehenderit in voluptate <del><span class=\"label default\">velit</span></del> <mark>esse</mark> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n<h3 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h3><p><a href=\"https://knner.wang/2019/11/03/Hexo-ThemeNext-Writing.html#\">部落格更多效果</a><br><a href=\"https://blog.csdn.net/lewky_liu/article/details/89932214\">CSDN更多效果</a></p>\n","categories":["python"],"tags":["學習筆記,子分之"]}]